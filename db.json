{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/imgs/1405242-1.jpg","path":"imgs/1405242-1.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-2.jpg","path":"imgs/1405242-2.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-3.jpg","path":"imgs/1405242-3.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-4.jpg","path":"imgs/1405242-4.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-5.jpg","path":"imgs/1405242-5.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-6.jpg","path":"imgs/1405242-6.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-7.jpg","path":"imgs/1405242-7.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-8.jpg","path":"imgs/1405242-8.jpg","modified":0,"renderable":0},{"_id":"source/imgs/1405242-9.jpg","path":"imgs/1405242-9.jpg","modified":0,"renderable":0},{"_id":"source/imgs/forkme_right_white_ffffff.png","path":"imgs/forkme_right_white_ffffff.png","modified":0,"renderable":0},{"_id":"source/imgs/gitMerge.png","path":"imgs/gitMerge.png","modified":0,"renderable":0},{"_id":"source/imgs/smile03.jpg","path":"imgs/smile03.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile07.jpg","path":"imgs/smile07.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile09.jpg","path":"imgs/smile09.jpg","modified":0,"renderable":0},{"_id":"source/imgs/vim.jpg","path":"imgs/vim.jpg","modified":0,"renderable":0},{"_id":"source/imgs/神偷奶爸02.jpg","path":"imgs/神偷奶爸02.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile01.jpg","path":"imgs/smile01.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile02.jpg","path":"imgs/smile02.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile04.jpg","path":"imgs/smile04.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile05.jpg","path":"imgs/smile05.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile06.jpg","path":"imgs/smile06.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile08.jpg","path":"imgs/smile08.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile10.jpg","path":"imgs/smile10.jpg","modified":0,"renderable":0},{"_id":"source/imgs/smile11.jpg","path":"imgs/smile11.jpg","modified":0,"renderable":0},{"_id":"source/imgs/snippet.png","path":"imgs/snippet.png","modified":0,"renderable":0},{"_id":"source/imgs/vs2013Error/vs2013Error01.png","path":"imgs/vs2013Error/vs2013Error01.png","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"source/imgs/django/django-01.png","path":"imgs/django/django-01.png","modified":0,"renderable":0},{"_id":"source/imgs/django/django-02.png","path":"imgs/django/django-02.png","modified":0,"renderable":0},{"_id":"source/imgs/linux-shell-commands/topCMD.jpg","path":"imgs/linux-shell-commands/topCMD.jpg","modified":0,"renderable":0},{"_id":"source/imgs/vs2013Error/vs2013Error02.png","path":"imgs/vs2013Error/vs2013Error02.png","modified":0,"renderable":0},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm01.jpg","path":"imgs/meiwen/0918/mw_bgkcygdcyzzxsm01.jpg","modified":0,"renderable":0},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm02.jpg","path":"imgs/meiwen/0918/mw_bgkcygdcyzzxsm02.jpg","modified":0,"renderable":0},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm03.jpg","path":"imgs/meiwen/0918/mw_bgkcygdcyzzxsm03.jpg","modified":0,"renderable":0},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm04.jpg","path":"imgs/meiwen/0918/mw_bgkcygdcyzzxsm04.jpg","modified":0,"renderable":0},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm05.jpg","path":"imgs/meiwen/0918/mw_bgkcygdcyzzxsm05.jpg","modified":0,"renderable":0},{"_id":"source/imgs/stencil shadows/stencil_shadows01.png","path":"imgs/stencil shadows/stencil_shadows01.png","modified":0,"renderable":0},{"_id":"source/imgs/stencil shadows/stencil_shadows02.png","path":"imgs/stencil shadows/stencil_shadows02.png","modified":0,"renderable":0},{"_id":"source/imgs/stencil shadows/stencil_shadows03.png","path":"imgs/stencil shadows/stencil_shadows03.png","modified":0,"renderable":0},{"_id":"source/imgs/stencil shadows/stencil_shadows04.png","path":"imgs/stencil shadows/stencil_shadows04.png","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"source/imgs/Gravity Parkour/Parkour.png","path":"imgs/Gravity Parkour/Parkour.png","modified":0,"renderable":0},{"_id":"source/imgs/django/django-03.png","path":"imgs/django/django-03.png","modified":0,"renderable":0},{"_id":"source/imgs/服务器功能.jpeg","path":"imgs/服务器功能.jpeg","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"source/imgs/software-develop/software_developer01.png","path":"imgs/software-develop/software_developer01.png","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1518536854558},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1518536854558},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1518536854558},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1518536854558},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1518536854558},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1518536854562},{"_id":"source/_posts/C-流.md","hash":"a0218f9bf04ff71f8f036d27debb4db4e04f640b","modified":1518537798000},{"_id":"source/_posts/Protobuf-inheritance.md","hash":"5f931467b5b35974144a39063e24f6993cd7583a","modified":1518537798000},{"_id":"source/_posts/Python3-x和Python2-x差别.md","hash":"66bb8b68c336ecc9baee0a33d1db3d1c8bc1cf63","modified":1518537798000},{"_id":"source/_posts/Requirements.md","hash":"29bc51eecf848798c2c6b1cb77528a031bcc9ba4","modified":1518537798000},{"_id":"source/_posts/Software-Construction-Important.md","hash":"8c19adbeaf6d8d2137b6ae169760ae6b741dfcc9","modified":1518537798000},{"_id":"source/_posts/Upstream-Prerequisites.md","hash":"173b52d17cb63f58213811a590a3e1dcf21c55c2","modified":1518537798000},{"_id":"source/_posts/django.md","hash":"af39d4fb7ba967441a2fde9f975f145c155d78ff","modified":1518537798000},{"_id":"source/_posts/fork-me-on-GitHub.md","hash":"99c15272e4ca22ef30443f925f3d1680a6ece358","modified":1518537798000},{"_id":"source/_posts/git-command.md","hash":"1e51d412bc040384da5d40c7200640d28e5dcefb","modified":1518544215886},{"_id":"source/_posts/git-log.md","hash":"79e1c16b1e98644b824a1a78d01238ee28c91e46","modified":1518537798000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1518536842501},{"_id":"source/_posts/linux-shell-commands.md","hash":"c20bc61db2d7edceb328be573c863557abb024a1","modified":1518537798000},{"_id":"source/_posts/mysql.md","hash":"71a69bb8794090ef9812d84cba6cba7f05b687f6","modified":1518537798000},{"_id":"source/_posts/vs-自定义注释-代码段.md","hash":"311ec89814c6efb468b762101ade14bd2ef9d899","modified":1518537798000},{"_id":"source/_posts/win8-1-update-to-win10-vs2013-bug.md","hash":"44324b335671ecb86415bb31b4d41dfd07e2cb03","modified":1518537798000},{"_id":"source/_posts/不敢开除员工的创业者在想什么？.md","hash":"69080f97bec92e24ef55faad7563e4f73d2e9c05","modified":1518537798000},{"_id":"source/_posts/工作总结.md","hash":"380a20f97d673f4bb54067bde8bb3d2971fc8a98","modified":1518537798000},{"_id":"source/_posts/瑞士钟表匠.md","hash":"0776471ff49342fe9c91202082c4088400c042ef","modified":1518537798000},{"_id":"source/imgs/1405242-1.jpg","hash":"5f71b4a4049c0d376516f0cd98260b0542e55d11","modified":1518537798000},{"_id":"source/imgs/1405242-2.jpg","hash":"502b1aa7cccf5a12aad52890d5a9dd6e4e9cf872","modified":1518537798000},{"_id":"source/imgs/1405242-3.jpg","hash":"72840758a5d58ee4f8848659db8b2c53d67dae12","modified":1518537798000},{"_id":"source/imgs/1405242-4.jpg","hash":"93e760b78f880d79242645f696338a83a260bffb","modified":1518537798000},{"_id":"source/imgs/1405242-5.jpg","hash":"54fde0def916e5025eeb0f9e6475cfc84bdcd760","modified":1518537798000},{"_id":"source/imgs/1405242-6.jpg","hash":"6a598f07c5c45f6fa7f4302320b99aaaf8354bae","modified":1518537798000},{"_id":"source/imgs/1405242-7.jpg","hash":"3441c05ead2afe1b51d447599e415ff20dc31d34","modified":1518537798000},{"_id":"source/imgs/1405242-8.jpg","hash":"57607bdbc615654300b8a4c78cbb123fdc38fc37","modified":1518537798000},{"_id":"source/imgs/1405242-9.jpg","hash":"e6ba9061233826ec66ab2fe5f6b1ccbbb893336e","modified":1518537798000},{"_id":"source/imgs/forkme_right_white_ffffff.png","hash":"228d420b8ddac2332f0a7cd5d4228179bf022bbd","modified":1518537798000},{"_id":"source/imgs/gitMerge.png","hash":"a7b6cd658f0c845b8e9176b322d28710e38de463","modified":1518537798000},{"_id":"source/imgs/smile03.jpg","hash":"3759d448a021b42645a5e59aeb954e6c69105cba","modified":1518537798000},{"_id":"source/imgs/smile07.jpg","hash":"7c2fab6c84fab26137b59b1cbce7a705f0aa4b80","modified":1518537798000},{"_id":"source/imgs/smile09.jpg","hash":"655cbea2dd5d3f17a49881a057aaf606a3126b40","modified":1518537798000},{"_id":"source/imgs/vim.jpg","hash":"b178af99560ce5ae46338cdbc6fddf6b4f485b7c","modified":1518537798000},{"_id":"source/imgs/神偷奶爸02.jpg","hash":"932a393b3f8a8686dc9b7d63fe2e41e08e456344","modified":1518537798000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1518536854559},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1518536854559},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1518536854559},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1518536854559},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1518536854559},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1518536854560},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1518536854560},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1518536854560},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1518536854560},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1518536854560},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1518536854560},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1518536854560},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1518536854562},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1518536854562},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1518536854562},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1518536854562},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1518536854562},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1518536854562},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1518536854562},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1518536854562},{"_id":"source/imgs/smile01.jpg","hash":"b26ab7d5de4bb970f27156b5ecbecb3ad1eaa2f4","modified":1518537798000},{"_id":"source/imgs/smile02.jpg","hash":"a7acb9545de63da1678e1c384946fe7d4778376b","modified":1518537798000},{"_id":"source/imgs/smile04.jpg","hash":"292e7e3ba2ab67f147bfbbca89869c4ce2d677f2","modified":1518537798000},{"_id":"source/imgs/smile05.jpg","hash":"a35af8f6db13bfebf0a5240df2949240e1e6cb3a","modified":1518537798000},{"_id":"source/imgs/smile06.jpg","hash":"54fe8a7434abe464dc220efb3bf290ae7c9829db","modified":1518537798000},{"_id":"source/imgs/smile08.jpg","hash":"92f4ca8094416b53af2ca71f80a082067300b619","modified":1518537798000},{"_id":"source/imgs/smile10.jpg","hash":"0cab20c219ea52963d8636de0170369e7dbd9bf5","modified":1518537798000},{"_id":"source/imgs/smile11.jpg","hash":"5b25c48b45e158c78a89db32aa75c0cee6f959a5","modified":1518537798000},{"_id":"source/imgs/snippet.png","hash":"22dd110c334c38c8da53fe96e9a3dde63c3b28be","modified":1518537798000},{"_id":"source/imgs/vs2013Error/vs2013Error01.png","hash":"6c4faf9a5089cbd76b275dcb9e2b9988f475ebb6","modified":1518537798000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1518536854560},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1518536854560},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1518536854560},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1518536854560},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1518536854560},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1518536854560},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1518536854560},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1518536854561},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1518536854561},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1518536854561},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1518536854561},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1518536854561},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1518536854562},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1518536854562},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1518536854563},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1518536854574},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1518536854574},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1518536854575},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1518536854578},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1518536854579},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1518536854579},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1518536854579},{"_id":"source/imgs/django/django-01.png","hash":"1c2029dd87a4b2031cd3aa7d605952fe17bf90b2","modified":1518537798000},{"_id":"source/imgs/django/django-02.png","hash":"4999fb529d9a599cc302ec0618bd129aac699c5d","modified":1518537798000},{"_id":"source/imgs/linux-shell-commands/topCMD.jpg","hash":"d8f3cc36402f2e628c99b11da6c3eda810f03215","modified":1518537798000},{"_id":"source/imgs/vs2013Error/vs2013Error02.png","hash":"11cf78ac5233f786fb6450de1890da2a8df86964","modified":1518537798000},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm01.jpg","hash":"b9f779d09f776f012e7cc5793b6eab0043e86a5f","modified":1518537798000},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm02.jpg","hash":"ef169830bc52412d0434f913746f9aaea5327f3c","modified":1518537798000},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm03.jpg","hash":"6009e23d33a741e9c1e8c9296727b51afc483f57","modified":1518537798000},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm04.jpg","hash":"73691b925a707963d27c2bfca3e7590b5823384f","modified":1518537798000},{"_id":"source/imgs/meiwen/0918/mw_bgkcygdcyzzxsm05.jpg","hash":"d7850454eb8fc49dbf28c0baa7839b1dc73b4834","modified":1518537798000},{"_id":"source/imgs/stencil shadows/stencil_shadows01.png","hash":"9352c792481a4a31bb97ebc2038961ff1101d590","modified":1518537798000},{"_id":"source/imgs/stencil shadows/stencil_shadows02.png","hash":"64e1a926ef0a88b06372d7a68f594869fc53ead1","modified":1518537798000},{"_id":"source/imgs/stencil shadows/stencil_shadows03.png","hash":"64e1a926ef0a88b06372d7a68f594869fc53ead1","modified":1518537798000},{"_id":"source/imgs/stencil shadows/stencil_shadows04.png","hash":"bc6dc79381201a1e178f7479b67c1d1eaf4e9252","modified":1518537798000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1518536854561},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1518536854561},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1518536854563},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1518536854563},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1518536854563},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1518536854563},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1518536854565},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1518536854565},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1518536854571},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1518536854576},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1518536854578},{"_id":"source/imgs/Gravity Parkour/Parkour.png","hash":"059f16b5113ce0b5b87b8a73da79407052c7773e","modified":1518537798000},{"_id":"source/imgs/django/django-03.png","hash":"9e0a62bc63d29be09c5e9ec13d0fb4b9e268399e","modified":1518537798000},{"_id":"source/imgs/服务器功能.jpeg","hash":"93ce664c333e45ec815c4acc066494bbfc0056e7","modified":1518537798000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1518536854571},{"_id":"source/imgs/software-develop/software_developer01.png","hash":"95e3b03c2bf6ad381bfb0b190e6270815950a3a8","modified":1518537798000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1518536854567},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1518536854574},{"_id":"public/2018/02/13/hello-world/index.html","hash":"4a86623ee6b4c18360b9917e4d8f3fee3041e527","modified":1518543662408},{"_id":"public/2015/09/23/mysql/index.html","hash":"111bed27cd8fdcd655ca4b364dd4a820ec5c2a9b","modified":1518543662408},{"_id":"public/2015/09/18/不敢开除员工的创业者在想什么？/index.html","hash":"a31ce237199c4385eb328de18faa00c85d5ca0e2","modified":1518543662409},{"_id":"public/2015/09/10/Requirements/index.html","hash":"7e3dd7a88d2aec802685e372d179068aece9765b","modified":1518543662409},{"_id":"public/2015/09/10/工作总结/index.html","hash":"5ccc574bf45d617614e0cdf174abb52cb7679820","modified":1518543662409},{"_id":"public/2015/09/08/linux-shell-commands/index.html","hash":"96f9ff601f38e597fffc476d040d8afcdde67132","modified":1518543662409},{"_id":"public/2015/09/06/Software-Construction-Important/index.html","hash":"5baed614d319901e0337c259055e027baa8b3ef2","modified":1518543662409},{"_id":"public/2015/09/06/Python3-x和Python2-x差别/index.html","hash":"df15245966d2b1d513fa896e65f2aff6b7ce9450","modified":1518543662409},{"_id":"public/2015/08/11/C-流/index.html","hash":"d0498bd56f4f5b8eea058e432d096800a25c9582","modified":1518543662409},{"_id":"public/2015/08/04/Protobuf-inheritance/index.html","hash":"421e987e98fbf527eb2cd7623d9e3036ddc3ae70","modified":1518543662409},{"_id":"public/2015/07/31/git-log/index.html","hash":"e7b8093a2acf0db0d8051effa9b3f38ecd4886e3","modified":1518543662409},{"_id":"public/2015/07/30/win8-1-update-to-win10-vs2013-bug/index.html","hash":"5b240a2b87d5afe55d0fffcc061cb0433fe4244d","modified":1518543662409},{"_id":"public/2015/07/28/fork-me-on-GitHub/index.html","hash":"c2cec4e941b8898bd7f0b557d81edb187816544c","modified":1518543662409},{"_id":"public/2015/07/22/git-command/index.html","hash":"5516ee4a1e745d298eac1cea9a9452355a0ae4fa","modified":1518544228044},{"_id":"public/archives/index.html","hash":"45fddca11800b57a20916ffae1de0bba21e90d9b","modified":1518543662409},{"_id":"public/archives/page/2/index.html","hash":"7a7bdafe5c165865211d65b2d218eff36e4f0ca2","modified":1518543662409},{"_id":"public/archives/2015/index.html","hash":"c8a87d4ac6563a6acd1bae9388b86c4166f1499a","modified":1518543662409},{"_id":"public/archives/2015/page/2/index.html","hash":"651182fbbcecb20b98c4857e200fee1cff2939c5","modified":1518543662409},{"_id":"public/archives/2015/07/index.html","hash":"50d3e82ac3cd4d8cabf84b04cfeeac5a13aec423","modified":1518543662409},{"_id":"public/archives/2015/08/index.html","hash":"8b44efbc3df430fc1b1cd4c5e1f4beb2c223c973","modified":1518543662409},{"_id":"public/archives/2015/09/index.html","hash":"02e7e2a1ded60b0f331e38c1dd37bcf43327999e","modified":1518543662410},{"_id":"public/archives/2018/index.html","hash":"cc2201c3e5fd4b1da320a0a879a1421bc5592506","modified":1518543662410},{"_id":"public/archives/2018/02/index.html","hash":"aa1d6a3fef65ec8659683e7cc4907e2bbec700a5","modified":1518543662410},{"_id":"public/tags/protobuf/index.html","hash":"1d1278a2ee842ce35a8342d3e11729d8a6ef0fde","modified":1518543662410},{"_id":"public/tags/python/index.html","hash":"9b8a874249da6c28972f3c8143276f0bf7a4a0d5","modified":1518543662410},{"_id":"public/tags/django/index.html","hash":"31580d9e4adcbb133b6d0204ef7cabb332014b9a","modified":1518543662410},{"_id":"public/tags/Software-Requirements/index.html","hash":"d1037f07e3b61e7446d0b73d3b4c18b6dc45ac05","modified":1518543662410},{"_id":"public/tags/CODE-COMPLETE/index.html","hash":"9b4aea266a7dc220a9b9249c66182965d74d74ee","modified":1518543662410},{"_id":"public/tags/git/index.html","hash":"3bbf1229315620f4af419d6461cdf1a5067a3dd6","modified":1518543662410},{"_id":"public/tags/tools/index.html","hash":"ffe8c50f7c66246d02cae11cba0e2c9d2c42fb10","modified":1518543662410},{"_id":"public/tags/LINUX/index.html","hash":"d2f97d60522d418f5801c25927bb97fdb576b59c","modified":1518543662410},{"_id":"public/tags/cmd-line/index.html","hash":"138d5407ba861d2b9dbef4691839702c33032a52","modified":1518543662410},{"_id":"public/tags/mysql/index.html","hash":"4a44e317a1ee7679abe2598690123de48dfdac15","modified":1518543662410},{"_id":"public/tags/visual-studio/index.html","hash":"1bd158f049041d7ccedddf3ba569907c30bc3649","modified":1518543662410},{"_id":"public/tags/美文/index.html","hash":"564b18d78a9a5a5601756301fecd953cff8ae17c","modified":1518543662410},{"_id":"public/tags/boss/index.html","hash":"c32917d862d6c6119154e53413174603e7acfbb9","modified":1518543662410},{"_id":"public/2015/09/17/瑞士钟表匠/index.html","hash":"687eebc245e6543277a5fab3443d14a3f47a2a53","modified":1518543662410},{"_id":"public/2015/09/10/Upstream-Prerequisites/index.html","hash":"8aeb6e15cc7a83a366fae44680d72d0488d2db80","modified":1518543662410},{"_id":"public/2015/08/12/django/index.html","hash":"d84b85fc99350d17d57675656532faf357c8b36b","modified":1518543662410},{"_id":"public/2015/07/28/vs-自定义注释-代码段/index.html","hash":"67356827c7048adaf16f31b6d6b86646eb749156","modified":1518543662410},{"_id":"public/index.html","hash":"5cb5a8cb840b73d9e0e8efbb9dd9bfcefc04e91e","modified":1518543662410},{"_id":"public/page/2/index.html","hash":"b36ac5560786055a2220ba0e983a1cd76048bbdf","modified":1518544228044},{"_id":"public/imgs/1405242-1.jpg","hash":"5f71b4a4049c0d376516f0cd98260b0542e55d11","modified":1518543662417},{"_id":"public/imgs/1405242-2.jpg","hash":"502b1aa7cccf5a12aad52890d5a9dd6e4e9cf872","modified":1518543662417},{"_id":"public/imgs/1405242-3.jpg","hash":"72840758a5d58ee4f8848659db8b2c53d67dae12","modified":1518543662417},{"_id":"public/imgs/1405242-4.jpg","hash":"93e760b78f880d79242645f696338a83a260bffb","modified":1518543662417},{"_id":"public/imgs/1405242-5.jpg","hash":"54fde0def916e5025eeb0f9e6475cfc84bdcd760","modified":1518543662417},{"_id":"public/imgs/1405242-6.jpg","hash":"6a598f07c5c45f6fa7f4302320b99aaaf8354bae","modified":1518543662427},{"_id":"public/imgs/1405242-7.jpg","hash":"3441c05ead2afe1b51d447599e415ff20dc31d34","modified":1518543662427},{"_id":"public/imgs/1405242-8.jpg","hash":"57607bdbc615654300b8a4c78cbb123fdc38fc37","modified":1518543662427},{"_id":"public/imgs/1405242-9.jpg","hash":"e6ba9061233826ec66ab2fe5f6b1ccbbb893336e","modified":1518543662427},{"_id":"public/imgs/forkme_right_white_ffffff.png","hash":"228d420b8ddac2332f0a7cd5d4228179bf022bbd","modified":1518543662427},{"_id":"public/imgs/gitMerge.png","hash":"a7b6cd658f0c845b8e9176b322d28710e38de463","modified":1518543662427},{"_id":"public/imgs/smile03.jpg","hash":"3759d448a021b42645a5e59aeb954e6c69105cba","modified":1518543662427},{"_id":"public/imgs/smile07.jpg","hash":"7c2fab6c84fab26137b59b1cbce7a705f0aa4b80","modified":1518543662427},{"_id":"public/imgs/smile09.jpg","hash":"655cbea2dd5d3f17a49881a057aaf606a3126b40","modified":1518543662427},{"_id":"public/imgs/vim.jpg","hash":"b178af99560ce5ae46338cdbc6fddf6b4f485b7c","modified":1518543662427},{"_id":"public/imgs/神偷奶爸02.jpg","hash":"932a393b3f8a8686dc9b7d63fe2e41e08e456344","modified":1518543662427},{"_id":"public/imgs/vs2013Error/vs2013Error01.png","hash":"6c4faf9a5089cbd76b275dcb9e2b9988f475ebb6","modified":1518543662427},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1518543662428},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1518543662428},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1518543662428},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1518543662428},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1518543662428},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1518543662428},{"_id":"public/imgs/meiwen/0918/mw_bgkcygdcyzzxsm01.jpg","hash":"b9f779d09f776f012e7cc5793b6eab0043e86a5f","modified":1518543662428},{"_id":"public/imgs/meiwen/0918/mw_bgkcygdcyzzxsm02.jpg","hash":"ef169830bc52412d0434f913746f9aaea5327f3c","modified":1518543662428},{"_id":"public/imgs/meiwen/0918/mw_bgkcygdcyzzxsm03.jpg","hash":"6009e23d33a741e9c1e8c9296727b51afc483f57","modified":1518543662428},{"_id":"public/imgs/meiwen/0918/mw_bgkcygdcyzzxsm04.jpg","hash":"73691b925a707963d27c2bfca3e7590b5823384f","modified":1518543662428},{"_id":"public/imgs/meiwen/0918/mw_bgkcygdcyzzxsm05.jpg","hash":"d7850454eb8fc49dbf28c0baa7839b1dc73b4834","modified":1518543662428},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1518543662428},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1518543662428},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1518543662428},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1518543662428},{"_id":"public/imgs/smile01.jpg","hash":"b26ab7d5de4bb970f27156b5ecbecb3ad1eaa2f4","modified":1518543662759},{"_id":"public/imgs/smile02.jpg","hash":"a7acb9545de63da1678e1c384946fe7d4778376b","modified":1518543662759},{"_id":"public/imgs/smile04.jpg","hash":"292e7e3ba2ab67f147bfbbca89869c4ce2d677f2","modified":1518543662760},{"_id":"public/imgs/smile05.jpg","hash":"a35af8f6db13bfebf0a5240df2949240e1e6cb3a","modified":1518543662760},{"_id":"public/imgs/smile06.jpg","hash":"54fe8a7434abe464dc220efb3bf290ae7c9829db","modified":1518543662761},{"_id":"public/imgs/smile08.jpg","hash":"92f4ca8094416b53af2ca71f80a082067300b619","modified":1518543662761},{"_id":"public/imgs/smile10.jpg","hash":"0cab20c219ea52963d8636de0170369e7dbd9bf5","modified":1518543662761},{"_id":"public/imgs/smile11.jpg","hash":"5b25c48b45e158c78a89db32aa75c0cee6f959a5","modified":1518543662761},{"_id":"public/imgs/snippet.png","hash":"22dd110c334c38c8da53fe96e9a3dde63c3b28be","modified":1518543662765},{"_id":"public/imgs/django/django-01.png","hash":"1c2029dd87a4b2031cd3aa7d605952fe17bf90b2","modified":1518543662766},{"_id":"public/imgs/django/django-02.png","hash":"4999fb529d9a599cc302ec0618bd129aac699c5d","modified":1518543662766},{"_id":"public/imgs/linux-shell-commands/topCMD.jpg","hash":"d8f3cc36402f2e628c99b11da6c3eda810f03215","modified":1518543662766},{"_id":"public/imgs/vs2013Error/vs2013Error02.png","hash":"11cf78ac5233f786fb6450de1890da2a8df86964","modified":1518543662766},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1518543662791},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1518543662791},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1518543662792},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1518543662792},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1518543662792},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1518543662792},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1518543662792},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1518543662792},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1518543662792},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1518543662792},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1518543662792},{"_id":"public/imgs/stencil shadows/stencil_shadows01.png","hash":"9352c792481a4a31bb97ebc2038961ff1101d590","modified":1518543662792},{"_id":"public/imgs/stencil shadows/stencil_shadows02.png","hash":"64e1a926ef0a88b06372d7a68f594869fc53ead1","modified":1518543662792},{"_id":"public/imgs/stencil shadows/stencil_shadows03.png","hash":"64e1a926ef0a88b06372d7a68f594869fc53ead1","modified":1518543662792},{"_id":"public/imgs/stencil shadows/stencil_shadows04.png","hash":"bc6dc79381201a1e178f7479b67c1d1eaf4e9252","modified":1518543662792},{"_id":"public/imgs/Gravity Parkour/Parkour.png","hash":"059f16b5113ce0b5b87b8a73da79407052c7773e","modified":1518543662793},{"_id":"public/imgs/django/django-03.png","hash":"9e0a62bc63d29be09c5e9ec13d0fb4b9e268399e","modified":1518543662805},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1518543662805},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1518543662805},{"_id":"public/imgs/服务器功能.jpeg","hash":"93ce664c333e45ec815c4acc066494bbfc0056e7","modified":1518543662811},{"_id":"public/imgs/software-develop/software_developer01.png","hash":"95e3b03c2bf6ad381bfb0b190e6270815950a3a8","modified":1518543662811}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"C# 流","date":"2015-08-11T14:19:08.000Z","_content":"","source":"_posts/C-流.md","raw":"title: 'C# 流'\ndate: 2015-08-11 10:19:08\ntags:\n---\n","slug":"C-流","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxoser0000kypv6wty9fn4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Protobuf inheritance","date":"2015-08-04T23:21:21.000Z","_content":"\n***\n1.  protobuf-net for c#\n    序列化子类别时,需要在父类中ProtoInclude来确保父类数据，也正确\n    别序列化。\n\n        [ProtoInclude(1,typeof(DerivedClass))]\n        public class BaseClass\n        {\n        }\n","source":"_posts/Protobuf-inheritance.md","raw":"title: Protobuf inheritance\ndate: 2015-08-04 19:21:21\ntags:\n- protobuf\n---\n\n***\n1.  protobuf-net for c#\n    序列化子类别时,需要在父类中ProtoInclude来确保父类数据，也正确\n    别序列化。\n\n        [ProtoInclude(1,typeof(DerivedClass))]\n        public class BaseClass\n        {\n        }\n","slug":"Protobuf-inheritance","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosev0001kypvtr89exll","content":"<hr>\n<ol>\n<li><p>protobuf-net for c#<br>序列化子类别时,需要在父类中ProtoInclude来确保父类数据，也正确<br>别序列化。</p>\n<pre><code>[ProtoInclude(1,typeof(DerivedClass))]\npublic class BaseClass\n{\n}\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<ol>\n<li><p>protobuf-net for c#<br>序列化子类别时,需要在父类中ProtoInclude来确保父类数据，也正确<br>别序列化。</p>\n<pre><code>[ProtoInclude(1,typeof(DerivedClass))]\npublic class BaseClass\n{\n}\n</code></pre></li>\n</ol>\n"},{"title":"Python3.x和Python2.x差别","date":"2015-09-06T18:25:59.000Z","_content":"## 区别\n\n1.  print\n    3.x: print(info) 必须带()\n    2.x: print info  可要可不要()\n    \n2.  类别名\n    3.x: \n        def __str__(self):\n            pass\n    2.x:\n        def __unicode__(self):\n            pass\n          \n3.  字符集\n    3.x: 默认unicode, py文件格式为utf-8格式即可\n    2.x: ansic默认，中文需要 u'中文' 形式来实现。并且在py文件中显示声明 utf-8","source":"_posts/Python3-x和Python2-x差别.md","raw":"title: Python3.x和Python2.x差别\ndate: 2015-09-06 14:25:59\ntags:\n- python\n- django\n------\n## 区别\n\n1.  print\n    3.x: print(info) 必须带()\n    2.x: print info  可要可不要()\n    \n2.  类别名\n    3.x: \n        def __str__(self):\n            pass\n    2.x:\n        def __unicode__(self):\n            pass\n          \n3.  字符集\n    3.x: 默认unicode, py文件格式为utf-8格式即可\n    2.x: ansic默认，中文需要 u'中文' 形式来实现。并且在py文件中显示声明 utf-8","slug":"Python3-x和Python2-x差别","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosex0002kypvoieqmjir","content":"<h2 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h2><ol>\n<li><p>print<br>3.x: print(info) 必须带()<br>2.x: print info  可要可不要()</p>\n</li>\n<li><p>类别名<br>3.x: </p>\n<pre><code>def __str__(self):\n    pass\n</code></pre><p>2.x:</p>\n<pre><code>def __unicode__(self):\n    pass\n</code></pre></li>\n<li><p>字符集<br>3.x: 默认unicode, py文件格式为utf-8格式即可<br>2.x: ansic默认，中文需要 u’中文’ 形式来实现。并且在py文件中显示声明 utf-8</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h2><ol>\n<li><p>print<br>3.x: print(info) 必须带()<br>2.x: print info  可要可不要()</p>\n</li>\n<li><p>类别名<br>3.x: </p>\n<pre><code>def __str__(self):\n    pass\n</code></pre><p>2.x:</p>\n<pre><code>def __unicode__(self):\n    pass\n</code></pre></li>\n<li><p>字符集<br>3.x: 默认unicode, py文件格式为utf-8格式即可<br>2.x: ansic默认，中文需要 u’中文’ 形式来实现。并且在py文件中显示声明 utf-8</p>\n</li>\n</ol>\n"},{"title":"Requirements","date":"2015-09-10T20:15:57.000Z","_content":"> ##软件需求\n####需求是....指明必须实现什么的规格说明书,他描述了系统的行为,特性或属性,是在开发过程中对系统的约束\n\n***\n###第一部分 软件需求 是什么和为什么\n####1. 需求的层次\n * 三个不同的层次,业务需求,用户需求和功能需求\n####2. 每个项目都有需求\n * 开发软件系统最为困难的部分就是准确说明开发什么。最困难的概念性工作便是编写出详细技术需求,\n 这包括所有面向用户,面向机器和其他软件系统接口。同时这也是一旦做错,将最终会给系统带来极大损害的\n 部分,并且以后会对它进行修改也极为困难。\n * 等我真正明白你的需求时,我就会来告诉你。\n \n***\n***\n引用书籍:\n###1. [软件需求(第二版)](http://www.amazon.cn/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82-Karl-E-Wiegers/dp/B0011AX40Q/ref=sr_1_1?ie=UTF8&qid=1441873337&sr=8-1&keywords=%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82+%E7%AC%AC%E4%BA%8C%E7%89%88)","source":"_posts/Requirements.md","raw":"title: Requirements\ndate: 2015-09-10 16:15:57\ntags:\n- Software Requirements\n---\n> ##软件需求\n####需求是....指明必须实现什么的规格说明书,他描述了系统的行为,特性或属性,是在开发过程中对系统的约束\n\n***\n###第一部分 软件需求 是什么和为什么\n####1. 需求的层次\n * 三个不同的层次,业务需求,用户需求和功能需求\n####2. 每个项目都有需求\n * 开发软件系统最为困难的部分就是准确说明开发什么。最困难的概念性工作便是编写出详细技术需求,\n 这包括所有面向用户,面向机器和其他软件系统接口。同时这也是一旦做错,将最终会给系统带来极大损害的\n 部分,并且以后会对它进行修改也极为困难。\n * 等我真正明白你的需求时,我就会来告诉你。\n \n***\n***\n引用书籍:\n###1. [软件需求(第二版)](http://www.amazon.cn/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82-Karl-E-Wiegers/dp/B0011AX40Q/ref=sr_1_1?ie=UTF8&qid=1441873337&sr=8-1&keywords=%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82+%E7%AC%AC%E4%BA%8C%E7%89%88)","slug":"Requirements","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosf40004kypvneh740vx","content":"<blockquote>\n<p>##软件需求</p>\n<p>####需求是….指明必须实现什么的规格说明书,他描述了系统的行为,特性或属性,是在开发过程中对系统的约束</p>\n</blockquote>\n<hr>\n<p>###第一部分 软件需求 是什么和为什么</p>\n<p>####1. 需求的层次</p>\n<ul>\n<li>三个不同的层次,业务需求,用户需求和功能需求<br>####2. 每个项目都有需求</li>\n<li>开发软件系统最为困难的部分就是准确说明开发什么。最困难的概念性工作便是编写出详细技术需求,<br>这包括所有面向用户,面向机器和其他软件系统接口。同时这也是一旦做错,将最终会给系统带来极大损害的<br>部分,并且以后会对它进行修改也极为困难。</li>\n<li>等我真正明白你的需求时,我就会来告诉你。</li>\n</ul>\n<hr>\n<hr>\n<p>引用书籍:</p>\n<p>###1. <a href=\"http://www.amazon.cn/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82-Karl-E-Wiegers/dp/B0011AX40Q/ref=sr_1_1?ie=UTF8&amp;qid=1441873337&amp;sr=8-1&amp;keywords=%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82+%E7%AC%AC%E4%BA%8C%E7%89%88\" target=\"_blank\" rel=\"noopener\">软件需求(第二版)</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>##软件需求</p>\n<p>####需求是….指明必须实现什么的规格说明书,他描述了系统的行为,特性或属性,是在开发过程中对系统的约束</p>\n</blockquote>\n<hr>\n<p>###第一部分 软件需求 是什么和为什么</p>\n<p>####1. 需求的层次</p>\n<ul>\n<li>三个不同的层次,业务需求,用户需求和功能需求<br>####2. 每个项目都有需求</li>\n<li>开发软件系统最为困难的部分就是准确说明开发什么。最困难的概念性工作便是编写出详细技术需求,<br>这包括所有面向用户,面向机器和其他软件系统接口。同时这也是一旦做错,将最终会给系统带来极大损害的<br>部分,并且以后会对它进行修改也极为困难。</li>\n<li>等我真正明白你的需求时,我就会来告诉你。</li>\n</ul>\n<hr>\n<hr>\n<p>引用书籍:</p>\n<p>###1. <a href=\"http://www.amazon.cn/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82-Karl-E-Wiegers/dp/B0011AX40Q/ref=sr_1_1?ie=UTF8&amp;qid=1441873337&amp;sr=8-1&amp;keywords=%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82+%E7%AC%AC%E4%BA%8C%E7%89%88\" target=\"_blank\" rel=\"noopener\">软件需求(第二版)</a></p>\n"},{"title":"Software Construction","date":"2015-09-06T20:26:14.000Z","_content":"> #Software Construction\n \n***\n***\n\n##软件开发平面图\n####构建活动中的具体任务\n* 验证有关的基础工作已经完成.因此构建活动才得以顺利的进行下去。\n    如,需求分析\n*  确定如何测试所写的代码\n*  编码实现\n*  代码的单元测试，代码的集成测试，已经代码评审\n*  代码格式化合注释\n*  调整代码,让他更快，更省资源\n![软甲开发平面图](/imgs/software-develop/software_developer01.png)\n***\n\n##软件构建活动与非构建活动\n1.  ###非构建活动\n    ####1.1 管理\n    ####1.2 需求分析\n    ####1.3 用户界面设计\n    ####1.4 系统测试\n    ####1.5 维护\n    \n2.  ###构建活动\n    ####2.1 详细设计\n    ####2.2 编码实现\n    ####2.3 调试\n    ####2.4 集成\n    ####2.5 开发者测试\n\n***    \n##你对如何进行构建的理解程度,决定了你这名程序员的优秀程度。\n1.  明确需求分析,关键点，在未开始构建之前,就已经知道构建之后是什么样子了(包括如何使用，如何扩展等等).\n\n2.  构建之中,系统核心功能为主干，需要先明确以及验证是否达到需求目标。而后完善功能细节。\n    * 存在于世界上的任何逻辑,都依托于某种最基本的东西。\n    * 比如,盖房子需要先打地基,研发汽车需要合适的发动机，等等。软件模块间的数据流动，需要先明确接口。\n    * 一个软件模块，必定基于某种技术为主干。而后在此主干上细化和实现功能分支。及需要开发一个最小原形来验证,设计的合理性以及可行性。\n    * 基于以上验证，进行功能的开发,so easy.\n    * 随着开发，如果感觉到，实现越来越复杂，以及不确定性。此刻需要考虑到重构。软甲结构的调整。\n    \n3.  构建中的哲学,无论什么模块或系统,在编码和调试过程中,需要的是\n    * 随着时间的推移,随着整个模块/系统的完成度越来越高,程序员会感到各种功能实现越发容易。而非越来越难.\n      如果越来简单,开发越容易,那么至少软件架构合理,易于维护。\n      如果越到越难,开发越艰难,那么我么是时候重构代码.重新设计一下模块结构.\n    \n***\n##软件中的隐喻\n1.  ####你对隐喻有多理解,也决定了你对软开发有多理解\n\n2.  ####常见隐喻\n    1. Software Penmanship: Writing Code 软件中的书法:写作代码\n    2. Software Farming: Growing a System 软件的耕作法:培植系统\n    3. Software Oyster Farming: System Accretion 软件的牡蛎养殖观点: 系统生长\n     * 你需要学会如何一次为软件系统增加一个小部分\n       增量的(incremental),迭代的(iterative),自适应的(adaptive),演进的(evolutionary)\n     * 在进行增量式开发时,我们先做出软件系统的一个尽可能简单的,能够运行的版本,它不必接受真实\n       的输入,也无须对数据进行真正的处理,更不用产生真实的输，它仅仅需要构建一个足够强壮的骨架\n       支撑起未来开发的真实系统。对于你标志出来的每一个真实功能,可能仅仅需要调用虚假类(dummy classes).\n     * 这个最基本的起点,就像牡蛎开始孕育珍珠的那颗细小沙粒。\n       在骨架形成之后,你要一点点在其上附着肌肉和皮肤。将骨架中虚假的类,一点点替换。完成整个构建。\n       你一次次增加一小段代码,直到得到一个完全可以工作的系统.\n      \n    4. Software Construction: Building Software 软件构建:建造软件\n    \n     * 更复杂的结构,需要更加仔细的规划\n       在2.3的基础上,增加更详尽的计划。体检计划，运筹帷幄，然后在行动\n     * 精心的计划,并非意味着事无巨细的计划或者过度计划,你可以把房屋机构性的支撑(structural support)\n       规划清楚,而在日后再决定使用木地板还是地毯。\n    5. Applying Software Techniques: The Intellectual Toolbox 应用软件技术:智慧工具箱\n     * 技术并不是规矩,它只是分析工具。\n     \n    6. Combining Metaphors 组合各个隐喻\n     * 隐喻是一种启发式方法而不是算法，因此他们彼此并不排斥。\n     * 使用隐喻有是件说不清楚的事情,你需要适当的引申它的含义,才能从其蕴含的深刻启发中受益。\n     \n    7. KeyPoints\n     * 隐喻是启示不是算法,因此他们往往有一点随意。\n     * 隐喻把软件开发过程和你熟悉的活动联系在一起,帮助你更好的理解。\n     * 有些隐喻别其他一些隐喻更加贴切。\n     * 通过把软件的构建过程比喻成房屋的建设过程,我们可以发现,仔细的准备是必要的，而大型项目和\n       小型项目之间也是有差别的。\n     * 通过把软件开发中的实践比作是智慧工具箱中的工具,我们有发现,每位程序员都有许多\n       工具,因地制宜的选择正确工具,但并不存在于一个能适应所有工作的工具,因地制宜的选择正确工具,\n       是成为能有效变成的程序员的关键。\n     * 不同隐喻彼此并不排斥,应当使用对你最有益处的某种隐喻组合。\n     \n    999. Software is like a War.逐步推进,知己知彼,关键节点打通。\n    然而,战争关键节点往往是地理位置,它是已知的。软件开发的关键节点需要经验和反复验证。\n\n***\n***\n引用书籍:\n###1. [CODE COMPLETE 代码大全](http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&qid=1441693546&sr=8-1&keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8)","source":"_posts/Software-Construction-Important.md","raw":"title: Software Construction\ndate: 2015-09-06 16:26:14\ntags:\n- CODE COMPLETE\n---\n> #Software Construction\n \n***\n***\n\n##软件开发平面图\n####构建活动中的具体任务\n* 验证有关的基础工作已经完成.因此构建活动才得以顺利的进行下去。\n    如,需求分析\n*  确定如何测试所写的代码\n*  编码实现\n*  代码的单元测试，代码的集成测试，已经代码评审\n*  代码格式化合注释\n*  调整代码,让他更快，更省资源\n![软甲开发平面图](/imgs/software-develop/software_developer01.png)\n***\n\n##软件构建活动与非构建活动\n1.  ###非构建活动\n    ####1.1 管理\n    ####1.2 需求分析\n    ####1.3 用户界面设计\n    ####1.4 系统测试\n    ####1.5 维护\n    \n2.  ###构建活动\n    ####2.1 详细设计\n    ####2.2 编码实现\n    ####2.3 调试\n    ####2.4 集成\n    ####2.5 开发者测试\n\n***    \n##你对如何进行构建的理解程度,决定了你这名程序员的优秀程度。\n1.  明确需求分析,关键点，在未开始构建之前,就已经知道构建之后是什么样子了(包括如何使用，如何扩展等等).\n\n2.  构建之中,系统核心功能为主干，需要先明确以及验证是否达到需求目标。而后完善功能细节。\n    * 存在于世界上的任何逻辑,都依托于某种最基本的东西。\n    * 比如,盖房子需要先打地基,研发汽车需要合适的发动机，等等。软件模块间的数据流动，需要先明确接口。\n    * 一个软件模块，必定基于某种技术为主干。而后在此主干上细化和实现功能分支。及需要开发一个最小原形来验证,设计的合理性以及可行性。\n    * 基于以上验证，进行功能的开发,so easy.\n    * 随着开发，如果感觉到，实现越来越复杂，以及不确定性。此刻需要考虑到重构。软甲结构的调整。\n    \n3.  构建中的哲学,无论什么模块或系统,在编码和调试过程中,需要的是\n    * 随着时间的推移,随着整个模块/系统的完成度越来越高,程序员会感到各种功能实现越发容易。而非越来越难.\n      如果越来简单,开发越容易,那么至少软件架构合理,易于维护。\n      如果越到越难,开发越艰难,那么我么是时候重构代码.重新设计一下模块结构.\n    \n***\n##软件中的隐喻\n1.  ####你对隐喻有多理解,也决定了你对软开发有多理解\n\n2.  ####常见隐喻\n    1. Software Penmanship: Writing Code 软件中的书法:写作代码\n    2. Software Farming: Growing a System 软件的耕作法:培植系统\n    3. Software Oyster Farming: System Accretion 软件的牡蛎养殖观点: 系统生长\n     * 你需要学会如何一次为软件系统增加一个小部分\n       增量的(incremental),迭代的(iterative),自适应的(adaptive),演进的(evolutionary)\n     * 在进行增量式开发时,我们先做出软件系统的一个尽可能简单的,能够运行的版本,它不必接受真实\n       的输入,也无须对数据进行真正的处理,更不用产生真实的输，它仅仅需要构建一个足够强壮的骨架\n       支撑起未来开发的真实系统。对于你标志出来的每一个真实功能,可能仅仅需要调用虚假类(dummy classes).\n     * 这个最基本的起点,就像牡蛎开始孕育珍珠的那颗细小沙粒。\n       在骨架形成之后,你要一点点在其上附着肌肉和皮肤。将骨架中虚假的类,一点点替换。完成整个构建。\n       你一次次增加一小段代码,直到得到一个完全可以工作的系统.\n      \n    4. Software Construction: Building Software 软件构建:建造软件\n    \n     * 更复杂的结构,需要更加仔细的规划\n       在2.3的基础上,增加更详尽的计划。体检计划，运筹帷幄，然后在行动\n     * 精心的计划,并非意味着事无巨细的计划或者过度计划,你可以把房屋机构性的支撑(structural support)\n       规划清楚,而在日后再决定使用木地板还是地毯。\n    5. Applying Software Techniques: The Intellectual Toolbox 应用软件技术:智慧工具箱\n     * 技术并不是规矩,它只是分析工具。\n     \n    6. Combining Metaphors 组合各个隐喻\n     * 隐喻是一种启发式方法而不是算法，因此他们彼此并不排斥。\n     * 使用隐喻有是件说不清楚的事情,你需要适当的引申它的含义,才能从其蕴含的深刻启发中受益。\n     \n    7. KeyPoints\n     * 隐喻是启示不是算法,因此他们往往有一点随意。\n     * 隐喻把软件开发过程和你熟悉的活动联系在一起,帮助你更好的理解。\n     * 有些隐喻别其他一些隐喻更加贴切。\n     * 通过把软件的构建过程比喻成房屋的建设过程,我们可以发现,仔细的准备是必要的，而大型项目和\n       小型项目之间也是有差别的。\n     * 通过把软件开发中的实践比作是智慧工具箱中的工具,我们有发现,每位程序员都有许多\n       工具,因地制宜的选择正确工具,但并不存在于一个能适应所有工作的工具,因地制宜的选择正确工具,\n       是成为能有效变成的程序员的关键。\n     * 不同隐喻彼此并不排斥,应当使用对你最有益处的某种隐喻组合。\n     \n    999. Software is like a War.逐步推进,知己知彼,关键节点打通。\n    然而,战争关键节点往往是地理位置,它是已知的。软件开发的关键节点需要经验和反复验证。\n\n***\n***\n引用书籍:\n###1. [CODE COMPLETE 代码大全](http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&qid=1441693546&sr=8-1&keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8)","slug":"Software-Construction-Important","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosf50005kypv59n0eo2w","content":"<blockquote>\n<p>#Software Construction</p>\n</blockquote>\n<hr>\n<hr>\n<p>##软件开发平面图</p>\n<p>####构建活动中的具体任务</p>\n<ul>\n<li>验证有关的基础工作已经完成.因此构建活动才得以顺利的进行下去。<br>  如,需求分析</li>\n<li>确定如何测试所写的代码</li>\n<li>编码实现</li>\n<li>代码的单元测试，代码的集成测试，已经代码评审</li>\n<li>代码格式化合注释</li>\n<li>调整代码,让他更快，更省资源<br><img src=\"/imgs/software-develop/software_developer01.png\" alt=\"软甲开发平面图\"></li>\n</ul>\n<hr>\n<p>##软件构建活动与非构建活动</p>\n<ol>\n<li><p>###非构建活动<br>####1.1 管理<br>####1.2 需求分析<br>####1.3 用户界面设计<br>####1.4 系统测试<br>####1.5 维护</p>\n</li>\n<li><p>###构建活动<br>####2.1 详细设计<br>####2.2 编码实现<br>####2.3 调试<br>####2.4 集成<br>####2.5 开发者测试</p>\n</li>\n</ol>\n<hr>\n<p>##你对如何进行构建的理解程度,决定了你这名程序员的优秀程度。</p>\n<ol>\n<li><p>明确需求分析,关键点，在未开始构建之前,就已经知道构建之后是什么样子了(包括如何使用，如何扩展等等).</p>\n</li>\n<li><p>构建之中,系统核心功能为主干，需要先明确以及验证是否达到需求目标。而后完善功能细节。</p>\n<ul>\n<li>存在于世界上的任何逻辑,都依托于某种最基本的东西。</li>\n<li>比如,盖房子需要先打地基,研发汽车需要合适的发动机，等等。软件模块间的数据流动，需要先明确接口。</li>\n<li>一个软件模块，必定基于某种技术为主干。而后在此主干上细化和实现功能分支。及需要开发一个最小原形来验证,设计的合理性以及可行性。</li>\n<li>基于以上验证，进行功能的开发,so easy.</li>\n<li>随着开发，如果感觉到，实现越来越复杂，以及不确定性。此刻需要考虑到重构。软甲结构的调整。</li>\n</ul>\n</li>\n<li><p>构建中的哲学,无论什么模块或系统,在编码和调试过程中,需要的是</p>\n<ul>\n<li>随着时间的推移,随着整个模块/系统的完成度越来越高,程序员会感到各种功能实现越发容易。而非越来越难.<br>如果越来简单,开发越容易,那么至少软件架构合理,易于维护。<br>如果越到越难,开发越艰难,那么我么是时候重构代码.重新设计一下模块结构.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<p>##软件中的隐喻</p>\n<ol>\n<li><p>####你对隐喻有多理解,也决定了你对软开发有多理解</p>\n</li>\n<li><p>####常见隐喻</p>\n<ol>\n<li>Software Penmanship: Writing Code 软件中的书法:写作代码</li>\n<li>Software Farming: Growing a System 软件的耕作法:培植系统</li>\n<li><p>Software Oyster Farming: System Accretion 软件的牡蛎养殖观点: 系统生长</p>\n<ul>\n<li>你需要学会如何一次为软件系统增加一个小部分<br>增量的(incremental),迭代的(iterative),自适应的(adaptive),演进的(evolutionary)</li>\n<li>在进行增量式开发时,我们先做出软件系统的一个尽可能简单的,能够运行的版本,它不必接受真实<br>的输入,也无须对数据进行真正的处理,更不用产生真实的输，它仅仅需要构建一个足够强壮的骨架<br>支撑起未来开发的真实系统。对于你标志出来的每一个真实功能,可能仅仅需要调用虚假类(dummy classes).</li>\n<li>这个最基本的起点,就像牡蛎开始孕育珍珠的那颗细小沙粒。<br>在骨架形成之后,你要一点点在其上附着肌肉和皮肤。将骨架中虚假的类,一点点替换。完成整个构建。<br>你一次次增加一小段代码,直到得到一个完全可以工作的系统.</li>\n</ul>\n</li>\n<li><p>Software Construction: Building Software 软件构建:建造软件</p>\n<ul>\n<li>更复杂的结构,需要更加仔细的规划<br>在2.3的基础上,增加更详尽的计划。体检计划，运筹帷幄，然后在行动</li>\n<li>精心的计划,并非意味着事无巨细的计划或者过度计划,你可以把房屋机构性的支撑(structural support)<br>规划清楚,而在日后再决定使用木地板还是地毯。</li>\n</ul>\n</li>\n<li><p>Applying Software Techniques: The Intellectual Toolbox 应用软件技术:智慧工具箱</p>\n<ul>\n<li>技术并不是规矩,它只是分析工具。</li>\n</ul>\n</li>\n<li><p>Combining Metaphors 组合各个隐喻</p>\n<ul>\n<li>隐喻是一种启发式方法而不是算法，因此他们彼此并不排斥。</li>\n<li>使用隐喻有是件说不清楚的事情,你需要适当的引申它的含义,才能从其蕴含的深刻启发中受益。</li>\n</ul>\n</li>\n<li><p>KeyPoints</p>\n<ul>\n<li>隐喻是启示不是算法,因此他们往往有一点随意。</li>\n<li>隐喻把软件开发过程和你熟悉的活动联系在一起,帮助你更好的理解。</li>\n<li>有些隐喻别其他一些隐喻更加贴切。</li>\n<li>通过把软件的构建过程比喻成房屋的建设过程,我们可以发现,仔细的准备是必要的，而大型项目和<br>小型项目之间也是有差别的。</li>\n<li>通过把软件开发中的实践比作是智慧工具箱中的工具,我们有发现,每位程序员都有许多<br>工具,因地制宜的选择正确工具,但并不存在于一个能适应所有工作的工具,因地制宜的选择正确工具,<br>是成为能有效变成的程序员的关键。</li>\n<li>不同隐喻彼此并不排斥,应当使用对你最有益处的某种隐喻组合。</li>\n</ul>\n</li>\n<li><p>Software is like a War.逐步推进,知己知彼,关键节点打通。<br>然而,战争关键节点往往是地理位置,它是已知的。软件开发的关键节点需要经验和反复验证。</p>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<hr>\n<p>引用书籍:</p>\n<p>###1. <a href=\"http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&amp;qid=1441693546&amp;sr=8-1&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8\" target=\"_blank\" rel=\"noopener\">CODE COMPLETE 代码大全</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>#Software Construction</p>\n</blockquote>\n<hr>\n<hr>\n<p>##软件开发平面图</p>\n<p>####构建活动中的具体任务</p>\n<ul>\n<li>验证有关的基础工作已经完成.因此构建活动才得以顺利的进行下去。<br>  如,需求分析</li>\n<li>确定如何测试所写的代码</li>\n<li>编码实现</li>\n<li>代码的单元测试，代码的集成测试，已经代码评审</li>\n<li>代码格式化合注释</li>\n<li>调整代码,让他更快，更省资源<br><img src=\"/imgs/software-develop/software_developer01.png\" alt=\"软甲开发平面图\"></li>\n</ul>\n<hr>\n<p>##软件构建活动与非构建活动</p>\n<ol>\n<li><p>###非构建活动<br>####1.1 管理<br>####1.2 需求分析<br>####1.3 用户界面设计<br>####1.4 系统测试<br>####1.5 维护</p>\n</li>\n<li><p>###构建活动<br>####2.1 详细设计<br>####2.2 编码实现<br>####2.3 调试<br>####2.4 集成<br>####2.5 开发者测试</p>\n</li>\n</ol>\n<hr>\n<p>##你对如何进行构建的理解程度,决定了你这名程序员的优秀程度。</p>\n<ol>\n<li><p>明确需求分析,关键点，在未开始构建之前,就已经知道构建之后是什么样子了(包括如何使用，如何扩展等等).</p>\n</li>\n<li><p>构建之中,系统核心功能为主干，需要先明确以及验证是否达到需求目标。而后完善功能细节。</p>\n<ul>\n<li>存在于世界上的任何逻辑,都依托于某种最基本的东西。</li>\n<li>比如,盖房子需要先打地基,研发汽车需要合适的发动机，等等。软件模块间的数据流动，需要先明确接口。</li>\n<li>一个软件模块，必定基于某种技术为主干。而后在此主干上细化和实现功能分支。及需要开发一个最小原形来验证,设计的合理性以及可行性。</li>\n<li>基于以上验证，进行功能的开发,so easy.</li>\n<li>随着开发，如果感觉到，实现越来越复杂，以及不确定性。此刻需要考虑到重构。软甲结构的调整。</li>\n</ul>\n</li>\n<li><p>构建中的哲学,无论什么模块或系统,在编码和调试过程中,需要的是</p>\n<ul>\n<li>随着时间的推移,随着整个模块/系统的完成度越来越高,程序员会感到各种功能实现越发容易。而非越来越难.<br>如果越来简单,开发越容易,那么至少软件架构合理,易于维护。<br>如果越到越难,开发越艰难,那么我么是时候重构代码.重新设计一下模块结构.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<p>##软件中的隐喻</p>\n<ol>\n<li><p>####你对隐喻有多理解,也决定了你对软开发有多理解</p>\n</li>\n<li><p>####常见隐喻</p>\n<ol>\n<li>Software Penmanship: Writing Code 软件中的书法:写作代码</li>\n<li>Software Farming: Growing a System 软件的耕作法:培植系统</li>\n<li><p>Software Oyster Farming: System Accretion 软件的牡蛎养殖观点: 系统生长</p>\n<ul>\n<li>你需要学会如何一次为软件系统增加一个小部分<br>增量的(incremental),迭代的(iterative),自适应的(adaptive),演进的(evolutionary)</li>\n<li>在进行增量式开发时,我们先做出软件系统的一个尽可能简单的,能够运行的版本,它不必接受真实<br>的输入,也无须对数据进行真正的处理,更不用产生真实的输，它仅仅需要构建一个足够强壮的骨架<br>支撑起未来开发的真实系统。对于你标志出来的每一个真实功能,可能仅仅需要调用虚假类(dummy classes).</li>\n<li>这个最基本的起点,就像牡蛎开始孕育珍珠的那颗细小沙粒。<br>在骨架形成之后,你要一点点在其上附着肌肉和皮肤。将骨架中虚假的类,一点点替换。完成整个构建。<br>你一次次增加一小段代码,直到得到一个完全可以工作的系统.</li>\n</ul>\n</li>\n<li><p>Software Construction: Building Software 软件构建:建造软件</p>\n<ul>\n<li>更复杂的结构,需要更加仔细的规划<br>在2.3的基础上,增加更详尽的计划。体检计划，运筹帷幄，然后在行动</li>\n<li>精心的计划,并非意味着事无巨细的计划或者过度计划,你可以把房屋机构性的支撑(structural support)<br>规划清楚,而在日后再决定使用木地板还是地毯。</li>\n</ul>\n</li>\n<li><p>Applying Software Techniques: The Intellectual Toolbox 应用软件技术:智慧工具箱</p>\n<ul>\n<li>技术并不是规矩,它只是分析工具。</li>\n</ul>\n</li>\n<li><p>Combining Metaphors 组合各个隐喻</p>\n<ul>\n<li>隐喻是一种启发式方法而不是算法，因此他们彼此并不排斥。</li>\n<li>使用隐喻有是件说不清楚的事情,你需要适当的引申它的含义,才能从其蕴含的深刻启发中受益。</li>\n</ul>\n</li>\n<li><p>KeyPoints</p>\n<ul>\n<li>隐喻是启示不是算法,因此他们往往有一点随意。</li>\n<li>隐喻把软件开发过程和你熟悉的活动联系在一起,帮助你更好的理解。</li>\n<li>有些隐喻别其他一些隐喻更加贴切。</li>\n<li>通过把软件的构建过程比喻成房屋的建设过程,我们可以发现,仔细的准备是必要的，而大型项目和<br>小型项目之间也是有差别的。</li>\n<li>通过把软件开发中的实践比作是智慧工具箱中的工具,我们有发现,每位程序员都有许多<br>工具,因地制宜的选择正确工具,但并不存在于一个能适应所有工作的工具,因地制宜的选择正确工具,<br>是成为能有效变成的程序员的关键。</li>\n<li>不同隐喻彼此并不排斥,应当使用对你最有益处的某种隐喻组合。</li>\n</ul>\n</li>\n<li><p>Software is like a War.逐步推进,知己知彼,关键节点打通。<br>然而,战争关键节点往往是地理位置,它是已知的。软件开发的关键节点需要经验和反复验证。</p>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<hr>\n<p>引用书籍:</p>\n<p>###1. <a href=\"http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&amp;qid=1441693546&amp;sr=8-1&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8\" target=\"_blank\" rel=\"noopener\">CODE COMPLETE 代码大全</a></p>\n"},{"title":"Upstream Prerequisites","date":"2015-09-10T17:38:41.000Z","_content":">> ##前期准备\n\n***\n##三思而后行\n###1. 前期准备的重要性\n* 测试是不可能检测出诸如\"制造了一个错误的产品\",或者\"使用错误的方法制造正确的产品\"之类\n  的缺陷的。这样的缺陷必须在测试之前解决更确切的说是在构建活动之前。\n* 你可能会认为,所有的专业程序员都知道准备工作的重要性,并且在跃入构建活动之前会检查确认\n  所有先决条件都已经满足了,很不幸,这不是事实。\n * 然而那最近实现的一个模块来说: 这确实不是事实，由于诸多因素,比如个人经验和能力限制。\n   看不到构建之前的设计缺陷，导致构建过程中问题不断,构建活动推翻了前期的架构设计。\n   应为架构中预期的先决条件，在构建中才发现,这实现起来代价很大。\n   (服务器-负载均衡实现,就犯了这样的错误,先决条件没有确认,在构建构成中发现实现代价过大)\n * 做前期准备的活动的开发人员并不具备完成这一任务的专业技能。项目规划,创作引入注入的商业案例\n   分析出全面而准确的需求,创建高质量的架构等活动都需要一定的技能,这些技能不能轻而易举的获得\n   的,但是绝大多数的开发人员都没有结构果针对这一些活动的训练。当开发人员不知道如何进行这些前期\n   工作的时候,建议\"做更多的前期工作\"就完全没有用。如果不能首先把这项工作做好,那么做再多也没有意义。\n * 有一些程序员确实知道如何进行前期工作,但是他们并没有做,因为他们不能抵抗\"尽快开始编码\"的欲望\n * 程序员不做准备工作的最后一个原因,管理者们对那些\"花时间进行构建活动的前期准备的程序员\"的冷漠已经到了\n   人神共愤的程度。\n * 如果遇到那种命令你立即写代码的管理者.\n   * 第一种简单的说遵命(这没什么可怕的,老手当然知道他在说什么)这种回答很糟糕,你可以有几种跟好的替代方案\n     首先,你可以断然拒绝以这种无效的命令,加入你和老板的关系不错,而且你银行卡的钱数也支持你这么做的话,\n     祝你好运。\n   * 第二个不太靠的住的方案是假装在写代码,而事实上不是,在你的桌角上放一份旧的程序代码清单,然后投入需求\n     和架构当中去,同时不用理会老板同不同意,你将能更快的完成项目,并得到更高的质量。有些人会觉得这种方法不\n     合乎情理,但是从你老板的角度看,无知是福。\n   * 第三种方法是,你可以教育你的老板,告诉他技术项目的微妙之处,这是一个好办法,因为它能增加世界上脱盲老板的\n     人数。\n   * 最后一个方案是, 你可以另外找一份工作,虽然经济景气程度时高时低,但是优秀的程序员永远是紧缺的.人生苦短,当有\n     大量更好的选择摆在你面前的时候,在一个荒蛮的软件企业中工作是不明智的。\n   \n* ###然而,为什么抄书呢? \n   \n###2. 辨明你所从事的软件的类型\n* 商业系统\n* 使命攸关的系统\n* 性命攸关的嵌入式系统\n\n###3. 问题定义的先决条件\n* 在开始构建之前,首先要满足的一项先决条件是,对这个系统要解决的问题做一个清楚的陈述.\n  这有时称为\"产品设想\",设想陈述,任务陈述,产品定义,问题定义.\n\n* 问题定义,只定义了问题是什么,而不涉及任何可能的解决方案,听起来应该像是一个问题.\n  好的问题定义看上去像是这样:我们跟不上Gigatron的订单了\n  一个糟糕的问题定义可能是这样: 我们需要优化数据自动采集系统,使之跟上Gigatron的订单\n  \n###4. [需求的先决条件](/2015/09/10/Requirements/)\n* 需求分析是对所定义的问题的深入调查\n* \"需求\"详细描述软件系统应该做什么,这是达成解决方案的第一步。\n* 为什么需要明确的需求 Why Have Official Requirements\n  明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,\n  并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。\n  明确额的需求还有助于避免争论。\n* 如果没有好的需求,你可能对问题有总体的把握,但却没有击中问题的特定方面。\n* 稳定的需求是软件开发的圣杯。这表示\"一旦客户接受了一份需求文档,就再也不做更改\"是一个美好的愿景。\n  开发工程能够帮助客户更好的理解自己的需求,这是需求变更的主要来源,计划严格按照需求行事,实际上就是计划不对客户的需求做出回应。\n* 在构建期间处理需求变更\n * 确保每一个人都知道需求变更的代价\n * 建立一套变更控制程序\n * 使用能适应变更的开发方法\n * 放弃这个项目\n * 注意项目的商业案例\n \n###5. 架构的先决条件\n* 软件架构(software architecture)是软件设计的高层部分,是用于支撑更细节的设计的框架。\n* 架构的质量决定了系统的\"概念完整性\",后者继而决定了系统的最终质量.\n* 架构为程序员提供指引,它将工作分为几个部分,使多个开发团队可以独立工作.\n* 好的架构是构建活动变得更加容易,糟糕的架构则使构建活动几乎寸步难行。\n* ####架构的典型组成部分\n  * 程序组织 Program Organization\n    * 系统架构首先一概括的形式对有关系统做一个综述。\n    * 在架构中,你应该能发现对那些曾经考虑过的最终组织结构的替代方案的记述,找到之所以选用\n      最终的组织结构,而不用其他替代方案的理由。\n    * 架构应该定义程序的主要构造块(building blocks)。根据程序规模不同,各个构造块可能是单个类,也可能是由\n      单个类组成的一个子系统。每个构造块无论是一个类还是一个协同工作的类和子程序,它们共同实现一种高层功能,\n      诸如与用户交互,显示Web页面,解释命令,封装业务规则,访问数据,等等~~~\n    * 应该明确定义个个构造块的责任。每个构造块应该负责一个区域的事情,并对其他构造块负责的区域知道的越少越好。\n    * 应该明确定义各个构造块的通信规则\n  * 主要的类 Major Classes\n    架构应该详细定义所用的主要的类\n  * 数据设计 Data Design\n    架构应该描述所用到的主要文件和数据表的设计\n    数据通常只应该由一个子系统或一个类直接访问\n    架构应该详细定义所有数据库的高层组织结构和内容。\n  * 业务规则 Business Rules\n  * 用户界面设计 User Interface Design\n    用户界面常常在需求阶段进行详细说明。如果没有就应该在软件架构中进行详细说明\n    架构应该模块化,以便替换为新用户界面时不影响业务规则和程序的输出部分\n  * 资源管理 Resource Management\n  * 安全性 Security\n    架构应该描述实现设计层面和代码层面的安全性的方法。\n  * 性能 Performance\n  * 可伸缩性 Scalability\n    是指系统增长满足未来需求的能力\n  * 互用性 Interoperability\n  * 国际化/本地化  Internationalization/Localization\n  * 输入输出 Input/Output\n  * 错误处理 Error Processing\n    错误处理已被证实为现代计算机科学中最棘手的问题之一。\n  * 容错性 Fault Tolerance\n  * 架构的可行性 Architectural Feasibility\n    架构应该论证系统的技术可行性,任何方面不可行都会导致项目无法实施\n  * 过度工程 Overengineering\n  * 关于\"买\"还是\"造\"的决策\n  * 关于复用的决策\n  * 变更策略\n  * 架构总体质量\n    \n  \n    \n###6. 花费在前期准备上的时间长度\n\n***\n***\n引用书籍:\n###1. [CODE COMPLETE 代码大全](http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&qid=1441693546&sr=8-1&keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8)\n","source":"_posts/Upstream-Prerequisites.md","raw":"title: Upstream Prerequisites\ndate: 2015-09-10 13:38:41\ntags:\n- CODE COMPLETE\n---\n>> ##前期准备\n\n***\n##三思而后行\n###1. 前期准备的重要性\n* 测试是不可能检测出诸如\"制造了一个错误的产品\",或者\"使用错误的方法制造正确的产品\"之类\n  的缺陷的。这样的缺陷必须在测试之前解决更确切的说是在构建活动之前。\n* 你可能会认为,所有的专业程序员都知道准备工作的重要性,并且在跃入构建活动之前会检查确认\n  所有先决条件都已经满足了,很不幸,这不是事实。\n * 然而那最近实现的一个模块来说: 这确实不是事实，由于诸多因素,比如个人经验和能力限制。\n   看不到构建之前的设计缺陷，导致构建过程中问题不断,构建活动推翻了前期的架构设计。\n   应为架构中预期的先决条件，在构建中才发现,这实现起来代价很大。\n   (服务器-负载均衡实现,就犯了这样的错误,先决条件没有确认,在构建构成中发现实现代价过大)\n * 做前期准备的活动的开发人员并不具备完成这一任务的专业技能。项目规划,创作引入注入的商业案例\n   分析出全面而准确的需求,创建高质量的架构等活动都需要一定的技能,这些技能不能轻而易举的获得\n   的,但是绝大多数的开发人员都没有结构果针对这一些活动的训练。当开发人员不知道如何进行这些前期\n   工作的时候,建议\"做更多的前期工作\"就完全没有用。如果不能首先把这项工作做好,那么做再多也没有意义。\n * 有一些程序员确实知道如何进行前期工作,但是他们并没有做,因为他们不能抵抗\"尽快开始编码\"的欲望\n * 程序员不做准备工作的最后一个原因,管理者们对那些\"花时间进行构建活动的前期准备的程序员\"的冷漠已经到了\n   人神共愤的程度。\n * 如果遇到那种命令你立即写代码的管理者.\n   * 第一种简单的说遵命(这没什么可怕的,老手当然知道他在说什么)这种回答很糟糕,你可以有几种跟好的替代方案\n     首先,你可以断然拒绝以这种无效的命令,加入你和老板的关系不错,而且你银行卡的钱数也支持你这么做的话,\n     祝你好运。\n   * 第二个不太靠的住的方案是假装在写代码,而事实上不是,在你的桌角上放一份旧的程序代码清单,然后投入需求\n     和架构当中去,同时不用理会老板同不同意,你将能更快的完成项目,并得到更高的质量。有些人会觉得这种方法不\n     合乎情理,但是从你老板的角度看,无知是福。\n   * 第三种方法是,你可以教育你的老板,告诉他技术项目的微妙之处,这是一个好办法,因为它能增加世界上脱盲老板的\n     人数。\n   * 最后一个方案是, 你可以另外找一份工作,虽然经济景气程度时高时低,但是优秀的程序员永远是紧缺的.人生苦短,当有\n     大量更好的选择摆在你面前的时候,在一个荒蛮的软件企业中工作是不明智的。\n   \n* ###然而,为什么抄书呢? \n   \n###2. 辨明你所从事的软件的类型\n* 商业系统\n* 使命攸关的系统\n* 性命攸关的嵌入式系统\n\n###3. 问题定义的先决条件\n* 在开始构建之前,首先要满足的一项先决条件是,对这个系统要解决的问题做一个清楚的陈述.\n  这有时称为\"产品设想\",设想陈述,任务陈述,产品定义,问题定义.\n\n* 问题定义,只定义了问题是什么,而不涉及任何可能的解决方案,听起来应该像是一个问题.\n  好的问题定义看上去像是这样:我们跟不上Gigatron的订单了\n  一个糟糕的问题定义可能是这样: 我们需要优化数据自动采集系统,使之跟上Gigatron的订单\n  \n###4. [需求的先决条件](/2015/09/10/Requirements/)\n* 需求分析是对所定义的问题的深入调查\n* \"需求\"详细描述软件系统应该做什么,这是达成解决方案的第一步。\n* 为什么需要明确的需求 Why Have Official Requirements\n  明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,\n  并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。\n  明确额的需求还有助于避免争论。\n* 如果没有好的需求,你可能对问题有总体的把握,但却没有击中问题的特定方面。\n* 稳定的需求是软件开发的圣杯。这表示\"一旦客户接受了一份需求文档,就再也不做更改\"是一个美好的愿景。\n  开发工程能够帮助客户更好的理解自己的需求,这是需求变更的主要来源,计划严格按照需求行事,实际上就是计划不对客户的需求做出回应。\n* 在构建期间处理需求变更\n * 确保每一个人都知道需求变更的代价\n * 建立一套变更控制程序\n * 使用能适应变更的开发方法\n * 放弃这个项目\n * 注意项目的商业案例\n \n###5. 架构的先决条件\n* 软件架构(software architecture)是软件设计的高层部分,是用于支撑更细节的设计的框架。\n* 架构的质量决定了系统的\"概念完整性\",后者继而决定了系统的最终质量.\n* 架构为程序员提供指引,它将工作分为几个部分,使多个开发团队可以独立工作.\n* 好的架构是构建活动变得更加容易,糟糕的架构则使构建活动几乎寸步难行。\n* ####架构的典型组成部分\n  * 程序组织 Program Organization\n    * 系统架构首先一概括的形式对有关系统做一个综述。\n    * 在架构中,你应该能发现对那些曾经考虑过的最终组织结构的替代方案的记述,找到之所以选用\n      最终的组织结构,而不用其他替代方案的理由。\n    * 架构应该定义程序的主要构造块(building blocks)。根据程序规模不同,各个构造块可能是单个类,也可能是由\n      单个类组成的一个子系统。每个构造块无论是一个类还是一个协同工作的类和子程序,它们共同实现一种高层功能,\n      诸如与用户交互,显示Web页面,解释命令,封装业务规则,访问数据,等等~~~\n    * 应该明确定义个个构造块的责任。每个构造块应该负责一个区域的事情,并对其他构造块负责的区域知道的越少越好。\n    * 应该明确定义各个构造块的通信规则\n  * 主要的类 Major Classes\n    架构应该详细定义所用的主要的类\n  * 数据设计 Data Design\n    架构应该描述所用到的主要文件和数据表的设计\n    数据通常只应该由一个子系统或一个类直接访问\n    架构应该详细定义所有数据库的高层组织结构和内容。\n  * 业务规则 Business Rules\n  * 用户界面设计 User Interface Design\n    用户界面常常在需求阶段进行详细说明。如果没有就应该在软件架构中进行详细说明\n    架构应该模块化,以便替换为新用户界面时不影响业务规则和程序的输出部分\n  * 资源管理 Resource Management\n  * 安全性 Security\n    架构应该描述实现设计层面和代码层面的安全性的方法。\n  * 性能 Performance\n  * 可伸缩性 Scalability\n    是指系统增长满足未来需求的能力\n  * 互用性 Interoperability\n  * 国际化/本地化  Internationalization/Localization\n  * 输入输出 Input/Output\n  * 错误处理 Error Processing\n    错误处理已被证实为现代计算机科学中最棘手的问题之一。\n  * 容错性 Fault Tolerance\n  * 架构的可行性 Architectural Feasibility\n    架构应该论证系统的技术可行性,任何方面不可行都会导致项目无法实施\n  * 过度工程 Overengineering\n  * 关于\"买\"还是\"造\"的决策\n  * 关于复用的决策\n  * 变更策略\n  * 架构总体质量\n    \n  \n    \n###6. 花费在前期准备上的时间长度\n\n***\n***\n引用书籍:\n###1. [CODE COMPLETE 代码大全](http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&qid=1441693546&sr=8-1&keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8)\n","slug":"Upstream-Prerequisites","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosf60006kypvhfvodt1m","content":"<blockquote>\n<blockquote>\n<p>##前期准备</p>\n</blockquote>\n</blockquote>\n<hr>\n<p>##三思而后行</p>\n<p>###1. 前期准备的重要性</p>\n<ul>\n<li>测试是不可能检测出诸如”制造了一个错误的产品”,或者”使用错误的方法制造正确的产品”之类<br>的缺陷的。这样的缺陷必须在测试之前解决更确切的说是在构建活动之前。</li>\n<li><p>你可能会认为,所有的专业程序员都知道准备工作的重要性,并且在跃入构建活动之前会检查确认<br>所有先决条件都已经满足了,很不幸,这不是事实。</p>\n<ul>\n<li>然而那最近实现的一个模块来说: 这确实不是事实，由于诸多因素,比如个人经验和能力限制。<br>看不到构建之前的设计缺陷，导致构建过程中问题不断,构建活动推翻了前期的架构设计。<br>应为架构中预期的先决条件，在构建中才发现,这实现起来代价很大。<br>(服务器-负载均衡实现,就犯了这样的错误,先决条件没有确认,在构建构成中发现实现代价过大)</li>\n<li>做前期准备的活动的开发人员并不具备完成这一任务的专业技能。项目规划,创作引入注入的商业案例<br>分析出全面而准确的需求,创建高质量的架构等活动都需要一定的技能,这些技能不能轻而易举的获得<br>的,但是绝大多数的开发人员都没有结构果针对这一些活动的训练。当开发人员不知道如何进行这些前期<br>工作的时候,建议”做更多的前期工作”就完全没有用。如果不能首先把这项工作做好,那么做再多也没有意义。</li>\n<li>有一些程序员确实知道如何进行前期工作,但是他们并没有做,因为他们不能抵抗”尽快开始编码”的欲望</li>\n<li>程序员不做准备工作的最后一个原因,管理者们对那些”花时间进行构建活动的前期准备的程序员”的冷漠已经到了<br>人神共愤的程度。</li>\n<li>如果遇到那种命令你立即写代码的管理者.<ul>\n<li>第一种简单的说遵命(这没什么可怕的,老手当然知道他在说什么)这种回答很糟糕,你可以有几种跟好的替代方案<br>首先,你可以断然拒绝以这种无效的命令,加入你和老板的关系不错,而且你银行卡的钱数也支持你这么做的话,<br>祝你好运。</li>\n<li>第二个不太靠的住的方案是假装在写代码,而事实上不是,在你的桌角上放一份旧的程序代码清单,然后投入需求<br>和架构当中去,同时不用理会老板同不同意,你将能更快的完成项目,并得到更高的质量。有些人会觉得这种方法不<br>合乎情理,但是从你老板的角度看,无知是福。</li>\n<li>第三种方法是,你可以教育你的老板,告诉他技术项目的微妙之处,这是一个好办法,因为它能增加世界上脱盲老板的<br>人数。</li>\n<li>最后一个方案是, 你可以另外找一份工作,虽然经济景气程度时高时低,但是优秀的程序员永远是紧缺的.人生苦短,当有<br>大量更好的选择摆在你面前的时候,在一个荒蛮的软件企业中工作是不明智的。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>###然而,为什么抄书呢? </p>\n</li>\n</ul>\n<p>###2. 辨明你所从事的软件的类型</p>\n<ul>\n<li>商业系统</li>\n<li>使命攸关的系统</li>\n<li>性命攸关的嵌入式系统</li>\n</ul>\n<p>###3. 问题定义的先决条件</p>\n<ul>\n<li><p>在开始构建之前,首先要满足的一项先决条件是,对这个系统要解决的问题做一个清楚的陈述.<br>这有时称为”产品设想”,设想陈述,任务陈述,产品定义,问题定义.</p>\n</li>\n<li><p>问题定义,只定义了问题是什么,而不涉及任何可能的解决方案,听起来应该像是一个问题.<br>好的问题定义看上去像是这样:我们跟不上Gigatron的订单了<br>一个糟糕的问题定义可能是这样: 我们需要优化数据自动采集系统,使之跟上Gigatron的订单</p>\n</li>\n</ul>\n<p>###4. <a href=\"/2015/09/10/Requirements/\">需求的先决条件</a></p>\n<ul>\n<li>需求分析是对所定义的问题的深入调查</li>\n<li>“需求”详细描述软件系统应该做什么,这是达成解决方案的第一步。</li>\n<li>为什么需要明确的需求 Why Have Official Requirements<br>明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,<br>并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。<br>明确额的需求还有助于避免争论。</li>\n<li>如果没有好的需求,你可能对问题有总体的把握,但却没有击中问题的特定方面。</li>\n<li>稳定的需求是软件开发的圣杯。这表示”一旦客户接受了一份需求文档,就再也不做更改”是一个美好的愿景。<br>开发工程能够帮助客户更好的理解自己的需求,这是需求变更的主要来源,计划严格按照需求行事,实际上就是计划不对客户的需求做出回应。</li>\n<li>在构建期间处理需求变更<ul>\n<li>确保每一个人都知道需求变更的代价</li>\n<li>建立一套变更控制程序</li>\n<li>使用能适应变更的开发方法</li>\n<li>放弃这个项目</li>\n<li>注意项目的商业案例</li>\n</ul>\n</li>\n</ul>\n<p>###5. 架构的先决条件</p>\n<ul>\n<li>软件架构(software architecture)是软件设计的高层部分,是用于支撑更细节的设计的框架。</li>\n<li>架构的质量决定了系统的”概念完整性”,后者继而决定了系统的最终质量.</li>\n<li>架构为程序员提供指引,它将工作分为几个部分,使多个开发团队可以独立工作.</li>\n<li>好的架构是构建活动变得更加容易,糟糕的架构则使构建活动几乎寸步难行。</li>\n<li>####架构的典型组成部分<ul>\n<li>程序组织 Program Organization<ul>\n<li>系统架构首先一概括的形式对有关系统做一个综述。</li>\n<li>在架构中,你应该能发现对那些曾经考虑过的最终组织结构的替代方案的记述,找到之所以选用<br>最终的组织结构,而不用其他替代方案的理由。</li>\n<li>架构应该定义程序的主要构造块(building blocks)。根据程序规模不同,各个构造块可能是单个类,也可能是由<br>单个类组成的一个子系统。每个构造块无论是一个类还是一个协同工作的类和子程序,它们共同实现一种高层功能,<br>诸如与用户交互,显示Web页面,解释命令,封装业务规则,访问数据,等等~~~</li>\n<li>应该明确定义个个构造块的责任。每个构造块应该负责一个区域的事情,并对其他构造块负责的区域知道的越少越好。</li>\n<li>应该明确定义各个构造块的通信规则</li>\n</ul>\n</li>\n<li>主要的类 Major Classes<br>架构应该详细定义所用的主要的类</li>\n<li>数据设计 Data Design<br>架构应该描述所用到的主要文件和数据表的设计<br>数据通常只应该由一个子系统或一个类直接访问<br>架构应该详细定义所有数据库的高层组织结构和内容。</li>\n<li>业务规则 Business Rules</li>\n<li>用户界面设计 User Interface Design<br>用户界面常常在需求阶段进行详细说明。如果没有就应该在软件架构中进行详细说明<br>架构应该模块化,以便替换为新用户界面时不影响业务规则和程序的输出部分</li>\n<li>资源管理 Resource Management</li>\n<li>安全性 Security<br>架构应该描述实现设计层面和代码层面的安全性的方法。</li>\n<li>性能 Performance</li>\n<li>可伸缩性 Scalability<br>是指系统增长满足未来需求的能力</li>\n<li>互用性 Interoperability</li>\n<li>国际化/本地化  Internationalization/Localization</li>\n<li>输入输出 Input/Output</li>\n<li>错误处理 Error Processing<br>错误处理已被证实为现代计算机科学中最棘手的问题之一。</li>\n<li>容错性 Fault Tolerance</li>\n<li>架构的可行性 Architectural Feasibility<br>架构应该论证系统的技术可行性,任何方面不可行都会导致项目无法实施</li>\n<li>过度工程 Overengineering</li>\n<li>关于”买”还是”造”的决策</li>\n<li>关于复用的决策</li>\n<li>变更策略</li>\n<li>架构总体质量</li>\n</ul>\n</li>\n</ul>\n<p>###6. 花费在前期准备上的时间长度</p>\n<hr>\n<hr>\n<p>引用书籍:</p>\n<p>###1. <a href=\"http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&amp;qid=1441693546&amp;sr=8-1&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8\" target=\"_blank\" rel=\"noopener\">CODE COMPLETE 代码大全</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<blockquote>\n<p>##前期准备</p>\n</blockquote>\n</blockquote>\n<hr>\n<p>##三思而后行</p>\n<p>###1. 前期准备的重要性</p>\n<ul>\n<li>测试是不可能检测出诸如”制造了一个错误的产品”,或者”使用错误的方法制造正确的产品”之类<br>的缺陷的。这样的缺陷必须在测试之前解决更确切的说是在构建活动之前。</li>\n<li><p>你可能会认为,所有的专业程序员都知道准备工作的重要性,并且在跃入构建活动之前会检查确认<br>所有先决条件都已经满足了,很不幸,这不是事实。</p>\n<ul>\n<li>然而那最近实现的一个模块来说: 这确实不是事实，由于诸多因素,比如个人经验和能力限制。<br>看不到构建之前的设计缺陷，导致构建过程中问题不断,构建活动推翻了前期的架构设计。<br>应为架构中预期的先决条件，在构建中才发现,这实现起来代价很大。<br>(服务器-负载均衡实现,就犯了这样的错误,先决条件没有确认,在构建构成中发现实现代价过大)</li>\n<li>做前期准备的活动的开发人员并不具备完成这一任务的专业技能。项目规划,创作引入注入的商业案例<br>分析出全面而准确的需求,创建高质量的架构等活动都需要一定的技能,这些技能不能轻而易举的获得<br>的,但是绝大多数的开发人员都没有结构果针对这一些活动的训练。当开发人员不知道如何进行这些前期<br>工作的时候,建议”做更多的前期工作”就完全没有用。如果不能首先把这项工作做好,那么做再多也没有意义。</li>\n<li>有一些程序员确实知道如何进行前期工作,但是他们并没有做,因为他们不能抵抗”尽快开始编码”的欲望</li>\n<li>程序员不做准备工作的最后一个原因,管理者们对那些”花时间进行构建活动的前期准备的程序员”的冷漠已经到了<br>人神共愤的程度。</li>\n<li>如果遇到那种命令你立即写代码的管理者.<ul>\n<li>第一种简单的说遵命(这没什么可怕的,老手当然知道他在说什么)这种回答很糟糕,你可以有几种跟好的替代方案<br>首先,你可以断然拒绝以这种无效的命令,加入你和老板的关系不错,而且你银行卡的钱数也支持你这么做的话,<br>祝你好运。</li>\n<li>第二个不太靠的住的方案是假装在写代码,而事实上不是,在你的桌角上放一份旧的程序代码清单,然后投入需求<br>和架构当中去,同时不用理会老板同不同意,你将能更快的完成项目,并得到更高的质量。有些人会觉得这种方法不<br>合乎情理,但是从你老板的角度看,无知是福。</li>\n<li>第三种方法是,你可以教育你的老板,告诉他技术项目的微妙之处,这是一个好办法,因为它能增加世界上脱盲老板的<br>人数。</li>\n<li>最后一个方案是, 你可以另外找一份工作,虽然经济景气程度时高时低,但是优秀的程序员永远是紧缺的.人生苦短,当有<br>大量更好的选择摆在你面前的时候,在一个荒蛮的软件企业中工作是不明智的。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>###然而,为什么抄书呢? </p>\n</li>\n</ul>\n<p>###2. 辨明你所从事的软件的类型</p>\n<ul>\n<li>商业系统</li>\n<li>使命攸关的系统</li>\n<li>性命攸关的嵌入式系统</li>\n</ul>\n<p>###3. 问题定义的先决条件</p>\n<ul>\n<li><p>在开始构建之前,首先要满足的一项先决条件是,对这个系统要解决的问题做一个清楚的陈述.<br>这有时称为”产品设想”,设想陈述,任务陈述,产品定义,问题定义.</p>\n</li>\n<li><p>问题定义,只定义了问题是什么,而不涉及任何可能的解决方案,听起来应该像是一个问题.<br>好的问题定义看上去像是这样:我们跟不上Gigatron的订单了<br>一个糟糕的问题定义可能是这样: 我们需要优化数据自动采集系统,使之跟上Gigatron的订单</p>\n</li>\n</ul>\n<p>###4. <a href=\"/2015/09/10/Requirements/\">需求的先决条件</a></p>\n<ul>\n<li>需求分析是对所定义的问题的深入调查</li>\n<li>“需求”详细描述软件系统应该做什么,这是达成解决方案的第一步。</li>\n<li>为什么需要明确的需求 Why Have Official Requirements<br>明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,<br>并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。<br>明确额的需求还有助于避免争论。</li>\n<li>如果没有好的需求,你可能对问题有总体的把握,但却没有击中问题的特定方面。</li>\n<li>稳定的需求是软件开发的圣杯。这表示”一旦客户接受了一份需求文档,就再也不做更改”是一个美好的愿景。<br>开发工程能够帮助客户更好的理解自己的需求,这是需求变更的主要来源,计划严格按照需求行事,实际上就是计划不对客户的需求做出回应。</li>\n<li>在构建期间处理需求变更<ul>\n<li>确保每一个人都知道需求变更的代价</li>\n<li>建立一套变更控制程序</li>\n<li>使用能适应变更的开发方法</li>\n<li>放弃这个项目</li>\n<li>注意项目的商业案例</li>\n</ul>\n</li>\n</ul>\n<p>###5. 架构的先决条件</p>\n<ul>\n<li>软件架构(software architecture)是软件设计的高层部分,是用于支撑更细节的设计的框架。</li>\n<li>架构的质量决定了系统的”概念完整性”,后者继而决定了系统的最终质量.</li>\n<li>架构为程序员提供指引,它将工作分为几个部分,使多个开发团队可以独立工作.</li>\n<li>好的架构是构建活动变得更加容易,糟糕的架构则使构建活动几乎寸步难行。</li>\n<li>####架构的典型组成部分<ul>\n<li>程序组织 Program Organization<ul>\n<li>系统架构首先一概括的形式对有关系统做一个综述。</li>\n<li>在架构中,你应该能发现对那些曾经考虑过的最终组织结构的替代方案的记述,找到之所以选用<br>最终的组织结构,而不用其他替代方案的理由。</li>\n<li>架构应该定义程序的主要构造块(building blocks)。根据程序规模不同,各个构造块可能是单个类,也可能是由<br>单个类组成的一个子系统。每个构造块无论是一个类还是一个协同工作的类和子程序,它们共同实现一种高层功能,<br>诸如与用户交互,显示Web页面,解释命令,封装业务规则,访问数据,等等~~~</li>\n<li>应该明确定义个个构造块的责任。每个构造块应该负责一个区域的事情,并对其他构造块负责的区域知道的越少越好。</li>\n<li>应该明确定义各个构造块的通信规则</li>\n</ul>\n</li>\n<li>主要的类 Major Classes<br>架构应该详细定义所用的主要的类</li>\n<li>数据设计 Data Design<br>架构应该描述所用到的主要文件和数据表的设计<br>数据通常只应该由一个子系统或一个类直接访问<br>架构应该详细定义所有数据库的高层组织结构和内容。</li>\n<li>业务规则 Business Rules</li>\n<li>用户界面设计 User Interface Design<br>用户界面常常在需求阶段进行详细说明。如果没有就应该在软件架构中进行详细说明<br>架构应该模块化,以便替换为新用户界面时不影响业务规则和程序的输出部分</li>\n<li>资源管理 Resource Management</li>\n<li>安全性 Security<br>架构应该描述实现设计层面和代码层面的安全性的方法。</li>\n<li>性能 Performance</li>\n<li>可伸缩性 Scalability<br>是指系统增长满足未来需求的能力</li>\n<li>互用性 Interoperability</li>\n<li>国际化/本地化  Internationalization/Localization</li>\n<li>输入输出 Input/Output</li>\n<li>错误处理 Error Processing<br>错误处理已被证实为现代计算机科学中最棘手的问题之一。</li>\n<li>容错性 Fault Tolerance</li>\n<li>架构的可行性 Architectural Feasibility<br>架构应该论证系统的技术可行性,任何方面不可行都会导致项目无法实施</li>\n<li>过度工程 Overengineering</li>\n<li>关于”买”还是”造”的决策</li>\n<li>关于复用的决策</li>\n<li>变更策略</li>\n<li>架构总体质量</li>\n</ul>\n</li>\n</ul>\n<p>###6. 花费在前期准备上的时间长度</p>\n<hr>\n<hr>\n<p>引用书籍:</p>\n<p>###1. <a href=\"http://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&amp;qid=1441693546&amp;sr=8-1&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8\" target=\"_blank\" rel=\"noopener\">CODE COMPLETE 代码大全</a></p>\n"},{"title":"django","date":"2015-08-12T18:35:25.000Z","_content":"\n***\n##使用django开发游戏web管理后台\n   为什么需要这个web后台：运行时修改游戏服务器内容。比如活动开启,黑名单。。。\n   在修改服务器数据时，做一些输入的限制性操作。即使你在地铁上也能够通过手机\n   随时了解服务器的运行状况。\n   使用方式：web后台修改mysql数据后，通知GameServer重新载入mysql配置文件。\n   web后台在GameServer运行期间，增加，删除，修改GameServer中的数据。\n\n***              \n***\n\n  * 环境搭建。 \n    apache2.4\n    Django1.8\n    python3.3.3\n    mod_wsgi.so模块，\n    mysql\n  * Django admin与GameServer服务器交互，http协议实现交互\n  * Django 与mysql交互，Django自带admin管理（增删改）\n  * 使用Django的template进行交互UI展示（特定交互UI实现）\n  * 部署相关\n \n***\n\n###完成后看上去像是这样子\n1.  webUI后台,login，logout，config，userinfo，restore(从mysql回滚数据到GameServer)\n    是webUI和GameServer交互的入口，根据需求任意增加\n    \n    ![图片](\\imgs\\django\\django-01.png)\n\n2.  django的admin后台，用来操作mysql数据库\n\n    ![图片](\\imgs\\django\\django-02.png)\n    ![图片](\\imgs\\django\\django-03.png)\n\n***\n\n##Django和GameServer之间的交互\n* 使用http协议，与GameServer之间进行数据交互。\n* python的相关教程。Python3.x与python2.x差异,在使用过程中可以体会得到\n  [python教程](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000)\n    \n***\n\n##Django和MySql之间的交互\n* Django自带的admin模块，提供了非常好的交互UI,对mysql数据库的增删改查，支持很容易使用\n* Django相关教程\n  [官方,非常详细的教程](https://docs.djangoproject.com/en/1.8/)\n  [可以了解Django的运作机制](http://www.ziqiangxuetang.com/django/django-tutorial.html)\n\n***\n\n##代码路径\n1.  scut框架 \nhttps://github.com/guccang/Scut \n从scutgame官方fork过来的代码，用于更新scutgame框架错误\n2.  服务器逻辑代码服务器逻辑代码 \nhttps://github.com/guccang/scutlogic \n服务器逻辑代码，写的action逻辑\n3.  webUI\nhttps://github.com/guccang/django-GM-tools.git\n\n***\n##环境搭建\n\n1.  apache/django/python版本选择问题\n    * apache部署的时候需要用到，生产环境的mod_wsgi.so\n      因此需要根据mod_wsgi.so的支持来选择apache和python的版本。\n    \n    * apache2.4 下载的地址：官方网站只提供了源码下载，不提供二进制安装文件。\n      以下是apache官方推荐的下载地址之一，也是wsgi官方链接推荐的下载地址。\n      http://www.apachelounge.com/download/\n      copy xxxx.whl 到 apache2.4 modual目录下\n      配置apache2.4各种目录\n    \n    * apache2.4对应的运行环境下载的地址：使用vc2015编译的apache2.4，需要安装对应的运行时vs环境\n      http://www.microsoft.com/en-us/download/details.aspx?id=48145\n    \n    * apache2.4上述路径下载玩apache后。是一个包含所有apache组建的文件夹。然后需要安装apache服务\n      到windows中区。\n      进入apache bin目录。httpd -k install\n    \n2.  * mod_wsgi官方网址：http://www.modwsgi.org/\n    找到mod_wsgi.so的windows下载的地址现在(2015/8/13)是：\n    http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\n    找得到如下whl文件下载地址：\n    mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl\n    mod_wsgi-4.4.13+ap24vc10-cp33-none-win32.whl\n    ap24=apache2.4\n    cp33=python3.3.x\n    win_amd64=windows os 64 \n    win32=windows os 32\n    \n    * 根据自己的环境找到对应的whl文件。\n    目前win64的只找到了python3的版本，没有python2.7。\n    因此python版本选择为3.3.32\n    apache选择apache2.4\n    pc是windows10,64位，选则win_amd64.whl\n    最后选择结果:mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl\n    \n    * whl文件。\n    使用pip 安装whl文件\n    pip install whl完整路径\n    会将mod_wsgi.so文件下载下来。\n    mod_wsgi.so下载的地址：\n    http://www.modwsgi.org/\n    http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\n    pip install xxxx.whl\n\n3.  python下载的地址：\n    * https://www.python.org/downloads/\n    pip 工具下载地址：\n    https://pypi.python.org/pypi/pip#downloads\n    python setup.py install \n    \n4.  django 安装\n    pip install django\n    \n5.  mysqldb安装\n    http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient\n    \n####至此搭建环境所需的所有东西都齐全了。apache2.4 python3.3.3 \n   \n***\n##部署问题\n\n1.  apache + wsgi + django\n    apache配置wsgi相关\n    apache配置django静态文件路径\n    django配置静态文件搜集路径\n\n    *无法载入css，img，js相关静态文件问题：\n    *apache配置 config\n        LoadModule wsgi_module modules/mod_wsgi.so\n        WSGIScriptAlias / C:/Python33/src/mysite/mysite/wsgi.py\n        WSGIPythonPath C:/Python33/src/mysite\n        <Directory C:/Python33/src/mysite/mysite>\n        <Files wsgi.py>\n            Require all granted\n            Require ip 127.0.0.1\n        </Files>\n        </Directory>\n\n    *这个目录是django 配置的静待资源根目录。\n    *有这个后，再加上django配置，就可以顺利的找到css，img，js相关文件。\n        Alias /static/ C:/Python33/src/mysite/mysite/static/\n        <Directory C:/Python33/src/mysite/mysite/static/>\n            Require all granted\n        </Directory>\n\n2.  setting配置\n    django部署后，css、js、图片都无法显示。\n    setting.py 设置：\n        STATIC_URL = '/static/'\n        STATIC_ROOT = 'c:/Python33/src/mysite/mysite/static/'\n    其他不变即可。\n    运行 python manage.py collectstatic \n    将app的static文件夹下的所有资源放到STATIC_ROOT之下\n\n3.  数据库修改后同步\n    数据表重建：数据库模型修改后同步给开发服务器。\n    数据库model和view、template不同,修改后无法及时同步。\n    python makemigrations\n    python migrate\n\n    数据表导出,将连接的数据库的所有表导出到models_all.py文件中\n    python manage.py inspectdb > models_all.py \n\n4.  运行时网站反应速度慢\n    使用apache自带的工具启动apache服务。\n      \n5.  BUG\n    * 1264 - Out of range value adjusted for column 'ID' at row 1  \n      byte类型  mysql tinyint 有符号\n      mysql默认有符号,应该改为无符号。\n    * 将apache bin的目录弄错了。导致httpd.cfg 读取别的,修改无用\n    * \n    ","source":"_posts/django.md","raw":"title: django\ndate: 2015-08-12 14:35:25\ntags:\n- django\n---\n\n***\n##使用django开发游戏web管理后台\n   为什么需要这个web后台：运行时修改游戏服务器内容。比如活动开启,黑名单。。。\n   在修改服务器数据时，做一些输入的限制性操作。即使你在地铁上也能够通过手机\n   随时了解服务器的运行状况。\n   使用方式：web后台修改mysql数据后，通知GameServer重新载入mysql配置文件。\n   web后台在GameServer运行期间，增加，删除，修改GameServer中的数据。\n\n***              \n***\n\n  * 环境搭建。 \n    apache2.4\n    Django1.8\n    python3.3.3\n    mod_wsgi.so模块，\n    mysql\n  * Django admin与GameServer服务器交互，http协议实现交互\n  * Django 与mysql交互，Django自带admin管理（增删改）\n  * 使用Django的template进行交互UI展示（特定交互UI实现）\n  * 部署相关\n \n***\n\n###完成后看上去像是这样子\n1.  webUI后台,login，logout，config，userinfo，restore(从mysql回滚数据到GameServer)\n    是webUI和GameServer交互的入口，根据需求任意增加\n    \n    ![图片](\\imgs\\django\\django-01.png)\n\n2.  django的admin后台，用来操作mysql数据库\n\n    ![图片](\\imgs\\django\\django-02.png)\n    ![图片](\\imgs\\django\\django-03.png)\n\n***\n\n##Django和GameServer之间的交互\n* 使用http协议，与GameServer之间进行数据交互。\n* python的相关教程。Python3.x与python2.x差异,在使用过程中可以体会得到\n  [python教程](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000)\n    \n***\n\n##Django和MySql之间的交互\n* Django自带的admin模块，提供了非常好的交互UI,对mysql数据库的增删改查，支持很容易使用\n* Django相关教程\n  [官方,非常详细的教程](https://docs.djangoproject.com/en/1.8/)\n  [可以了解Django的运作机制](http://www.ziqiangxuetang.com/django/django-tutorial.html)\n\n***\n\n##代码路径\n1.  scut框架 \nhttps://github.com/guccang/Scut \n从scutgame官方fork过来的代码，用于更新scutgame框架错误\n2.  服务器逻辑代码服务器逻辑代码 \nhttps://github.com/guccang/scutlogic \n服务器逻辑代码，写的action逻辑\n3.  webUI\nhttps://github.com/guccang/django-GM-tools.git\n\n***\n##环境搭建\n\n1.  apache/django/python版本选择问题\n    * apache部署的时候需要用到，生产环境的mod_wsgi.so\n      因此需要根据mod_wsgi.so的支持来选择apache和python的版本。\n    \n    * apache2.4 下载的地址：官方网站只提供了源码下载，不提供二进制安装文件。\n      以下是apache官方推荐的下载地址之一，也是wsgi官方链接推荐的下载地址。\n      http://www.apachelounge.com/download/\n      copy xxxx.whl 到 apache2.4 modual目录下\n      配置apache2.4各种目录\n    \n    * apache2.4对应的运行环境下载的地址：使用vc2015编译的apache2.4，需要安装对应的运行时vs环境\n      http://www.microsoft.com/en-us/download/details.aspx?id=48145\n    \n    * apache2.4上述路径下载玩apache后。是一个包含所有apache组建的文件夹。然后需要安装apache服务\n      到windows中区。\n      进入apache bin目录。httpd -k install\n    \n2.  * mod_wsgi官方网址：http://www.modwsgi.org/\n    找到mod_wsgi.so的windows下载的地址现在(2015/8/13)是：\n    http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\n    找得到如下whl文件下载地址：\n    mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl\n    mod_wsgi-4.4.13+ap24vc10-cp33-none-win32.whl\n    ap24=apache2.4\n    cp33=python3.3.x\n    win_amd64=windows os 64 \n    win32=windows os 32\n    \n    * 根据自己的环境找到对应的whl文件。\n    目前win64的只找到了python3的版本，没有python2.7。\n    因此python版本选择为3.3.32\n    apache选择apache2.4\n    pc是windows10,64位，选则win_amd64.whl\n    最后选择结果:mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl\n    \n    * whl文件。\n    使用pip 安装whl文件\n    pip install whl完整路径\n    会将mod_wsgi.so文件下载下来。\n    mod_wsgi.so下载的地址：\n    http://www.modwsgi.org/\n    http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\n    pip install xxxx.whl\n\n3.  python下载的地址：\n    * https://www.python.org/downloads/\n    pip 工具下载地址：\n    https://pypi.python.org/pypi/pip#downloads\n    python setup.py install \n    \n4.  django 安装\n    pip install django\n    \n5.  mysqldb安装\n    http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient\n    \n####至此搭建环境所需的所有东西都齐全了。apache2.4 python3.3.3 \n   \n***\n##部署问题\n\n1.  apache + wsgi + django\n    apache配置wsgi相关\n    apache配置django静态文件路径\n    django配置静态文件搜集路径\n\n    *无法载入css，img，js相关静态文件问题：\n    *apache配置 config\n        LoadModule wsgi_module modules/mod_wsgi.so\n        WSGIScriptAlias / C:/Python33/src/mysite/mysite/wsgi.py\n        WSGIPythonPath C:/Python33/src/mysite\n        <Directory C:/Python33/src/mysite/mysite>\n        <Files wsgi.py>\n            Require all granted\n            Require ip 127.0.0.1\n        </Files>\n        </Directory>\n\n    *这个目录是django 配置的静待资源根目录。\n    *有这个后，再加上django配置，就可以顺利的找到css，img，js相关文件。\n        Alias /static/ C:/Python33/src/mysite/mysite/static/\n        <Directory C:/Python33/src/mysite/mysite/static/>\n            Require all granted\n        </Directory>\n\n2.  setting配置\n    django部署后，css、js、图片都无法显示。\n    setting.py 设置：\n        STATIC_URL = '/static/'\n        STATIC_ROOT = 'c:/Python33/src/mysite/mysite/static/'\n    其他不变即可。\n    运行 python manage.py collectstatic \n    将app的static文件夹下的所有资源放到STATIC_ROOT之下\n\n3.  数据库修改后同步\n    数据表重建：数据库模型修改后同步给开发服务器。\n    数据库model和view、template不同,修改后无法及时同步。\n    python makemigrations\n    python migrate\n\n    数据表导出,将连接的数据库的所有表导出到models_all.py文件中\n    python manage.py inspectdb > models_all.py \n\n4.  运行时网站反应速度慢\n    使用apache自带的工具启动apache服务。\n      \n5.  BUG\n    * 1264 - Out of range value adjusted for column 'ID' at row 1  \n      byte类型  mysql tinyint 有符号\n      mysql默认有符号,应该改为无符号。\n    * 将apache bin的目录弄错了。导致httpd.cfg 读取别的,修改无用\n    * \n    ","slug":"django","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosf70009kypvr8yl90ra","content":"<hr>\n<p>##使用django开发游戏web管理后台<br>   为什么需要这个web后台：运行时修改游戏服务器内容。比如活动开启,黑名单。。。<br>   在修改服务器数据时，做一些输入的限制性操作。即使你在地铁上也能够通过手机<br>   随时了解服务器的运行状况。<br>   使用方式：web后台修改mysql数据后，通知GameServer重新载入mysql配置文件。<br>   web后台在GameServer运行期间，增加，删除，修改GameServer中的数据。</p>\n<hr>\n<hr>\n<ul>\n<li>环境搭建。<br>apache2.4<br>Django1.8<br>python3.3.3<br>mod_wsgi.so模块，<br>mysql</li>\n<li>Django admin与GameServer服务器交互，http协议实现交互</li>\n<li>Django 与mysql交互，Django自带admin管理（增删改）</li>\n<li>使用Django的template进行交互UI展示（特定交互UI实现）</li>\n<li>部署相关</li>\n</ul>\n<hr>\n<p>###完成后看上去像是这样子</p>\n<ol>\n<li><p>webUI后台,login，logout，config，userinfo，restore(从mysql回滚数据到GameServer)<br>是webUI和GameServer交互的入口，根据需求任意增加</p>\n<p><img src=\"\\imgs\\django\\django-01.png\" alt=\"图片\"></p>\n</li>\n<li><p>django的admin后台，用来操作mysql数据库</p>\n<p><img src=\"\\imgs\\django\\django-02.png\" alt=\"图片\"><br><img src=\"\\imgs\\django\\django-03.png\" alt=\"图片\"></p>\n</li>\n</ol>\n<hr>\n<p>##Django和GameServer之间的交互</p>\n<ul>\n<li>使用http协议，与GameServer之间进行数据交互。</li>\n<li>python的相关教程。Python3.x与python2.x差异,在使用过程中可以体会得到<br><a href=\"http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000\" target=\"_blank\" rel=\"noopener\">python教程</a></li>\n</ul>\n<hr>\n<p>##Django和MySql之间的交互</p>\n<ul>\n<li>Django自带的admin模块，提供了非常好的交互UI,对mysql数据库的增删改查，支持很容易使用</li>\n<li>Django相关教程<br><a href=\"https://docs.djangoproject.com/en/1.8/\" target=\"_blank\" rel=\"noopener\">官方,非常详细的教程</a><br><a href=\"http://www.ziqiangxuetang.com/django/django-tutorial.html\" target=\"_blank\" rel=\"noopener\">可以了解Django的运作机制</a></li>\n</ul>\n<hr>\n<p>##代码路径</p>\n<ol>\n<li>scut框架<br><a href=\"https://github.com/guccang/Scut\">https://github.com/guccang/Scut</a><br>从scutgame官方fork过来的代码，用于更新scutgame框架错误</li>\n<li>服务器逻辑代码服务器逻辑代码<br><a href=\"https://github.com/guccang/scutlogic\">https://github.com/guccang/scutlogic</a><br>服务器逻辑代码，写的action逻辑</li>\n<li>webUI<br><a href=\"https://github.com/guccang/django-GM-tools.git\">https://github.com/guccang/django-GM-tools.git</a></li>\n</ol>\n<hr>\n<p>##环境搭建</p>\n<ol>\n<li><p>apache/django/python版本选择问题</p>\n<ul>\n<li><p>apache部署的时候需要用到，生产环境的mod_wsgi.so<br>因此需要根据mod_wsgi.so的支持来选择apache和python的版本。</p>\n</li>\n<li><p>apache2.4 下载的地址：官方网站只提供了源码下载，不提供二进制安装文件。<br>以下是apache官方推荐的下载地址之一，也是wsgi官方链接推荐的下载地址。<br><a href=\"http://www.apachelounge.com/download/\" target=\"_blank\" rel=\"noopener\">http://www.apachelounge.com/download/</a><br>copy xxxx.whl 到 apache2.4 modual目录下<br>配置apache2.4各种目录</p>\n</li>\n<li><p>apache2.4对应的运行环境下载的地址：使用vc2015编译的apache2.4，需要安装对应的运行时vs环境<br><a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=48145\" target=\"_blank\" rel=\"noopener\">http://www.microsoft.com/en-us/download/details.aspx?id=48145</a></p>\n</li>\n<li><p>apache2.4上述路径下载玩apache后。是一个包含所有apache组建的文件夹。然后需要安装apache服务<br>到windows中区。<br>进入apache bin目录。httpd -k install</p>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><p>mod_wsgi官方网址：<a href=\"http://www.modwsgi.org/\" target=\"_blank\" rel=\"noopener\">http://www.modwsgi.org/</a><br>找到mod_wsgi.so的windows下载的地址现在(2015/8/13)是：<br><a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\" target=\"_blank\" rel=\"noopener\">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi</a><br>找得到如下whl文件下载地址：<br>mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl<br>mod_wsgi-4.4.13+ap24vc10-cp33-none-win32.whl<br>ap24=apache2.4<br>cp33=python3.3.x<br>win_amd64=windows os 64<br>win32=windows os 32</p>\n</li>\n<li><p>根据自己的环境找到对应的whl文件。<br>目前win64的只找到了python3的版本，没有python2.7。<br>因此python版本选择为3.3.32<br>apache选择apache2.4<br>pc是windows10,64位，选则win_amd64.whl<br>最后选择结果:mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl</p>\n</li>\n<li><p>whl文件。<br>使用pip 安装whl文件<br>pip install whl完整路径<br>会将mod_wsgi.so文件下载下来。<br>mod_wsgi.so下载的地址：<br><a href=\"http://www.modwsgi.org/\" target=\"_blank\" rel=\"noopener\">http://www.modwsgi.org/</a><br><a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\" target=\"_blank\" rel=\"noopener\">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi</a><br>pip install xxxx.whl</p>\n</li>\n</ul>\n</li>\n<li><p>python下载的地址：</p>\n<ul>\n<li><a href=\"https://www.python.org/downloads/\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/</a><br>pip 工具下载地址：<br><a href=\"https://pypi.python.org/pypi/pip#downloads\" target=\"_blank\" rel=\"noopener\">https://pypi.python.org/pypi/pip#downloads</a><br>python setup.py install </li>\n</ul>\n</li>\n<li><p>django 安装<br>pip install django</p>\n</li>\n<li><p>mysqldb安装<br><a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient\" target=\"_blank\" rel=\"noopener\">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient</a></p>\n</li>\n</ol>\n<p>####至此搭建环境所需的所有东西都齐全了。apache2.4 python3.3.3 </p>\n<hr>\n<p>##部署问题</p>\n<ol>\n<li><p>apache + wsgi + django<br>apache配置wsgi相关<br>apache配置django静态文件路径<br>django配置静态文件搜集路径</p>\n<p><em>无法载入css，img，js相关静态文件问题：\n</em>apache配置 config</p>\n<pre><code>LoadModule wsgi_module modules/mod_wsgi.so\nWSGIScriptAlias / C:/Python33/src/mysite/mysite/wsgi.py\nWSGIPythonPath C:/Python33/src/mysite\n&lt;Directory C:/Python33/src/mysite/mysite&gt;\n&lt;Files wsgi.py&gt;\n    Require all granted\n    Require ip 127.0.0.1\n&lt;/Files&gt;\n&lt;/Directory&gt;\n</code></pre><p><em>这个目录是django 配置的静待资源根目录。\n</em>有这个后，再加上django配置，就可以顺利的找到css，img，js相关文件。</p>\n<pre><code>Alias /static/ C:/Python33/src/mysite/mysite/static/\n&lt;Directory C:/Python33/src/mysite/mysite/static/&gt;\n    Require all granted\n&lt;/Directory&gt;\n</code></pre></li>\n<li><p>setting配置<br>django部署后，css、js、图片都无法显示。<br>setting.py 设置：</p>\n<pre><code>STATIC_URL = &apos;/static/&apos;\nSTATIC_ROOT = &apos;c:/Python33/src/mysite/mysite/static/&apos;\n</code></pre><p>其他不变即可。<br>运行 python manage.py collectstatic<br>将app的static文件夹下的所有资源放到STATIC_ROOT之下</p>\n</li>\n<li><p>数据库修改后同步<br>数据表重建：数据库模型修改后同步给开发服务器。<br>数据库model和view、template不同,修改后无法及时同步。<br>python makemigrations<br>python migrate</p>\n<p>数据表导出,将连接的数据库的所有表导出到models_all.py文件中<br>python manage.py inspectdb &gt; models_all.py </p>\n</li>\n<li><p>运行时网站反应速度慢<br>使用apache自带的工具启动apache服务。</p>\n</li>\n<li><p>BUG</p>\n<ul>\n<li>1264 - Out of range value adjusted for column ‘ID’ at row 1<br>byte类型  mysql tinyint 有符号<br>mysql默认有符号,应该改为无符号。</li>\n<li>将apache bin的目录弄错了。导致httpd.cfg 读取别的,修改无用</li>\n<li></li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>##使用django开发游戏web管理后台<br>   为什么需要这个web后台：运行时修改游戏服务器内容。比如活动开启,黑名单。。。<br>   在修改服务器数据时，做一些输入的限制性操作。即使你在地铁上也能够通过手机<br>   随时了解服务器的运行状况。<br>   使用方式：web后台修改mysql数据后，通知GameServer重新载入mysql配置文件。<br>   web后台在GameServer运行期间，增加，删除，修改GameServer中的数据。</p>\n<hr>\n<hr>\n<ul>\n<li>环境搭建。<br>apache2.4<br>Django1.8<br>python3.3.3<br>mod_wsgi.so模块，<br>mysql</li>\n<li>Django admin与GameServer服务器交互，http协议实现交互</li>\n<li>Django 与mysql交互，Django自带admin管理（增删改）</li>\n<li>使用Django的template进行交互UI展示（特定交互UI实现）</li>\n<li>部署相关</li>\n</ul>\n<hr>\n<p>###完成后看上去像是这样子</p>\n<ol>\n<li><p>webUI后台,login，logout，config，userinfo，restore(从mysql回滚数据到GameServer)<br>是webUI和GameServer交互的入口，根据需求任意增加</p>\n<p><img src=\"\\imgs\\django\\django-01.png\" alt=\"图片\"></p>\n</li>\n<li><p>django的admin后台，用来操作mysql数据库</p>\n<p><img src=\"\\imgs\\django\\django-02.png\" alt=\"图片\"><br><img src=\"\\imgs\\django\\django-03.png\" alt=\"图片\"></p>\n</li>\n</ol>\n<hr>\n<p>##Django和GameServer之间的交互</p>\n<ul>\n<li>使用http协议，与GameServer之间进行数据交互。</li>\n<li>python的相关教程。Python3.x与python2.x差异,在使用过程中可以体会得到<br><a href=\"http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000\" target=\"_blank\" rel=\"noopener\">python教程</a></li>\n</ul>\n<hr>\n<p>##Django和MySql之间的交互</p>\n<ul>\n<li>Django自带的admin模块，提供了非常好的交互UI,对mysql数据库的增删改查，支持很容易使用</li>\n<li>Django相关教程<br><a href=\"https://docs.djangoproject.com/en/1.8/\" target=\"_blank\" rel=\"noopener\">官方,非常详细的教程</a><br><a href=\"http://www.ziqiangxuetang.com/django/django-tutorial.html\" target=\"_blank\" rel=\"noopener\">可以了解Django的运作机制</a></li>\n</ul>\n<hr>\n<p>##代码路径</p>\n<ol>\n<li>scut框架<br><a href=\"https://github.com/guccang/Scut\">https://github.com/guccang/Scut</a><br>从scutgame官方fork过来的代码，用于更新scutgame框架错误</li>\n<li>服务器逻辑代码服务器逻辑代码<br><a href=\"https://github.com/guccang/scutlogic\">https://github.com/guccang/scutlogic</a><br>服务器逻辑代码，写的action逻辑</li>\n<li>webUI<br><a href=\"https://github.com/guccang/django-GM-tools.git\">https://github.com/guccang/django-GM-tools.git</a></li>\n</ol>\n<hr>\n<p>##环境搭建</p>\n<ol>\n<li><p>apache/django/python版本选择问题</p>\n<ul>\n<li><p>apache部署的时候需要用到，生产环境的mod_wsgi.so<br>因此需要根据mod_wsgi.so的支持来选择apache和python的版本。</p>\n</li>\n<li><p>apache2.4 下载的地址：官方网站只提供了源码下载，不提供二进制安装文件。<br>以下是apache官方推荐的下载地址之一，也是wsgi官方链接推荐的下载地址。<br><a href=\"http://www.apachelounge.com/download/\" target=\"_blank\" rel=\"noopener\">http://www.apachelounge.com/download/</a><br>copy xxxx.whl 到 apache2.4 modual目录下<br>配置apache2.4各种目录</p>\n</li>\n<li><p>apache2.4对应的运行环境下载的地址：使用vc2015编译的apache2.4，需要安装对应的运行时vs环境<br><a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=48145\" target=\"_blank\" rel=\"noopener\">http://www.microsoft.com/en-us/download/details.aspx?id=48145</a></p>\n</li>\n<li><p>apache2.4上述路径下载玩apache后。是一个包含所有apache组建的文件夹。然后需要安装apache服务<br>到windows中区。<br>进入apache bin目录。httpd -k install</p>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><p>mod_wsgi官方网址：<a href=\"http://www.modwsgi.org/\" target=\"_blank\" rel=\"noopener\">http://www.modwsgi.org/</a><br>找到mod_wsgi.so的windows下载的地址现在(2015/8/13)是：<br><a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\" target=\"_blank\" rel=\"noopener\">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi</a><br>找得到如下whl文件下载地址：<br>mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl<br>mod_wsgi-4.4.13+ap24vc10-cp33-none-win32.whl<br>ap24=apache2.4<br>cp33=python3.3.x<br>win_amd64=windows os 64<br>win32=windows os 32</p>\n</li>\n<li><p>根据自己的环境找到对应的whl文件。<br>目前win64的只找到了python3的版本，没有python2.7。<br>因此python版本选择为3.3.32<br>apache选择apache2.4<br>pc是windows10,64位，选则win_amd64.whl<br>最后选择结果:mod_wsgi-4.4.13+ap24vc10-cp33-none-win_amd64.whl</p>\n</li>\n<li><p>whl文件。<br>使用pip 安装whl文件<br>pip install whl完整路径<br>会将mod_wsgi.so文件下载下来。<br>mod_wsgi.so下载的地址：<br><a href=\"http://www.modwsgi.org/\" target=\"_blank\" rel=\"noopener\">http://www.modwsgi.org/</a><br><a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi\" target=\"_blank\" rel=\"noopener\">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi</a><br>pip install xxxx.whl</p>\n</li>\n</ul>\n</li>\n<li><p>python下载的地址：</p>\n<ul>\n<li><a href=\"https://www.python.org/downloads/\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads/</a><br>pip 工具下载地址：<br><a href=\"https://pypi.python.org/pypi/pip#downloads\" target=\"_blank\" rel=\"noopener\">https://pypi.python.org/pypi/pip#downloads</a><br>python setup.py install </li>\n</ul>\n</li>\n<li><p>django 安装<br>pip install django</p>\n</li>\n<li><p>mysqldb安装<br><a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient\" target=\"_blank\" rel=\"noopener\">http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient</a></p>\n</li>\n</ol>\n<p>####至此搭建环境所需的所有东西都齐全了。apache2.4 python3.3.3 </p>\n<hr>\n<p>##部署问题</p>\n<ol>\n<li><p>apache + wsgi + django<br>apache配置wsgi相关<br>apache配置django静态文件路径<br>django配置静态文件搜集路径</p>\n<p><em>无法载入css，img，js相关静态文件问题：\n</em>apache配置 config</p>\n<pre><code>LoadModule wsgi_module modules/mod_wsgi.so\nWSGIScriptAlias / C:/Python33/src/mysite/mysite/wsgi.py\nWSGIPythonPath C:/Python33/src/mysite\n&lt;Directory C:/Python33/src/mysite/mysite&gt;\n&lt;Files wsgi.py&gt;\n    Require all granted\n    Require ip 127.0.0.1\n&lt;/Files&gt;\n&lt;/Directory&gt;\n</code></pre><p><em>这个目录是django 配置的静待资源根目录。\n</em>有这个后，再加上django配置，就可以顺利的找到css，img，js相关文件。</p>\n<pre><code>Alias /static/ C:/Python33/src/mysite/mysite/static/\n&lt;Directory C:/Python33/src/mysite/mysite/static/&gt;\n    Require all granted\n&lt;/Directory&gt;\n</code></pre></li>\n<li><p>setting配置<br>django部署后，css、js、图片都无法显示。<br>setting.py 设置：</p>\n<pre><code>STATIC_URL = &apos;/static/&apos;\nSTATIC_ROOT = &apos;c:/Python33/src/mysite/mysite/static/&apos;\n</code></pre><p>其他不变即可。<br>运行 python manage.py collectstatic<br>将app的static文件夹下的所有资源放到STATIC_ROOT之下</p>\n</li>\n<li><p>数据库修改后同步<br>数据表重建：数据库模型修改后同步给开发服务器。<br>数据库model和view、template不同,修改后无法及时同步。<br>python makemigrations<br>python migrate</p>\n<p>数据表导出,将连接的数据库的所有表导出到models_all.py文件中<br>python manage.py inspectdb &gt; models_all.py </p>\n</li>\n<li><p>运行时网站反应速度慢<br>使用apache自带的工具启动apache服务。</p>\n</li>\n<li><p>BUG</p>\n<ul>\n<li>1264 - Out of range value adjusted for column ‘ID’ at row 1<br>byte类型  mysql tinyint 有符号<br>mysql默认有符号,应该改为无符号。</li>\n<li>将apache bin的目录弄错了。导致httpd.cfg 读取别的,修改无用</li>\n<li></li>\n</ul>\n</li>\n</ol>\n"},{"title":"fork me on GitHub","date":"2015-07-28T15:25:49.000Z","_content":"\n***\n\n1.  点击进入[github](https://github.com/blog/273-github-ribbons)\n    选择喜欢的fork me on GitHub，粘贴代码\n        <a href=\"https://github.com/you\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png\"></a>\n        \n2.  修改代码href跳转url为你想跳转的页面。\n        <a href=\"https://github.com/guccang\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png\"></a>\n\n3.  将代码粘贴到如下文件中\n        themes\\landscape\\layout\\index.ejs\n\n\n","source":"_posts/fork-me-on-GitHub.md","raw":"title: fork me on GitHub\ndate: 2015-07-28 11:25:49\ntags: git\n---\n\n***\n\n1.  点击进入[github](https://github.com/blog/273-github-ribbons)\n    选择喜欢的fork me on GitHub，粘贴代码\n        <a href=\"https://github.com/you\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png\"></a>\n        \n2.  修改代码href跳转url为你想跳转的页面。\n        <a href=\"https://github.com/guccang\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png\"></a>\n\n3.  将代码粘贴到如下文件中\n        themes\\landscape\\layout\\index.ejs\n\n\n","slug":"fork-me-on-GitHub","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosf8000akypve0i2bftd","content":"<hr>\n<ol>\n<li><p>点击进入<a href=\"https://github.com/blog/273-github-ribbons\">github</a><br>选择喜欢的fork me on GitHub，粘贴代码</p>\n<pre><code>&lt;a href=&quot;https://github.com/you&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67&quot; alt=&quot;Fork me on GitHub&quot; data-canonical-src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png&quot;&gt;&lt;/a&gt;\n</code></pre></li>\n<li><p>修改代码href跳转url为你想跳转的页面。</p>\n<pre><code>&lt;a href=&quot;https://github.com/guccang&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67&quot; alt=&quot;Fork me on GitHub&quot; data-canonical-src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png&quot;&gt;&lt;/a&gt;\n</code></pre></li>\n<li><p>将代码粘贴到如下文件中</p>\n<pre><code>themes\\landscape\\layout\\index.ejs\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<ol>\n<li><p>点击进入<a href=\"https://github.com/blog/273-github-ribbons\">github</a><br>选择喜欢的fork me on GitHub，粘贴代码</p>\n<pre><code>&lt;a href=&quot;https://github.com/you&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67&quot; alt=&quot;Fork me on GitHub&quot; data-canonical-src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png&quot;&gt;&lt;/a&gt;\n</code></pre></li>\n<li><p>修改代码href跳转url为你想跳转的页面。</p>\n<pre><code>&lt;a href=&quot;https://github.com/guccang&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67&quot; alt=&quot;Fork me on GitHub&quot; data-canonical-src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png&quot;&gt;&lt;/a&gt;\n</code></pre></li>\n<li><p>将代码粘贴到如下文件中</p>\n<pre><code>themes\\landscape\\layout\\index.ejs\n</code></pre></li>\n</ol>\n"},{"title":"git command","date":"2015-07-22T05:29:03.000Z","_content":"\n***\n***\n\n##[git 命令]\n\ngit 版本管理是基于快照(也就是copy备份)每个单独文件来完成的，而以前使用的svn则是记录了文件的不同部分。\ngit 有一个特点就是，每个版本只保留,上个版本变动的文件，因此非常优雅。\n\n***\n\n1.  git status\n    文件状态,git status\n    untracked-未加入github维护 \n    unmodified-未改变的\n    modified-改变的/修改，新增，删除，冲突\n    staged-处于暂缓处区域的执行git add命令后进入staged状态,等待commit 到本地仓库。\n \n2.  git clone url name\n    clone创建工程\n\n        git init\n        vim .gitignore\n        git remote add origin url\n        git push origin master\n\n    本地创建工程\n    github创建项目 url\n    本地创建工程文件夹，进入文件夹\n    git init 初始化，用github管理文件夹\n    vim .gitignore 创建一个忽略文件，这很重要。\n    git remote add origin url 关联远程仓库，然后push，pull就用origin别名来做了。而不需要完整的url了。\n    git push origin master  / git push  / 默认在master分支，所以直接git push就将本地文件同步到远端仓库。\n    至此，仓库创建完成。\n\n3.  修改,添加,删除.\n        git status\n        git add .\n        git commit -a -m \"comment\"\n        git push\n    git staus 查看文件状态，修改，新增，删除，冲突。\n    git add . 添加所有状态改变文件。\n    git commit -a -m \"comment\" 提交到本地仓库，保存。生成commit日志。而后就确保了，你怎么乱来都不会丢失掉提交。\n    git push 讲修改同步到远端仓库。那么，呵呵~~永远都丢不了了。\n    git rm file 删除文件\n    git rm -rf dir 删除文件夹\n\n4.  分支相关\n        git branch -a \n        git checkout -b newBranch master\n        git branch -d barnchName\n        git branch -r -d branchName\n\n    分支创建\n    git branch -a 查看所有分支\n    git checkout -b newBranch master 从master分支上创建一个名为newBranch的分支。\n    编辑，修改后。\n        git add .\n        git commit -a -m \"comment\"\n    git push 会提示错误如下\n        fatal: The current branch bare02 has no upstream branch.\n        To push the current branch and set the remote as upstream, use\n        git push --set-upstream origin bare02\n    表示远端其实没有这个分支存在，需要使用如下简单命令即可。\n    git push -u origin newBranch 表示远端没有，那么就创建一个newBranch，然后提交ok，远端就有新分支名字叫做newBranch了\n    这样就ok了。\n    \n    删除分支\n        git branch -d origin/branchName\n        git branch -r -d origin/branchName 远程仓库分支\n\n5.  抓取远端仓库数据\n        git pull origin\n        git pull origin bare02\n    其他人checkout分支\n    git pull origin \n    这个命令会将origin关联的所有分支都抓取下来。\n    git checkout newBranch 切换到newBranch分支。\n\n    在分支上，合并其他分支修改。\n    比如，处于bare01分支，远端库bare02分支存在有用的内容，你需要合入。\n    这种情况通常发生在clone项目，或者开发项目想发布项目合并时发生。分支间的合并。\n    git pull origin bare02  然后你所处的分支bare01就会讲bare02的分支内容合并到bare01。\n    然后相当于执行了三部修改bare01，add执行，commit执行。剩下的就是push 操作，将合并同步到远端仓库了。\n\n6.  检出\n        git checkout\n    git checkout 实际上是修改HEAD文件的内容，让其指向不同的branch\n    HEAD文件指向的branch就是当前branch.\n    一般来讲，HEAD的内容是指向staging（暂存区）的master文件的\n        detached HEAD\n    如果让HEAD文件指向一个commit id，那就变成了detached HEAD。git checkout 可以达到这个效果\n\n7.  远端仓库操作\n        git pull / git fetch\n    git fetch origin master:bare01 从远端仓库master分支抓取最新内容到本地bare01分支，这是files处于modified状态。\n    git diff bare01  比较一下，bare01分支和本地分支。\n    git merge bare01 合并bare01分支到本地分支\n    git pull 相当于 git fetch + git merge\n    git pull origin master 从远端仓库master分支抓取最新内容到HEAD指向分支，然后合并。\n\n8.  标签\n        git tag\n    git tag 显示所有标签\n    git tag -a v0.2 -m \"create v0.2 tag\" 创建一个名叫v0.2的标签\n    git tag -d v0.2 删除标签\n    git push origin --tag 将所有标签同步到远端服务器。\n    git push origin:refs/tags/v0.2 删除远端标签\n\n\n","source":"_posts/git-command.md","raw":"title: git command\ndate: 2015-07-22 01:29:03\ntags:\n- git\n- tools\n---\n\n***\n***\n\n##[git 命令]\n\ngit 版本管理是基于快照(也就是copy备份)每个单独文件来完成的，而以前使用的svn则是记录了文件的不同部分。\ngit 有一个特点就是，每个版本只保留,上个版本变动的文件，因此非常优雅。\n\n***\n\n1.  git status\n    文件状态,git status\n    untracked-未加入github维护 \n    unmodified-未改变的\n    modified-改变的/修改，新增，删除，冲突\n    staged-处于暂缓处区域的执行git add命令后进入staged状态,等待commit 到本地仓库。\n \n2.  git clone url name\n    clone创建工程\n\n        git init\n        vim .gitignore\n        git remote add origin url\n        git push origin master\n\n    本地创建工程\n    github创建项目 url\n    本地创建工程文件夹，进入文件夹\n    git init 初始化，用github管理文件夹\n    vim .gitignore 创建一个忽略文件，这很重要。\n    git remote add origin url 关联远程仓库，然后push，pull就用origin别名来做了。而不需要完整的url了。\n    git push origin master  / git push  / 默认在master分支，所以直接git push就将本地文件同步到远端仓库。\n    至此，仓库创建完成。\n\n3.  修改,添加,删除.\n        git status\n        git add .\n        git commit -a -m \"comment\"\n        git push\n    git staus 查看文件状态，修改，新增，删除，冲突。\n    git add . 添加所有状态改变文件。\n    git commit -a -m \"comment\" 提交到本地仓库，保存。生成commit日志。而后就确保了，你怎么乱来都不会丢失掉提交。\n    git push 讲修改同步到远端仓库。那么，呵呵~~永远都丢不了了。\n    git rm file 删除文件\n    git rm -rf dir 删除文件夹\n\n4.  分支相关\n        git branch -a \n        git checkout -b newBranch master\n        git branch -d barnchName\n        git branch -r -d branchName\n\n    分支创建\n    git branch -a 查看所有分支\n    git checkout -b newBranch master 从master分支上创建一个名为newBranch的分支。\n    编辑，修改后。\n        git add .\n        git commit -a -m \"comment\"\n    git push 会提示错误如下\n        fatal: The current branch bare02 has no upstream branch.\n        To push the current branch and set the remote as upstream, use\n        git push --set-upstream origin bare02\n    表示远端其实没有这个分支存在，需要使用如下简单命令即可。\n    git push -u origin newBranch 表示远端没有，那么就创建一个newBranch，然后提交ok，远端就有新分支名字叫做newBranch了\n    这样就ok了。\n    \n    删除分支\n        git branch -d origin/branchName\n        git branch -r -d origin/branchName 远程仓库分支\n\n5.  抓取远端仓库数据\n        git pull origin\n        git pull origin bare02\n    其他人checkout分支\n    git pull origin \n    这个命令会将origin关联的所有分支都抓取下来。\n    git checkout newBranch 切换到newBranch分支。\n\n    在分支上，合并其他分支修改。\n    比如，处于bare01分支，远端库bare02分支存在有用的内容，你需要合入。\n    这种情况通常发生在clone项目，或者开发项目想发布项目合并时发生。分支间的合并。\n    git pull origin bare02  然后你所处的分支bare01就会讲bare02的分支内容合并到bare01。\n    然后相当于执行了三部修改bare01，add执行，commit执行。剩下的就是push 操作，将合并同步到远端仓库了。\n\n6.  检出\n        git checkout\n    git checkout 实际上是修改HEAD文件的内容，让其指向不同的branch\n    HEAD文件指向的branch就是当前branch.\n    一般来讲，HEAD的内容是指向staging（暂存区）的master文件的\n        detached HEAD\n    如果让HEAD文件指向一个commit id，那就变成了detached HEAD。git checkout 可以达到这个效果\n\n7.  远端仓库操作\n        git pull / git fetch\n    git fetch origin master:bare01 从远端仓库master分支抓取最新内容到本地bare01分支，这是files处于modified状态。\n    git diff bare01  比较一下，bare01分支和本地分支。\n    git merge bare01 合并bare01分支到本地分支\n    git pull 相当于 git fetch + git merge\n    git pull origin master 从远端仓库master分支抓取最新内容到HEAD指向分支，然后合并。\n\n8.  标签\n        git tag\n    git tag 显示所有标签\n    git tag -a v0.2 -m \"create v0.2 tag\" 创建一个名叫v0.2的标签\n    git tag -d v0.2 删除标签\n    git push origin --tag 将所有标签同步到远端服务器。\n    git push origin:refs/tags/v0.2 删除远端标签\n\n\n","slug":"git-command","published":1,"updated":"2018-02-13T17:50:15.886Z","_id":"cjdlxosfa000ckypvddp76s4j","comments":1,"layout":"post","photos":[],"link":"","content":"<hr>\n<hr>\n<p>##[git 命令]</p>\n<p>git 版本管理是基于快照(也就是copy备份)每个单独文件来完成的，而以前使用的svn则是记录了文件的不同部分。<br>git 有一个特点就是，每个版本只保留,上个版本变动的文件，因此非常优雅。</p>\n<hr>\n<ol>\n<li><p>git status<br>文件状态,git status<br>untracked-未加入github维护<br>unmodified-未改变的<br>modified-改变的/修改，新增，删除，冲突<br>staged-处于暂缓处区域的执行git add命令后进入staged状态,等待commit 到本地仓库。</p>\n</li>\n<li><p>git clone url name<br>clone创建工程</p>\n<pre><code>git init\nvim .gitignore\ngit remote add origin url\ngit push origin master\n</code></pre><p>本地创建工程<br>github创建项目 url<br>本地创建工程文件夹，进入文件夹<br>git init 初始化，用github管理文件夹<br>vim .gitignore 创建一个忽略文件，这很重要。<br>git remote add origin url 关联远程仓库，然后push，pull就用origin别名来做了。而不需要完整的url了。<br>git push origin master  / git push  / 默认在master分支，所以直接git push就将本地文件同步到远端仓库。<br>至此，仓库创建完成。</p>\n</li>\n<li><p>修改,添加,删除.</p>\n<pre><code>git status\ngit add .\ngit commit -a -m &quot;comment&quot;\ngit push\n</code></pre><p>git staus 查看文件状态，修改，新增，删除，冲突。<br>git add . 添加所有状态改变文件。<br>git commit -a -m “comment” 提交到本地仓库，保存。生成commit日志。而后就确保了，你怎么乱来都不会丢失掉提交。<br>git push 讲修改同步到远端仓库。那么，呵呵~~永远都丢不了了。<br>git rm file 删除文件<br>git rm -rf dir 删除文件夹</p>\n</li>\n<li><p>分支相关</p>\n<pre><code>git branch -a \ngit checkout -b newBranch master\ngit branch -d barnchName\ngit branch -r -d branchName\n</code></pre><p>分支创建<br>git branch -a 查看所有分支<br>git checkout -b newBranch master 从master分支上创建一个名为newBranch的分支。<br>编辑，修改后。</p>\n<pre><code>git add .\ngit commit -a -m &quot;comment&quot;\n</code></pre><p>git push 会提示错误如下</p>\n<pre><code>fatal: The current branch bare02 has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin bare02\n</code></pre><p>表示远端其实没有这个分支存在，需要使用如下简单命令即可。<br>git push -u origin newBranch 表示远端没有，那么就创建一个newBranch，然后提交ok，远端就有新分支名字叫做newBranch了<br>这样就ok了。</p>\n<p>删除分支</p>\n<pre><code>git branch -d origin/branchName\ngit branch -r -d origin/branchName 远程仓库分支\n</code></pre></li>\n<li><p>抓取远端仓库数据</p>\n<pre><code>git pull origin\ngit pull origin bare02\n</code></pre><p>其他人checkout分支<br>git pull origin<br>这个命令会将origin关联的所有分支都抓取下来。<br>git checkout newBranch 切换到newBranch分支。</p>\n<p>在分支上，合并其他分支修改。<br>比如，处于bare01分支，远端库bare02分支存在有用的内容，你需要合入。<br>这种情况通常发生在clone项目，或者开发项目想发布项目合并时发生。分支间的合并。<br>git pull origin bare02  然后你所处的分支bare01就会讲bare02的分支内容合并到bare01。<br>然后相当于执行了三部修改bare01，add执行，commit执行。剩下的就是push 操作，将合并同步到远端仓库了。</p>\n</li>\n<li><p>检出</p>\n<pre><code>git checkout\n</code></pre><p>git checkout 实际上是修改HEAD文件的内容，让其指向不同的branch<br>HEAD文件指向的branch就是当前branch.<br>一般来讲，HEAD的内容是指向staging（暂存区）的master文件的</p>\n<pre><code>detached HEAD\n</code></pre><p>如果让HEAD文件指向一个commit id，那就变成了detached HEAD。git checkout 可以达到这个效果</p>\n</li>\n<li><p>远端仓库操作</p>\n<pre><code>git pull / git fetch\n</code></pre><p>git fetch origin master:bare01 从远端仓库master分支抓取最新内容到本地bare01分支，这是files处于modified状态。<br>git diff bare01  比较一下，bare01分支和本地分支。<br>git merge bare01 合并bare01分支到本地分支<br>git pull 相当于 git fetch + git merge<br>git pull origin master 从远端仓库master分支抓取最新内容到HEAD指向分支，然后合并。</p>\n</li>\n<li><p>标签</p>\n<pre><code>git tag\n</code></pre><p>git tag 显示所有标签<br>git tag -a v0.2 -m “create v0.2 tag” 创建一个名叫v0.2的标签<br>git tag -d v0.2 删除标签<br>git push origin –tag 将所有标签同步到远端服务器。<br>git push origin:refs/tags/v0.2 删除远端标签</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<hr>\n<p>##[git 命令]</p>\n<p>git 版本管理是基于快照(也就是copy备份)每个单独文件来完成的，而以前使用的svn则是记录了文件的不同部分。<br>git 有一个特点就是，每个版本只保留,上个版本变动的文件，因此非常优雅。</p>\n<hr>\n<ol>\n<li><p>git status<br>文件状态,git status<br>untracked-未加入github维护<br>unmodified-未改变的<br>modified-改变的/修改，新增，删除，冲突<br>staged-处于暂缓处区域的执行git add命令后进入staged状态,等待commit 到本地仓库。</p>\n</li>\n<li><p>git clone url name<br>clone创建工程</p>\n<pre><code>git init\nvim .gitignore\ngit remote add origin url\ngit push origin master\n</code></pre><p>本地创建工程<br>github创建项目 url<br>本地创建工程文件夹，进入文件夹<br>git init 初始化，用github管理文件夹<br>vim .gitignore 创建一个忽略文件，这很重要。<br>git remote add origin url 关联远程仓库，然后push，pull就用origin别名来做了。而不需要完整的url了。<br>git push origin master  / git push  / 默认在master分支，所以直接git push就将本地文件同步到远端仓库。<br>至此，仓库创建完成。</p>\n</li>\n<li><p>修改,添加,删除.</p>\n<pre><code>git status\ngit add .\ngit commit -a -m &quot;comment&quot;\ngit push\n</code></pre><p>git staus 查看文件状态，修改，新增，删除，冲突。<br>git add . 添加所有状态改变文件。<br>git commit -a -m “comment” 提交到本地仓库，保存。生成commit日志。而后就确保了，你怎么乱来都不会丢失掉提交。<br>git push 讲修改同步到远端仓库。那么，呵呵~~永远都丢不了了。<br>git rm file 删除文件<br>git rm -rf dir 删除文件夹</p>\n</li>\n<li><p>分支相关</p>\n<pre><code>git branch -a \ngit checkout -b newBranch master\ngit branch -d barnchName\ngit branch -r -d branchName\n</code></pre><p>分支创建<br>git branch -a 查看所有分支<br>git checkout -b newBranch master 从master分支上创建一个名为newBranch的分支。<br>编辑，修改后。</p>\n<pre><code>git add .\ngit commit -a -m &quot;comment&quot;\n</code></pre><p>git push 会提示错误如下</p>\n<pre><code>fatal: The current branch bare02 has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin bare02\n</code></pre><p>表示远端其实没有这个分支存在，需要使用如下简单命令即可。<br>git push -u origin newBranch 表示远端没有，那么就创建一个newBranch，然后提交ok，远端就有新分支名字叫做newBranch了<br>这样就ok了。</p>\n<p>删除分支</p>\n<pre><code>git branch -d origin/branchName\ngit branch -r -d origin/branchName 远程仓库分支\n</code></pre></li>\n<li><p>抓取远端仓库数据</p>\n<pre><code>git pull origin\ngit pull origin bare02\n</code></pre><p>其他人checkout分支<br>git pull origin<br>这个命令会将origin关联的所有分支都抓取下来。<br>git checkout newBranch 切换到newBranch分支。</p>\n<p>在分支上，合并其他分支修改。<br>比如，处于bare01分支，远端库bare02分支存在有用的内容，你需要合入。<br>这种情况通常发生在clone项目，或者开发项目想发布项目合并时发生。分支间的合并。<br>git pull origin bare02  然后你所处的分支bare01就会讲bare02的分支内容合并到bare01。<br>然后相当于执行了三部修改bare01，add执行，commit执行。剩下的就是push 操作，将合并同步到远端仓库了。</p>\n</li>\n<li><p>检出</p>\n<pre><code>git checkout\n</code></pre><p>git checkout 实际上是修改HEAD文件的内容，让其指向不同的branch<br>HEAD文件指向的branch就是当前branch.<br>一般来讲，HEAD的内容是指向staging（暂存区）的master文件的</p>\n<pre><code>detached HEAD\n</code></pre><p>如果让HEAD文件指向一个commit id，那就变成了detached HEAD。git checkout 可以达到这个效果</p>\n</li>\n<li><p>远端仓库操作</p>\n<pre><code>git pull / git fetch\n</code></pre><p>git fetch origin master:bare01 从远端仓库master分支抓取最新内容到本地bare01分支，这是files处于modified状态。<br>git diff bare01  比较一下，bare01分支和本地分支。<br>git merge bare01 合并bare01分支到本地分支<br>git pull 相当于 git fetch + git merge<br>git pull origin master 从远端仓库master分支抓取最新内容到HEAD指向分支，然后合并。</p>\n</li>\n<li><p>标签</p>\n<pre><code>git tag\n</code></pre><p>git tag 显示所有标签<br>git tag -a v0.2 -m “create v0.2 tag” 创建一个名叫v0.2的标签<br>git tag -d v0.2 删除标签<br>git push origin –tag 将所有标签同步到远端服务器。<br>git push origin:refs/tags/v0.2 删除远端标签</p>\n</li>\n</ol>\n"},{"title":"git log","date":"2015-07-31T04:12:25.000Z","_content":"\n***\n\n```bash\ngit reflog\n```\n*  作用:显示所有HEAD改变历史\n*  HEAD改变条件有  \n*  git commit命令  \n*  分支切换\n*  git merge命令\n*  ...待补充\n\n***\n\n```bash\ngit log\n```\n1.  作用: 查看提交历史\n\n2.  参数：\n\n\t* -p 按补丁格式显示每个更新之间的差异。\n\t* --stat 显示每次更新的文件修改统计信息。\n\t* --shortstat 只显示 --stat 中最后的行数修改添加移除统计。\n\t* --name-only 仅在提交信息后显示已修改的文件清单。\n\t* --name-status 显示新增、修改、删除的文件清单。\n\t* --abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。\n\t* --relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。\n\t* --graph 显示 ASCII 图形表示的分支合并历史。\n\t* --pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。\n    \n3.  常用参数: \n\t* git log -p  \t// -p表示显示，提交历史的差异部分。\n\t* git log -n \t\t// n为数字,表示显示n条git 提交数据。没有-p 不会显示提交历史。比较整洁。\n\t* git log --stat  // --stat 仅仅显示，增改行数的统计。\n\t* git log --graph // 图形化显示分支提交数据\n    \n4.  格式化参数:\n\t* git log --pretty=oneline // 表示log数据在一行显示，和整洁。\n\t* git log --pretty=format:\"%h - %an, %ar : %s\" // format参数，后面接占位符。\n    \n    \n\t\t选项\t \t说明\n\t\t%H\t\t\t提交对象（commit）的完整哈希字串\n\t\t%h\t\t\t提交对象的简短哈希字串\n\t\t%T\t\t\t树对象（tree）的完整哈希字串\n\t\t%t\t\t\t树对象的简短哈希字串\n\t\t%P\t\t\t父对象（parent）的完整哈希字串\n\t\t%p\t\t\t父对象的简短哈希字串\n\t\t%an\t\t\t作者（author）的名字\n\t\t%ae\t\t\t作者的电子邮件地址\n\t\t%ad\t\t\t作者修订日期（可以用 -date= 选项定制格式）\n\t\t%ar\t\t\t作者修订日期，按多久以前的方式显示\n\t\t%cn\t\t\t提交者(committer)的名字\n\t\t%ce\t\t\t提交者的电子邮件地址\n\t\t%cd\t\t\t提交日期\n\t\t%cr\t\t\t提交日期，按多久以前的方式显示\n\t\t%s\t\t\t提交说明","source":"_posts/git-log.md","raw":"title: git log\ndate: 2015-07-31 00:12:25\ntags:\n- git\n-------\n\n***\n\n```bash\ngit reflog\n```\n*  作用:显示所有HEAD改变历史\n*  HEAD改变条件有  \n*  git commit命令  \n*  分支切换\n*  git merge命令\n*  ...待补充\n\n***\n\n```bash\ngit log\n```\n1.  作用: 查看提交历史\n\n2.  参数：\n\n\t* -p 按补丁格式显示每个更新之间的差异。\n\t* --stat 显示每次更新的文件修改统计信息。\n\t* --shortstat 只显示 --stat 中最后的行数修改添加移除统计。\n\t* --name-only 仅在提交信息后显示已修改的文件清单。\n\t* --name-status 显示新增、修改、删除的文件清单。\n\t* --abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。\n\t* --relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。\n\t* --graph 显示 ASCII 图形表示的分支合并历史。\n\t* --pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。\n    \n3.  常用参数: \n\t* git log -p  \t// -p表示显示，提交历史的差异部分。\n\t* git log -n \t\t// n为数字,表示显示n条git 提交数据。没有-p 不会显示提交历史。比较整洁。\n\t* git log --stat  // --stat 仅仅显示，增改行数的统计。\n\t* git log --graph // 图形化显示分支提交数据\n    \n4.  格式化参数:\n\t* git log --pretty=oneline // 表示log数据在一行显示，和整洁。\n\t* git log --pretty=format:\"%h - %an, %ar : %s\" // format参数，后面接占位符。\n    \n    \n\t\t选项\t \t说明\n\t\t%H\t\t\t提交对象（commit）的完整哈希字串\n\t\t%h\t\t\t提交对象的简短哈希字串\n\t\t%T\t\t\t树对象（tree）的完整哈希字串\n\t\t%t\t\t\t树对象的简短哈希字串\n\t\t%P\t\t\t父对象（parent）的完整哈希字串\n\t\t%p\t\t\t父对象的简短哈希字串\n\t\t%an\t\t\t作者（author）的名字\n\t\t%ae\t\t\t作者的电子邮件地址\n\t\t%ad\t\t\t作者修订日期（可以用 -date= 选项定制格式）\n\t\t%ar\t\t\t作者修订日期，按多久以前的方式显示\n\t\t%cn\t\t\t提交者(committer)的名字\n\t\t%ce\t\t\t提交者的电子邮件地址\n\t\t%cd\t\t\t提交日期\n\t\t%cr\t\t\t提交日期，按多久以前的方式显示\n\t\t%s\t\t\t提交说明","slug":"git-log","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfb000dkypv5fyr3kxe","content":"<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure>\n<ul>\n<li>作用:显示所有HEAD改变历史</li>\n<li>HEAD改变条件有  </li>\n<li>git commit命令  </li>\n<li>分支切换</li>\n<li>git merge命令</li>\n<li>…待补充</li>\n</ul>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>作用: 查看提交历史</p>\n</li>\n<li><p>参数：</p>\n<ul>\n<li>-p 按补丁格式显示每个更新之间的差异。</li>\n<li>–stat 显示每次更新的文件修改统计信息。</li>\n<li>–shortstat 只显示 –stat 中最后的行数修改添加移除统计。</li>\n<li>–name-only 仅在提交信息后显示已修改的文件清单。</li>\n<li>–name-status 显示新增、修改、删除的文件清单。</li>\n<li>–abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。</li>\n<li>–relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。</li>\n<li>–graph 显示 ASCII 图形表示的分支合并历史。</li>\n<li>–pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。</li>\n</ul>\n</li>\n<li><p>常用参数: </p>\n<ul>\n<li>git log -p      // -p表示显示，提交历史的差异部分。</li>\n<li>git log -n         // n为数字,表示显示n条git 提交数据。没有-p 不会显示提交历史。比较整洁。</li>\n<li>git log –stat  // –stat 仅仅显示，增改行数的统计。</li>\n<li>git log –graph // 图形化显示分支提交数据</li>\n</ul>\n</li>\n<li><p>格式化参数:</p>\n<ul>\n<li>git log –pretty=oneline // 表示log数据在一行显示，和整洁。</li>\n<li>git log –pretty=format:”%h - %an, %ar : %s” // format参数，后面接占位符。</li>\n</ul>\n</li>\n</ol>\n<pre><code>选项         说明\n%H            提交对象（commit）的完整哈希字串\n%h            提交对象的简短哈希字串\n%T            树对象（tree）的完整哈希字串\n%t            树对象的简短哈希字串\n%P            父对象（parent）的完整哈希字串\n%p            父对象的简短哈希字串\n%an            作者（author）的名字\n%ae            作者的电子邮件地址\n%ad            作者修订日期（可以用 -date= 选项定制格式）\n%ar            作者修订日期，按多久以前的方式显示\n%cn            提交者(committer)的名字\n%ce            提交者的电子邮件地址\n%cd            提交日期\n%cr            提交日期，按多久以前的方式显示\n%s            提交说明\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure>\n<ul>\n<li>作用:显示所有HEAD改变历史</li>\n<li>HEAD改变条件有  </li>\n<li>git commit命令  </li>\n<li>分支切换</li>\n<li>git merge命令</li>\n<li>…待补充</li>\n</ul>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>作用: 查看提交历史</p>\n</li>\n<li><p>参数：</p>\n<ul>\n<li>-p 按补丁格式显示每个更新之间的差异。</li>\n<li>–stat 显示每次更新的文件修改统计信息。</li>\n<li>–shortstat 只显示 –stat 中最后的行数修改添加移除统计。</li>\n<li>–name-only 仅在提交信息后显示已修改的文件清单。</li>\n<li>–name-status 显示新增、修改、删除的文件清单。</li>\n<li>–abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。</li>\n<li>–relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。</li>\n<li>–graph 显示 ASCII 图形表示的分支合并历史。</li>\n<li>–pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。</li>\n</ul>\n</li>\n<li><p>常用参数: </p>\n<ul>\n<li>git log -p      // -p表示显示，提交历史的差异部分。</li>\n<li>git log -n         // n为数字,表示显示n条git 提交数据。没有-p 不会显示提交历史。比较整洁。</li>\n<li>git log –stat  // –stat 仅仅显示，增改行数的统计。</li>\n<li>git log –graph // 图形化显示分支提交数据</li>\n</ul>\n</li>\n<li><p>格式化参数:</p>\n<ul>\n<li>git log –pretty=oneline // 表示log数据在一行显示，和整洁。</li>\n<li>git log –pretty=format:”%h - %an, %ar : %s” // format参数，后面接占位符。</li>\n</ul>\n</li>\n</ol>\n<pre><code>选项         说明\n%H            提交对象（commit）的完整哈希字串\n%h            提交对象的简短哈希字串\n%T            树对象（tree）的完整哈希字串\n%t            树对象的简短哈希字串\n%P            父对象（parent）的完整哈希字串\n%p            父对象的简短哈希字串\n%an            作者（author）的名字\n%ae            作者的电子邮件地址\n%ad            作者修订日期（可以用 -date= 选项定制格式）\n%ar            作者修订日期，按多久以前的方式显示\n%cn            提交者(committer)的名字\n%ce            提交者的电子邮件地址\n%cd            提交日期\n%cr            提交日期，按多久以前的方式显示\n%s            提交说明\n</code></pre>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-02-13T15:47:22.501Z","updated":"2018-02-13T15:47:22.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfc000fkypv0lfuo30q","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"linux shell commands","date":"2015-09-08T21:29:51.000Z","_content":"\n> #实用性linux命令\n\n***\n\n##shell cmd\n ###1. top\n ###2. ps\n\n***\n###1. top\n![topCmd](/imgs/linux-shell-commands/topCMD.jpg)\n1. top - 17:26:23 up 19 days, 3:47 1 user, load average: 0.09, 0.25, 0.24\n  * 17:26:23, 当前时间\n  * up 19 days, 3:47,系统运行时间,19天,3小时47分钟\n  * 1 user, 当前登录用户数\n  * load average: 0.09,0.25,0.24,系统负载,任务队列的平均长度。3个值分别为,1分钟,5分钟,15分钟前到现在的平均值.\n\n2. Tasks: 82 total, 1 running, 81 sleeping, 0 stopped, 0 zombie\n  * Tasks: 进程相关数据\n  * 82 total 进程总数\n  * 1 running, 正在运行的进程数\n  * 81 sleeping, 睡眠的进程数\n  * 0 stopped, 停止的进程数\n  * 0 zombie, 僵尸进程数\n\n3. Cpu(s): 0.2%us, 0.2%sy, 0.0%ni, 99.7%id, 0.0%wa, 0..0%hi, 0.0%si, 0.0%stopped\n  * Cpu(s): cpu相关数据,cpu占用百分比\n  * 0.2%us, 用户空间占用cpu百分比\n  * 0.2%sy, 内核空间占用cpu百分比\n  * 0.0%ni, 用户进程空间内改变过优先级的进程占用cpu百分比\n  * 99.7%id, 空闲cpu百分比\n  * 0.0%wa, 等待输入输出的cpu时间百分比\n  * 0.0%hi, 硬件中断占用cpu百分比\n  * 0.0%si, 软件中断占用cpu百分比\n  * 0.0%st, 盗取时间(超级监视器服务其他cpu时,虚拟cpu等待的时间)\n  \n4. Mem: 3921112k total, 3670576k userd, 250536k free, 142524k buffers\n  * Mem: 物理内存使用量\n  * 3921112k total : 物理内存总量\n  * 3670576k used: 使用量\n  * 250536k free: 空闲内存总量\n  * 142524k buffers: 用作内核缓存的内存量\n  \n5. Swap: ok total, ok used, ok free, 1401036k cached\n  * Swap: 交换区\n  * 0k total: 使用的交换区总量\n  * 0k used: 空闲的交换区总量\n  * 1401036k cached: 缓冲的交换区总量。 内存中的内容被换出到交换区，而后又被换入到内存，\n    但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小。\n    相应的内存再次被换出时可不必再对交换区写入。\n    \n6. 其他\n  * PID :进程id\n  * PPID :父进程id\n  * RUSER :real user name\n  * UID: 进程所有者的用户id\n  * USER: 进程所有者的用户名\n  * GROUP: 进程所有者的组名\n  * TTY: 启动进程的终端名。\n  * PR: 优先级\n  * NI: nice值,负值表示表示高优先级。\n  * P: 最后使用的CPU,仅在多cpu环境下有意义\n  * %CPU: 上次更新到现在的cup时间占用百分比\n  * TIME: 进程使用的CPU时间总计,单位秒\n  * TIME+: 进程使用的cpu时间总计,单位1/100秒\n  * %MEM: 进程使用的物理内存百分比\n  * VIRT: 进程使用的虚拟内存总量,单位kb.VIRT=Swap+RES\n  * SWAP: 进程实用的虚拟内存中,被换出的大小,单位kb\n  * RES: 进程使用的,为被换出的物理内存大小,单位kb,RES=CODE+DATA\n  * CODE: 可执行代码占用的内存大小,单位kb\n  * DATA: 可执行代码以外的部分(数据段+栈)占用的物理内存大小,单位kb\n  * SHR：共享内存大小,单位kb\n  * nFLT: 页面错误次数\n  * nDRT: 最后一次写入到现在,被修改过的页面数\n  * 进程状态:\n    S=睡眠,D=不可中断的睡眠状态,R=运行,T=跟踪/停止,Z=僵尸进程\n  * COMMAND: 命令名\n  * WCHAN: 若该进程在睡眠,则显示睡眠中的系统函数名\n  * Flags: 任务标志.\n  \n  \n### 2. ps\n* ps -aux | grep redis | grep -v grep \n  显示进程名称包含redis的进程,显示进程名称不包含grep的进程。","source":"_posts/linux-shell-commands.md","raw":"title: linux shell commands\ndate: 2015-09-08 17:29:51\ntags:\n- LINUX\n- cmd-line\n---\n\n> #实用性linux命令\n\n***\n\n##shell cmd\n ###1. top\n ###2. ps\n\n***\n###1. top\n![topCmd](/imgs/linux-shell-commands/topCMD.jpg)\n1. top - 17:26:23 up 19 days, 3:47 1 user, load average: 0.09, 0.25, 0.24\n  * 17:26:23, 当前时间\n  * up 19 days, 3:47,系统运行时间,19天,3小时47分钟\n  * 1 user, 当前登录用户数\n  * load average: 0.09,0.25,0.24,系统负载,任务队列的平均长度。3个值分别为,1分钟,5分钟,15分钟前到现在的平均值.\n\n2. Tasks: 82 total, 1 running, 81 sleeping, 0 stopped, 0 zombie\n  * Tasks: 进程相关数据\n  * 82 total 进程总数\n  * 1 running, 正在运行的进程数\n  * 81 sleeping, 睡眠的进程数\n  * 0 stopped, 停止的进程数\n  * 0 zombie, 僵尸进程数\n\n3. Cpu(s): 0.2%us, 0.2%sy, 0.0%ni, 99.7%id, 0.0%wa, 0..0%hi, 0.0%si, 0.0%stopped\n  * Cpu(s): cpu相关数据,cpu占用百分比\n  * 0.2%us, 用户空间占用cpu百分比\n  * 0.2%sy, 内核空间占用cpu百分比\n  * 0.0%ni, 用户进程空间内改变过优先级的进程占用cpu百分比\n  * 99.7%id, 空闲cpu百分比\n  * 0.0%wa, 等待输入输出的cpu时间百分比\n  * 0.0%hi, 硬件中断占用cpu百分比\n  * 0.0%si, 软件中断占用cpu百分比\n  * 0.0%st, 盗取时间(超级监视器服务其他cpu时,虚拟cpu等待的时间)\n  \n4. Mem: 3921112k total, 3670576k userd, 250536k free, 142524k buffers\n  * Mem: 物理内存使用量\n  * 3921112k total : 物理内存总量\n  * 3670576k used: 使用量\n  * 250536k free: 空闲内存总量\n  * 142524k buffers: 用作内核缓存的内存量\n  \n5. Swap: ok total, ok used, ok free, 1401036k cached\n  * Swap: 交换区\n  * 0k total: 使用的交换区总量\n  * 0k used: 空闲的交换区总量\n  * 1401036k cached: 缓冲的交换区总量。 内存中的内容被换出到交换区，而后又被换入到内存，\n    但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小。\n    相应的内存再次被换出时可不必再对交换区写入。\n    \n6. 其他\n  * PID :进程id\n  * PPID :父进程id\n  * RUSER :real user name\n  * UID: 进程所有者的用户id\n  * USER: 进程所有者的用户名\n  * GROUP: 进程所有者的组名\n  * TTY: 启动进程的终端名。\n  * PR: 优先级\n  * NI: nice值,负值表示表示高优先级。\n  * P: 最后使用的CPU,仅在多cpu环境下有意义\n  * %CPU: 上次更新到现在的cup时间占用百分比\n  * TIME: 进程使用的CPU时间总计,单位秒\n  * TIME+: 进程使用的cpu时间总计,单位1/100秒\n  * %MEM: 进程使用的物理内存百分比\n  * VIRT: 进程使用的虚拟内存总量,单位kb.VIRT=Swap+RES\n  * SWAP: 进程实用的虚拟内存中,被换出的大小,单位kb\n  * RES: 进程使用的,为被换出的物理内存大小,单位kb,RES=CODE+DATA\n  * CODE: 可执行代码占用的内存大小,单位kb\n  * DATA: 可执行代码以外的部分(数据段+栈)占用的物理内存大小,单位kb\n  * SHR：共享内存大小,单位kb\n  * nFLT: 页面错误次数\n  * nDRT: 最后一次写入到现在,被修改过的页面数\n  * 进程状态:\n    S=睡眠,D=不可中断的睡眠状态,R=运行,T=跟踪/停止,Z=僵尸进程\n  * COMMAND: 命令名\n  * WCHAN: 若该进程在睡眠,则显示睡眠中的系统函数名\n  * Flags: 任务标志.\n  \n  \n### 2. ps\n* ps -aux | grep redis | grep -v grep \n  显示进程名称包含redis的进程,显示进程名称不包含grep的进程。","slug":"linux-shell-commands","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfg000hkypv18kb3lsq","content":"<blockquote>\n<p>#实用性linux命令</p>\n</blockquote>\n<hr>\n<p>##shell cmd</p>\n<p> ###1. top</p>\n<p> ###2. ps</p>\n<hr>\n<p>###1. top<br><img src=\"/imgs/linux-shell-commands/topCMD.jpg\" alt=\"topCmd\"></p>\n<ol>\n<li><p>top - 17:26:23 up 19 days, 3:47 1 user, load average: 0.09, 0.25, 0.24</p>\n<ul>\n<li>17:26:23, 当前时间</li>\n<li>up 19 days, 3:47,系统运行时间,19天,3小时47分钟</li>\n<li>1 user, 当前登录用户数</li>\n<li>load average: 0.09,0.25,0.24,系统负载,任务队列的平均长度。3个值分别为,1分钟,5分钟,15分钟前到现在的平均值.</li>\n</ul>\n</li>\n<li><p>Tasks: 82 total, 1 running, 81 sleeping, 0 stopped, 0 zombie</p>\n<ul>\n<li>Tasks: 进程相关数据</li>\n<li>82 total 进程总数</li>\n<li>1 running, 正在运行的进程数</li>\n<li>81 sleeping, 睡眠的进程数</li>\n<li>0 stopped, 停止的进程数</li>\n<li>0 zombie, 僵尸进程数</li>\n</ul>\n</li>\n<li><p>Cpu(s): 0.2%us, 0.2%sy, 0.0%ni, 99.7%id, 0.0%wa, 0..0%hi, 0.0%si, 0.0%stopped</p>\n<ul>\n<li>Cpu(s): cpu相关数据,cpu占用百分比</li>\n<li>0.2%us, 用户空间占用cpu百分比</li>\n<li>0.2%sy, 内核空间占用cpu百分比</li>\n<li>0.0%ni, 用户进程空间内改变过优先级的进程占用cpu百分比</li>\n<li>99.7%id, 空闲cpu百分比</li>\n<li>0.0%wa, 等待输入输出的cpu时间百分比</li>\n<li>0.0%hi, 硬件中断占用cpu百分比</li>\n<li>0.0%si, 软件中断占用cpu百分比</li>\n<li>0.0%st, 盗取时间(超级监视器服务其他cpu时,虚拟cpu等待的时间)</li>\n</ul>\n</li>\n<li><p>Mem: 3921112k total, 3670576k userd, 250536k free, 142524k buffers</p>\n<ul>\n<li>Mem: 物理内存使用量</li>\n<li>3921112k total : 物理内存总量</li>\n<li>3670576k used: 使用量</li>\n<li>250536k free: 空闲内存总量</li>\n<li>142524k buffers: 用作内核缓存的内存量</li>\n</ul>\n</li>\n<li><p>Swap: ok total, ok used, ok free, 1401036k cached</p>\n<ul>\n<li>Swap: 交换区</li>\n<li>0k total: 使用的交换区总量</li>\n<li>0k used: 空闲的交换区总量</li>\n<li>1401036k cached: 缓冲的交换区总量。 内存中的内容被换出到交换区，而后又被换入到内存，<br>但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小。<br>相应的内存再次被换出时可不必再对交换区写入。</li>\n</ul>\n</li>\n<li><p>其他</p>\n<ul>\n<li>PID :进程id</li>\n<li>PPID :父进程id</li>\n<li>RUSER :real user name</li>\n<li>UID: 进程所有者的用户id</li>\n<li>USER: 进程所有者的用户名</li>\n<li>GROUP: 进程所有者的组名</li>\n<li>TTY: 启动进程的终端名。</li>\n<li>PR: 优先级</li>\n<li>NI: nice值,负值表示表示高优先级。</li>\n<li>P: 最后使用的CPU,仅在多cpu环境下有意义</li>\n<li>%CPU: 上次更新到现在的cup时间占用百分比</li>\n<li>TIME: 进程使用的CPU时间总计,单位秒</li>\n<li>TIME+: 进程使用的cpu时间总计,单位1/100秒</li>\n<li>%MEM: 进程使用的物理内存百分比</li>\n<li>VIRT: 进程使用的虚拟内存总量,单位kb.VIRT=Swap+RES</li>\n<li>SWAP: 进程实用的虚拟内存中,被换出的大小,单位kb</li>\n<li>RES: 进程使用的,为被换出的物理内存大小,单位kb,RES=CODE+DATA</li>\n<li>CODE: 可执行代码占用的内存大小,单位kb</li>\n<li>DATA: 可执行代码以外的部分(数据段+栈)占用的物理内存大小,单位kb</li>\n<li>SHR：共享内存大小,单位kb</li>\n<li>nFLT: 页面错误次数</li>\n<li>nDRT: 最后一次写入到现在,被修改过的页面数</li>\n<li>进程状态:<br>S=睡眠,D=不可中断的睡眠状态,R=运行,T=跟踪/停止,Z=僵尸进程</li>\n<li>COMMAND: 命令名</li>\n<li>WCHAN: 若该进程在睡眠,则显示睡眠中的系统函数名</li>\n<li>Flags: 任务标志.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"2-ps\"><a href=\"#2-ps\" class=\"headerlink\" title=\"2. ps\"></a>2. ps</h3><ul>\n<li>ps -aux | grep redis | grep -v grep<br>显示进程名称包含redis的进程,显示进程名称不包含grep的进程。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>#实用性linux命令</p>\n</blockquote>\n<hr>\n<p>##shell cmd</p>\n<p> ###1. top</p>\n<p> ###2. ps</p>\n<hr>\n<p>###1. top<br><img src=\"/imgs/linux-shell-commands/topCMD.jpg\" alt=\"topCmd\"></p>\n<ol>\n<li><p>top - 17:26:23 up 19 days, 3:47 1 user, load average: 0.09, 0.25, 0.24</p>\n<ul>\n<li>17:26:23, 当前时间</li>\n<li>up 19 days, 3:47,系统运行时间,19天,3小时47分钟</li>\n<li>1 user, 当前登录用户数</li>\n<li>load average: 0.09,0.25,0.24,系统负载,任务队列的平均长度。3个值分别为,1分钟,5分钟,15分钟前到现在的平均值.</li>\n</ul>\n</li>\n<li><p>Tasks: 82 total, 1 running, 81 sleeping, 0 stopped, 0 zombie</p>\n<ul>\n<li>Tasks: 进程相关数据</li>\n<li>82 total 进程总数</li>\n<li>1 running, 正在运行的进程数</li>\n<li>81 sleeping, 睡眠的进程数</li>\n<li>0 stopped, 停止的进程数</li>\n<li>0 zombie, 僵尸进程数</li>\n</ul>\n</li>\n<li><p>Cpu(s): 0.2%us, 0.2%sy, 0.0%ni, 99.7%id, 0.0%wa, 0..0%hi, 0.0%si, 0.0%stopped</p>\n<ul>\n<li>Cpu(s): cpu相关数据,cpu占用百分比</li>\n<li>0.2%us, 用户空间占用cpu百分比</li>\n<li>0.2%sy, 内核空间占用cpu百分比</li>\n<li>0.0%ni, 用户进程空间内改变过优先级的进程占用cpu百分比</li>\n<li>99.7%id, 空闲cpu百分比</li>\n<li>0.0%wa, 等待输入输出的cpu时间百分比</li>\n<li>0.0%hi, 硬件中断占用cpu百分比</li>\n<li>0.0%si, 软件中断占用cpu百分比</li>\n<li>0.0%st, 盗取时间(超级监视器服务其他cpu时,虚拟cpu等待的时间)</li>\n</ul>\n</li>\n<li><p>Mem: 3921112k total, 3670576k userd, 250536k free, 142524k buffers</p>\n<ul>\n<li>Mem: 物理内存使用量</li>\n<li>3921112k total : 物理内存总量</li>\n<li>3670576k used: 使用量</li>\n<li>250536k free: 空闲内存总量</li>\n<li>142524k buffers: 用作内核缓存的内存量</li>\n</ul>\n</li>\n<li><p>Swap: ok total, ok used, ok free, 1401036k cached</p>\n<ul>\n<li>Swap: 交换区</li>\n<li>0k total: 使用的交换区总量</li>\n<li>0k used: 空闲的交换区总量</li>\n<li>1401036k cached: 缓冲的交换区总量。 内存中的内容被换出到交换区，而后又被换入到内存，<br>但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小。<br>相应的内存再次被换出时可不必再对交换区写入。</li>\n</ul>\n</li>\n<li><p>其他</p>\n<ul>\n<li>PID :进程id</li>\n<li>PPID :父进程id</li>\n<li>RUSER :real user name</li>\n<li>UID: 进程所有者的用户id</li>\n<li>USER: 进程所有者的用户名</li>\n<li>GROUP: 进程所有者的组名</li>\n<li>TTY: 启动进程的终端名。</li>\n<li>PR: 优先级</li>\n<li>NI: nice值,负值表示表示高优先级。</li>\n<li>P: 最后使用的CPU,仅在多cpu环境下有意义</li>\n<li>%CPU: 上次更新到现在的cup时间占用百分比</li>\n<li>TIME: 进程使用的CPU时间总计,单位秒</li>\n<li>TIME+: 进程使用的cpu时间总计,单位1/100秒</li>\n<li>%MEM: 进程使用的物理内存百分比</li>\n<li>VIRT: 进程使用的虚拟内存总量,单位kb.VIRT=Swap+RES</li>\n<li>SWAP: 进程实用的虚拟内存中,被换出的大小,单位kb</li>\n<li>RES: 进程使用的,为被换出的物理内存大小,单位kb,RES=CODE+DATA</li>\n<li>CODE: 可执行代码占用的内存大小,单位kb</li>\n<li>DATA: 可执行代码以外的部分(数据段+栈)占用的物理内存大小,单位kb</li>\n<li>SHR：共享内存大小,单位kb</li>\n<li>nFLT: 页面错误次数</li>\n<li>nDRT: 最后一次写入到现在,被修改过的页面数</li>\n<li>进程状态:<br>S=睡眠,D=不可中断的睡眠状态,R=运行,T=跟踪/停止,Z=僵尸进程</li>\n<li>COMMAND: 命令名</li>\n<li>WCHAN: 若该进程在睡眠,则显示睡眠中的系统函数名</li>\n<li>Flags: 任务标志.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"2-ps\"><a href=\"#2-ps\" class=\"headerlink\" title=\"2. ps\"></a>2. ps</h3><ul>\n<li>ps -aux | grep redis | grep -v grep<br>显示进程名称包含redis的进程,显示进程名称不包含grep的进程。</li>\n</ul>\n"},{"title":"mysql","date":"2015-09-23T20:06:06.000Z","_content":">> ##mysql\n\n***\n\n###1.0 mysql 停止启动\n * net stop mysql\n   net start mysql\n\n###2.0 mysql设置时区\n * 查看时区\n   show variables like '%time_zone%'; \n   \n * 设置时区\n    set time_zone = '+8:00'\n    select now() \n\n###3.0 权限相关\n * 查看正在使用的用户名\n select user()\n \n * 查看用户权限\n show grants for 用户名\n \n * 修改用户权限\n mysql> GRANT <privileges> ON <what> #权限 & 数据库.表\n -> TO <user> [IDENTIFIED BY \"<password>\"] #提升用户\n -> [WITH GRANT OPTION]; #可否授权\n\n GRANT select,index ON phdata.*\n TO game_user@'%' IDENTIFIED BY '123';\n \n * 修改用户密码\n use mysql;\n UPDATE user SET password=PASSWORD('123') WHERER user='game_user';\n FLUSH PRIVILEGES;\n mysql quit;\n 执行1.停止mysql，重启mysql。\n    ","source":"_posts/mysql.md","raw":"title: mysql\ndate: 2015-09-23 16:06:06\ntags:\n- mysql\n---\n>> ##mysql\n\n***\n\n###1.0 mysql 停止启动\n * net stop mysql\n   net start mysql\n\n###2.0 mysql设置时区\n * 查看时区\n   show variables like '%time_zone%'; \n   \n * 设置时区\n    set time_zone = '+8:00'\n    select now() \n\n###3.0 权限相关\n * 查看正在使用的用户名\n select user()\n \n * 查看用户权限\n show grants for 用户名\n \n * 修改用户权限\n mysql> GRANT <privileges> ON <what> #权限 & 数据库.表\n -> TO <user> [IDENTIFIED BY \"<password>\"] #提升用户\n -> [WITH GRANT OPTION]; #可否授权\n\n GRANT select,index ON phdata.*\n TO game_user@'%' IDENTIFIED BY '123';\n \n * 修改用户密码\n use mysql;\n UPDATE user SET password=PASSWORD('123') WHERER user='game_user';\n FLUSH PRIVILEGES;\n mysql quit;\n 执行1.停止mysql，重启mysql。\n    ","slug":"mysql","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfh000kkypvvt83a5pq","content":"<blockquote>\n<blockquote>\n<p>##mysql</p>\n</blockquote>\n</blockquote>\n<hr>\n<p>###1.0 mysql 停止启动</p>\n<ul>\n<li>net stop mysql<br>net start mysql</li>\n</ul>\n<p>###2.0 mysql设置时区</p>\n<ul>\n<li><p>查看时区<br>show variables like ‘%time_zone%’; </p>\n</li>\n<li><p>设置时区<br> set time_zone = ‘+8:00’<br> select now() </p>\n</li>\n</ul>\n<p>###3.0 权限相关</p>\n<ul>\n<li><p>查看正在使用的用户名<br>select user()</p>\n</li>\n<li><p>查看用户权限<br>show grants for 用户名</p>\n</li>\n<li><p>修改用户权限<br>mysql&gt; GRANT <privileges> ON <what> #权限 &amp; 数据库.表<br>-&gt; TO <user> [IDENTIFIED BY “<password>“] #提升用户<br>-&gt; [WITH GRANT OPTION]; #可否授权</password></user></what></privileges></p>\n<p>GRANT select,index ON phdata.*<br>TO game_user@’%’ IDENTIFIED BY ‘123’;</p>\n</li>\n<li><p>修改用户密码<br>use mysql;<br>UPDATE user SET password=PASSWORD(‘123’) WHERER user=’game_user’;<br>FLUSH PRIVILEGES;<br>mysql quit;<br>执行1.停止mysql，重启mysql。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<blockquote>\n<p>##mysql</p>\n</blockquote>\n</blockquote>\n<hr>\n<p>###1.0 mysql 停止启动</p>\n<ul>\n<li>net stop mysql<br>net start mysql</li>\n</ul>\n<p>###2.0 mysql设置时区</p>\n<ul>\n<li><p>查看时区<br>show variables like ‘%time_zone%’; </p>\n</li>\n<li><p>设置时区<br> set time_zone = ‘+8:00’<br> select now() </p>\n</li>\n</ul>\n<p>###3.0 权限相关</p>\n<ul>\n<li><p>查看正在使用的用户名<br>select user()</p>\n</li>\n<li><p>查看用户权限<br>show grants for 用户名</p>\n</li>\n<li><p>修改用户权限<br>mysql&gt; GRANT <privileges> ON <what> #权限 &amp; 数据库.表<br>-&gt; TO <user> [IDENTIFIED BY “<password>“] #提升用户<br>-&gt; [WITH GRANT OPTION]; #可否授权</password></user></what></privileges></p>\n<p>GRANT select,index ON phdata.*<br>TO game_user@’%’ IDENTIFIED BY ‘123’;</p>\n</li>\n<li><p>修改用户密码<br>use mysql;<br>UPDATE user SET password=PASSWORD(‘123’) WHERER user=’game_user’;<br>FLUSH PRIVILEGES;<br>mysql quit;<br>执行1.停止mysql，重启mysql。</p>\n</li>\n</ul>\n"},{"title":"vs 自定义注释/代码段","date":"2015-07-28T15:35:10.000Z","_content":"\n***\n***\n\n1.  代码段管理：\n    创建一个snippet文件，导入到vs中。键入自定义字符后，tab键两次，自动生成注释/代码段。\n    snippet是讲一个key 与一段字符关联(可以使注释，可以是代码)\n    如~~vs中输入tryf，两次tab后直接输出\n```bash\ntry \n{\t        \t\t    \n}\nfinally\n{\n}\n```\n\n2.  自定义文件注释模板\n    vs中输入guccangFC ,tab键2次，自动生成如下注释。\n```bash\n/****************************************************************************\n    File:\t\tAutoTest.cs\n    Desc:\t\tAutomated testing\n    Date:\t\t2015-7-27\n    Author:\t\tguccang\n    URL:\t\thttp://guccang.github.io\n    Email:\t\tguccang@126.com\n****************************************************************************/\n```\n\n3.  对应的snippet文件\n\n```bash\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<CodeSnippets xmlns=\"http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet\">\n\n  <CodeSnippet Format=\"1.0.0\">\n    <Header>\n      <Title>FileComment</Title>\n      <Shortcut>guccangFC</Shortcut>\n      <Description>FileComment 语句的代码段</Description>\n      <Author>guccang</Author>\n      <SnippetTypes>\n        <SnippetType>Expansion</SnippetType>\n        <SnippetType>SurroundsWith</SnippetType>\n      </SnippetTypes>\n    </Header>\n\t\n    <Snippet>\n      <Declarations>\n\t    <Literal>\n          <ID>Name</ID>\n          <ToolTip>文件名</ToolTip>\n          <Default>fileName</Default>\n        </Literal>\n\t\t\n        <Literal>\n          <ID>License</ID>\n          <ToolTip>授权</ToolTip>\n          <Default>MIT</Default>\n        </Literal>\n\n        <Literal>\n          <ID>Author</ID>\n          <ToolTip>作者</ToolTip>\n          <Default>guccang</Default>\n        </Literal>\n\n        <Literal>\n          <ID>Date</ID>\n          <ToolTip>日期</ToolTip>\n          <Default>2015-7-21 11:11:11</Default>\n        </Literal>\n\t\t\n\t\t<Literal>\n          <ID>Desc</ID>\n          <ToolTip>描述</ToolTip>\n          <Default>添加文件描述</Default>\n        </Literal>\n\t\t\n\t\t<Literal>\n          <ID>URL</ID>\n          <ToolTip>url</ToolTip>\n          <Default>http://guccang.github.io</Default>\n        </Literal>\n\n\t\t<Literal>\n          <ID>Email</ID>\n          <ToolTip>Email</ToolTip>\n          <Default>guccang@126.com</Default>\n        </Literal>\n\t\t\n\n      </Declarations>\n\n      <Code Language=\"csharp\">\n        <![CDATA[\n\t\t/****************************************************************************\n\t\t\tFile:\t\t$Name$\n\t\t\tDesc:\t\t$Desc$\n\t\t\tDate:\t\t$Date$\n\t\t\tAuthor:\t\t$Author$\n\t\t\tURL:\t\t$URL$\n\t\t\tEmail:\t\t$Email$\n\t    ****************************************************************************/\n\t\t$selected$ $end$]]>\n      </Code>\n\n    </Snippet>\n  </CodeSnippet>\n</CodeSnippets>\n\n```\n4.  将上述文件保存为fileComment.snippet , snippet文件扩展名\n    打开vs导入snippet文件。\n    vs-工具-代码段管理\n    ![图片](\\imgs\\snippet.png)\n\n5.  参考资料\n    [官方]https://msdn.microsoft.com/zh-cn/library/ms165394(v=vs.120).aspx\n    [博客01](http://blog.csdn.net/oyi319/article/details/5605502)\n    [博客02](http://jingyan.baidu.com/article/ea24bc39b86ededa62b3311f.html)\n    [博客03](http://blog.csdn.net/nuaalfm/article/details/1772551)\n","source":"_posts/vs-自定义注释-代码段.md","raw":"title: vs 自定义注释/代码段\ndate: 2015-07-28 11:35:10\ntags: \n- tools\n- visual studio\n---\n\n***\n***\n\n1.  代码段管理：\n    创建一个snippet文件，导入到vs中。键入自定义字符后，tab键两次，自动生成注释/代码段。\n    snippet是讲一个key 与一段字符关联(可以使注释，可以是代码)\n    如~~vs中输入tryf，两次tab后直接输出\n```bash\ntry \n{\t        \t\t    \n}\nfinally\n{\n}\n```\n\n2.  自定义文件注释模板\n    vs中输入guccangFC ,tab键2次，自动生成如下注释。\n```bash\n/****************************************************************************\n    File:\t\tAutoTest.cs\n    Desc:\t\tAutomated testing\n    Date:\t\t2015-7-27\n    Author:\t\tguccang\n    URL:\t\thttp://guccang.github.io\n    Email:\t\tguccang@126.com\n****************************************************************************/\n```\n\n3.  对应的snippet文件\n\n```bash\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<CodeSnippets xmlns=\"http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet\">\n\n  <CodeSnippet Format=\"1.0.0\">\n    <Header>\n      <Title>FileComment</Title>\n      <Shortcut>guccangFC</Shortcut>\n      <Description>FileComment 语句的代码段</Description>\n      <Author>guccang</Author>\n      <SnippetTypes>\n        <SnippetType>Expansion</SnippetType>\n        <SnippetType>SurroundsWith</SnippetType>\n      </SnippetTypes>\n    </Header>\n\t\n    <Snippet>\n      <Declarations>\n\t    <Literal>\n          <ID>Name</ID>\n          <ToolTip>文件名</ToolTip>\n          <Default>fileName</Default>\n        </Literal>\n\t\t\n        <Literal>\n          <ID>License</ID>\n          <ToolTip>授权</ToolTip>\n          <Default>MIT</Default>\n        </Literal>\n\n        <Literal>\n          <ID>Author</ID>\n          <ToolTip>作者</ToolTip>\n          <Default>guccang</Default>\n        </Literal>\n\n        <Literal>\n          <ID>Date</ID>\n          <ToolTip>日期</ToolTip>\n          <Default>2015-7-21 11:11:11</Default>\n        </Literal>\n\t\t\n\t\t<Literal>\n          <ID>Desc</ID>\n          <ToolTip>描述</ToolTip>\n          <Default>添加文件描述</Default>\n        </Literal>\n\t\t\n\t\t<Literal>\n          <ID>URL</ID>\n          <ToolTip>url</ToolTip>\n          <Default>http://guccang.github.io</Default>\n        </Literal>\n\n\t\t<Literal>\n          <ID>Email</ID>\n          <ToolTip>Email</ToolTip>\n          <Default>guccang@126.com</Default>\n        </Literal>\n\t\t\n\n      </Declarations>\n\n      <Code Language=\"csharp\">\n        <![CDATA[\n\t\t/****************************************************************************\n\t\t\tFile:\t\t$Name$\n\t\t\tDesc:\t\t$Desc$\n\t\t\tDate:\t\t$Date$\n\t\t\tAuthor:\t\t$Author$\n\t\t\tURL:\t\t$URL$\n\t\t\tEmail:\t\t$Email$\n\t    ****************************************************************************/\n\t\t$selected$ $end$]]>\n      </Code>\n\n    </Snippet>\n  </CodeSnippet>\n</CodeSnippets>\n\n```\n4.  将上述文件保存为fileComment.snippet , snippet文件扩展名\n    打开vs导入snippet文件。\n    vs-工具-代码段管理\n    ![图片](\\imgs\\snippet.png)\n\n5.  参考资料\n    [官方]https://msdn.microsoft.com/zh-cn/library/ms165394(v=vs.120).aspx\n    [博客01](http://blog.csdn.net/oyi319/article/details/5605502)\n    [博客02](http://jingyan.baidu.com/article/ea24bc39b86ededa62b3311f.html)\n    [博客03](http://blog.csdn.net/nuaalfm/article/details/1772551)\n","slug":"vs-自定义注释-代码段","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfi000mkypv3mbwv5ml","content":"<hr>\n<hr>\n<ol>\n<li><p>代码段管理：<br>创建一个snippet文件，导入到vs中。键入自定义字符后，tab键两次，自动生成注释/代码段。<br>snippet是讲一个key 与一段字符关联(可以使注释，可以是代码)<br>如~~vs中输入tryf，两次tab后直接输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">try </span><br><span class=\"line\">&#123;\t        \t\t    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">finally</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>自定义文件注释模板<br>vs中输入guccangFC ,tab键2次，自动生成如下注释。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/****************************************************************************</span><br><span class=\"line\">    File:\t\tAutoTest.cs</span><br><span class=\"line\">    Desc:\t\tAutomated testing</span><br><span class=\"line\">    Date:\t\t2015-7-27</span><br><span class=\"line\">    Author:\t\tguccang</span><br><span class=\"line\">    URL:\t\thttp://guccang.github.io</span><br><span class=\"line\">    Email:\t\tguccang@126.com</span><br><span class=\"line\">****************************************************************************/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对应的snippet文件</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span>?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;CodeSnippets xmlns=<span class=\"string\">\"http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;CodeSnippet Format=<span class=\"string\">\"1.0.0\"</span>&gt;</span><br><span class=\"line\">    &lt;Header&gt;</span><br><span class=\"line\">      &lt;Title&gt;FileComment&lt;/Title&gt;</span><br><span class=\"line\">      &lt;Shortcut&gt;guccangFC&lt;/Shortcut&gt;</span><br><span class=\"line\">      &lt;Description&gt;FileComment 语句的代码段&lt;/Description&gt;</span><br><span class=\"line\">      &lt;Author&gt;guccang&lt;/Author&gt;</span><br><span class=\"line\">      &lt;SnippetTypes&gt;</span><br><span class=\"line\">        &lt;SnippetType&gt;Expansion&lt;/SnippetType&gt;</span><br><span class=\"line\">        &lt;SnippetType&gt;SurroundsWith&lt;/SnippetType&gt;</span><br><span class=\"line\">      &lt;/SnippetTypes&gt;</span><br><span class=\"line\">    &lt;/Header&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    &lt;Snippet&gt;</span><br><span class=\"line\">      &lt;Declarations&gt;</span><br><span class=\"line\">\t    &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Name&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;文件名&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;fileName&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;License&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;授权&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;MIT&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Author&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;作者&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;guccang&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Date&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;日期&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;2015-7-21 11:11:11&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Desc&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;描述&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;添加文件描述&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;URL&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;url&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;http://guccang.github.io&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Email&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;Email&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;guccang@126.com&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;/Declarations&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;Code Language=<span class=\"string\">\"csharp\"</span>&gt;</span><br><span class=\"line\">        &lt;![CDATA[</span><br><span class=\"line\">\t\t/****************************************************************************</span><br><span class=\"line\">\t\t\tFile:\t\t<span class=\"variable\">$Name</span>$</span><br><span class=\"line\">\t\t\tDesc:\t\t<span class=\"variable\">$Desc</span>$</span><br><span class=\"line\">\t\t\tDate:\t\t<span class=\"variable\">$Date</span>$</span><br><span class=\"line\">\t\t\tAuthor:\t\t<span class=\"variable\">$Author</span>$</span><br><span class=\"line\">\t\t\tURL:\t\t<span class=\"variable\">$URL</span>$</span><br><span class=\"line\">\t\t\tEmail:\t\t<span class=\"variable\">$Email</span>$</span><br><span class=\"line\">\t    ****************************************************************************/</span><br><span class=\"line\">\t\t<span class=\"variable\">$selected</span>$ <span class=\"variable\">$end</span>$]]&gt;</span><br><span class=\"line\">      &lt;/Code&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/Snippet&gt;</span><br><span class=\"line\">  &lt;/CodeSnippet&gt;</span><br><span class=\"line\">&lt;/CodeSnippets&gt;</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>将上述文件保存为fileComment.snippet , snippet文件扩展名<br>打开vs导入snippet文件。<br>vs-工具-代码段管理<br><img src=\"\\imgs\\snippet.png\" alt=\"图片\"></p>\n</li>\n<li><p>参考资料<br>[官方]<a href=\"https://msdn.microsoft.com/zh-cn/library/ms165394(v=vs.120).aspx\" target=\"_blank\" rel=\"noopener\">https://msdn.microsoft.com/zh-cn/library/ms165394(v=vs.120).aspx</a><br><a href=\"http://blog.csdn.net/oyi319/article/details/5605502\" target=\"_blank\" rel=\"noopener\">博客01</a><br><a href=\"http://jingyan.baidu.com/article/ea24bc39b86ededa62b3311f.html\" target=\"_blank\" rel=\"noopener\">博客02</a><br><a href=\"http://blog.csdn.net/nuaalfm/article/details/1772551\" target=\"_blank\" rel=\"noopener\">博客03</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<hr>\n<ol>\n<li><p>代码段管理：<br>创建一个snippet文件，导入到vs中。键入自定义字符后，tab键两次，自动生成注释/代码段。<br>snippet是讲一个key 与一段字符关联(可以使注释，可以是代码)<br>如~~vs中输入tryf，两次tab后直接输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">try </span><br><span class=\"line\">&#123;\t        \t\t    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">finally</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>自定义文件注释模板<br>vs中输入guccangFC ,tab键2次，自动生成如下注释。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/****************************************************************************</span><br><span class=\"line\">    File:\t\tAutoTest.cs</span><br><span class=\"line\">    Desc:\t\tAutomated testing</span><br><span class=\"line\">    Date:\t\t2015-7-27</span><br><span class=\"line\">    Author:\t\tguccang</span><br><span class=\"line\">    URL:\t\thttp://guccang.github.io</span><br><span class=\"line\">    Email:\t\tguccang@126.com</span><br><span class=\"line\">****************************************************************************/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对应的snippet文件</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span>?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;CodeSnippets xmlns=<span class=\"string\">\"http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;CodeSnippet Format=<span class=\"string\">\"1.0.0\"</span>&gt;</span><br><span class=\"line\">    &lt;Header&gt;</span><br><span class=\"line\">      &lt;Title&gt;FileComment&lt;/Title&gt;</span><br><span class=\"line\">      &lt;Shortcut&gt;guccangFC&lt;/Shortcut&gt;</span><br><span class=\"line\">      &lt;Description&gt;FileComment 语句的代码段&lt;/Description&gt;</span><br><span class=\"line\">      &lt;Author&gt;guccang&lt;/Author&gt;</span><br><span class=\"line\">      &lt;SnippetTypes&gt;</span><br><span class=\"line\">        &lt;SnippetType&gt;Expansion&lt;/SnippetType&gt;</span><br><span class=\"line\">        &lt;SnippetType&gt;SurroundsWith&lt;/SnippetType&gt;</span><br><span class=\"line\">      &lt;/SnippetTypes&gt;</span><br><span class=\"line\">    &lt;/Header&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    &lt;Snippet&gt;</span><br><span class=\"line\">      &lt;Declarations&gt;</span><br><span class=\"line\">\t    &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Name&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;文件名&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;fileName&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;License&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;授权&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;MIT&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Author&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;作者&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;guccang&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Date&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;日期&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;2015-7-21 11:11:11&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Desc&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;描述&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;添加文件描述&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;URL&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;url&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;http://guccang.github.io&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;Literal&gt;</span><br><span class=\"line\">          &lt;ID&gt;Email&lt;/ID&gt;</span><br><span class=\"line\">          &lt;ToolTip&gt;Email&lt;/ToolTip&gt;</span><br><span class=\"line\">          &lt;Default&gt;guccang@126.com&lt;/Default&gt;</span><br><span class=\"line\">        &lt;/Literal&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;/Declarations&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;Code Language=<span class=\"string\">\"csharp\"</span>&gt;</span><br><span class=\"line\">        &lt;![CDATA[</span><br><span class=\"line\">\t\t/****************************************************************************</span><br><span class=\"line\">\t\t\tFile:\t\t<span class=\"variable\">$Name</span>$</span><br><span class=\"line\">\t\t\tDesc:\t\t<span class=\"variable\">$Desc</span>$</span><br><span class=\"line\">\t\t\tDate:\t\t<span class=\"variable\">$Date</span>$</span><br><span class=\"line\">\t\t\tAuthor:\t\t<span class=\"variable\">$Author</span>$</span><br><span class=\"line\">\t\t\tURL:\t\t<span class=\"variable\">$URL</span>$</span><br><span class=\"line\">\t\t\tEmail:\t\t<span class=\"variable\">$Email</span>$</span><br><span class=\"line\">\t    ****************************************************************************/</span><br><span class=\"line\">\t\t<span class=\"variable\">$selected</span>$ <span class=\"variable\">$end</span>$]]&gt;</span><br><span class=\"line\">      &lt;/Code&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/Snippet&gt;</span><br><span class=\"line\">  &lt;/CodeSnippet&gt;</span><br><span class=\"line\">&lt;/CodeSnippets&gt;</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>将上述文件保存为fileComment.snippet , snippet文件扩展名<br>打开vs导入snippet文件。<br>vs-工具-代码段管理<br><img src=\"\\imgs\\snippet.png\" alt=\"图片\"></p>\n</li>\n<li><p>参考资料<br>[官方]<a href=\"https://msdn.microsoft.com/zh-cn/library/ms165394(v=vs.120).aspx\" target=\"_blank\" rel=\"noopener\">https://msdn.microsoft.com/zh-cn/library/ms165394(v=vs.120).aspx</a><br><a href=\"http://blog.csdn.net/oyi319/article/details/5605502\" target=\"_blank\" rel=\"noopener\">博客01</a><br><a href=\"http://jingyan.baidu.com/article/ea24bc39b86ededa62b3311f.html\" target=\"_blank\" rel=\"noopener\">博客02</a><br><a href=\"http://blog.csdn.net/nuaalfm/article/details/1772551\" target=\"_blank\" rel=\"noopener\">博客03</a></p>\n</li>\n</ol>\n"},{"title":"win8.1 update to win10,vs2013 bug","date":"2015-07-30T14:51:47.000Z","_content":"\n***\n***\n\n1.  windows8.1更新到windows10后\n    vs2013bug无法创建项目，已有项目无法编译。提示如下错误。\n        未找到与约束ContractName Microsoft.VisualStudio.Text.ITextDocumentFactoryService...匹配的导出。\n    ![图1](\\imgs\\vs2013Error\\vs2013Error01.png)\n2.  AppData\\Roaming\\Microsoft\\VisualStudio\\12.0\\ActivityLog.xml相关错误。\n    ![图2](\\imgs\\vs2013Error\\vs2013Error02.png)\n\n3.  解决办法:删除ComponentModelCache文件夹内所有文件。\n        Remove ComponentModelCache folder content.\n        %AppData%\\..\\Local\\Microsoft\\VisualStudio\\12.0\\ComponentModelCache\n","source":"_posts/win8-1-update-to-win10-vs2013-bug.md","raw":"title: 'win8.1 update to win10,vs2013 bug'\ndate: 2015-07-30 10:51:47\ntags:\n- visual studio\n---\n\n***\n***\n\n1.  windows8.1更新到windows10后\n    vs2013bug无法创建项目，已有项目无法编译。提示如下错误。\n        未找到与约束ContractName Microsoft.VisualStudio.Text.ITextDocumentFactoryService...匹配的导出。\n    ![图1](\\imgs\\vs2013Error\\vs2013Error01.png)\n2.  AppData\\Roaming\\Microsoft\\VisualStudio\\12.0\\ActivityLog.xml相关错误。\n    ![图2](\\imgs\\vs2013Error\\vs2013Error02.png)\n\n3.  解决办法:删除ComponentModelCache文件夹内所有文件。\n        Remove ComponentModelCache folder content.\n        %AppData%\\..\\Local\\Microsoft\\VisualStudio\\12.0\\ComponentModelCache\n","slug":"win8-1-update-to-win10-vs2013-bug","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfj000nkypv3q99fbch","content":"<hr>\n<hr>\n<ol>\n<li>windows8.1更新到windows10后<br>vs2013bug无法创建项目，已有项目无法编译。提示如下错误。<pre><code>未找到与约束ContractName Microsoft.VisualStudio.Text.ITextDocumentFactoryService...匹配的导出。\n</code></pre><img src=\"\\imgs\\vs2013Error\\vs2013Error01.png\" alt=\"图1\"></li>\n<li><p>AppData\\Roaming\\Microsoft\\VisualStudio\\12.0\\ActivityLog.xml相关错误。<br><img src=\"\\imgs\\vs2013Error\\vs2013Error02.png\" alt=\"图2\"></p>\n</li>\n<li><p>解决办法:删除ComponentModelCache文件夹内所有文件。</p>\n<pre><code>Remove ComponentModelCache folder content.\n%AppData%\\..\\Local\\Microsoft\\VisualStudio\\12.0\\ComponentModelCache\n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<hr>\n<ol>\n<li>windows8.1更新到windows10后<br>vs2013bug无法创建项目，已有项目无法编译。提示如下错误。<pre><code>未找到与约束ContractName Microsoft.VisualStudio.Text.ITextDocumentFactoryService...匹配的导出。\n</code></pre><img src=\"\\imgs\\vs2013Error\\vs2013Error01.png\" alt=\"图1\"></li>\n<li><p>AppData\\Roaming\\Microsoft\\VisualStudio\\12.0\\ActivityLog.xml相关错误。<br><img src=\"\\imgs\\vs2013Error\\vs2013Error02.png\" alt=\"图2\"></p>\n</li>\n<li><p>解决办法:删除ComponentModelCache文件夹内所有文件。</p>\n<pre><code>Remove ComponentModelCache folder content.\n%AppData%\\..\\Local\\Microsoft\\VisualStudio\\12.0\\ComponentModelCache\n</code></pre></li>\n</ol>\n"},{"title":"不敢开除员工的创业者在想什么？","date":"2015-09-18T14:25:53.000Z","_content":">> 不敢开除员工的创业者在想什么？\n***\n\n###创业公司 CEO 们决定要开人的时候，心里大多是拒绝的。但他们不久就会发现，这样做是同时帮了双方一个大忙。天使投资机构Homebrew合伙人 Hunter Walk 总结了他多年来从创业者那里听到的最多的几个理由：\n***\n####1.  公司的活儿太多了，这些人或多或少也做了一点。\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm01.jpg)\n * 正因为创业公司组织简单，工作量大，少数“过分闲适”的人可能会占用其他员工的工作时间，来解决他们遗留的问题。顾客、合伙人、投资人甚至招聘时参观的人接触到他们之后，都会对公司的印象减分——他们传达出的负面信息是：在这里摸鱼是完全可以接受的。\n\n####2.  这些人很受欢迎，开了他们会对公司文化造成伤害\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm02.jpg)\n * 别傻了，真的因为工作在办公室里撕起来的有多少？即便这些人看起来很受欢迎，当他的拖沓的工作效率和低下的责任感已经对团队其他人的工作产生困扰，团队中的其他人会对管理者的不作为产生质疑。反思一下，你背后的一双双眼睛透露出的目光时充满干劲还是充满怨念？要知道，你每一天的拖延都是对团队本身的伤害。\n\n####3.  这是我的错，好的管理者应该能够把他们培养成更好的员工 \n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm03.jpg)\n * 错，好的管理者应该把精力放在激励表现好的员工，以及为团队带来更多人才上面。当出现问题时，你会想，是不是在招聘环节产生的食物造成这样的结果。或许是，但在意识到这个问题时，你该做的不是为已经掉在地上的黄油面包而懊悔，而是及时止损！\n\n####4.  这会不会间接地告诉我的投资人，我们的招聘有问题\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm04.jpg)\n * 投资人最希望看到的是，保持每个员工都是高标准的。除非是要解雇一些重量级的人物，其他的不需要向投资人汇报，因为这种事他们一定见得比你多多啦～如果作为 CEO 每年给团队来一次大换血，可能确实是你的问题了；但一个创业公司如果从来没开过人，那也是一朵奇葩。\n\n####5.  我太忙了，为了慎重起见……\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm05.jpg)\n * 扔掉所有这些借口，团队管理应该被管理者列为最高优先级。解雇不合适的人，做到直接、迅速、公平。\n   但注意，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇。重要的事情说三遍。\n\n***\n引用\n[不敢开除员工的创业者在想什么？](http://jiezhisz.baijia.baidu.com/article/170713)\n","source":"_posts/不敢开除员工的创业者在想什么？.md","raw":"title: 不敢开除员工的创业者在想什么？\ndate: 2015-09-18 10:25:53\ntags:\n- 美文\n---\n>> 不敢开除员工的创业者在想什么？\n***\n\n###创业公司 CEO 们决定要开人的时候，心里大多是拒绝的。但他们不久就会发现，这样做是同时帮了双方一个大忙。天使投资机构Homebrew合伙人 Hunter Walk 总结了他多年来从创业者那里听到的最多的几个理由：\n***\n####1.  公司的活儿太多了，这些人或多或少也做了一点。\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm01.jpg)\n * 正因为创业公司组织简单，工作量大，少数“过分闲适”的人可能会占用其他员工的工作时间，来解决他们遗留的问题。顾客、合伙人、投资人甚至招聘时参观的人接触到他们之后，都会对公司的印象减分——他们传达出的负面信息是：在这里摸鱼是完全可以接受的。\n\n####2.  这些人很受欢迎，开了他们会对公司文化造成伤害\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm02.jpg)\n * 别傻了，真的因为工作在办公室里撕起来的有多少？即便这些人看起来很受欢迎，当他的拖沓的工作效率和低下的责任感已经对团队其他人的工作产生困扰，团队中的其他人会对管理者的不作为产生质疑。反思一下，你背后的一双双眼睛透露出的目光时充满干劲还是充满怨念？要知道，你每一天的拖延都是对团队本身的伤害。\n\n####3.  这是我的错，好的管理者应该能够把他们培养成更好的员工 \n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm03.jpg)\n * 错，好的管理者应该把精力放在激励表现好的员工，以及为团队带来更多人才上面。当出现问题时，你会想，是不是在招聘环节产生的食物造成这样的结果。或许是，但在意识到这个问题时，你该做的不是为已经掉在地上的黄油面包而懊悔，而是及时止损！\n\n####4.  这会不会间接地告诉我的投资人，我们的招聘有问题\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm04.jpg)\n * 投资人最希望看到的是，保持每个员工都是高标准的。除非是要解雇一些重量级的人物，其他的不需要向投资人汇报，因为这种事他们一定见得比你多多啦～如果作为 CEO 每年给团队来一次大换血，可能确实是你的问题了；但一个创业公司如果从来没开过人，那也是一朵奇葩。\n\n####5.  我太忙了，为了慎重起见……\n ![](\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm05.jpg)\n * 扔掉所有这些借口，团队管理应该被管理者列为最高优先级。解雇不合适的人，做到直接、迅速、公平。\n   但注意，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇。重要的事情说三遍。\n\n***\n引用\n[不敢开除员工的创业者在想什么？](http://jiezhisz.baijia.baidu.com/article/170713)\n","slug":"不敢开除员工的创业者在想什么？","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfl000qkypvhih8fyvr","content":"<blockquote>\n<blockquote>\n<p>不敢开除员工的创业者在想什么？</p>\n<hr>\n</blockquote>\n</blockquote>\n<p>###创业公司 CEO 们决定要开人的时候，心里大多是拒绝的。但他们不久就会发现，这样做是同时帮了双方一个大忙。天使投资机构Homebrew合伙人 Hunter Walk 总结了他多年来从创业者那里听到的最多的几个理由：</p>\n<hr>\n<p>####1.  公司的活儿太多了，这些人或多或少也做了一点。<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm01.jpg\" alt=\"\"></p>\n<ul>\n<li>正因为创业公司组织简单，工作量大，少数“过分闲适”的人可能会占用其他员工的工作时间，来解决他们遗留的问题。顾客、合伙人、投资人甚至招聘时参观的人接触到他们之后，都会对公司的印象减分——他们传达出的负面信息是：在这里摸鱼是完全可以接受的。</li>\n</ul>\n<p>####2.  这些人很受欢迎，开了他们会对公司文化造成伤害<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm02.jpg\" alt=\"\"></p>\n<ul>\n<li>别傻了，真的因为工作在办公室里撕起来的有多少？即便这些人看起来很受欢迎，当他的拖沓的工作效率和低下的责任感已经对团队其他人的工作产生困扰，团队中的其他人会对管理者的不作为产生质疑。反思一下，你背后的一双双眼睛透露出的目光时充满干劲还是充满怨念？要知道，你每一天的拖延都是对团队本身的伤害。</li>\n</ul>\n<p>####3.  这是我的错，好的管理者应该能够把他们培养成更好的员工<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm03.jpg\" alt=\"\"></p>\n<ul>\n<li>错，好的管理者应该把精力放在激励表现好的员工，以及为团队带来更多人才上面。当出现问题时，你会想，是不是在招聘环节产生的食物造成这样的结果。或许是，但在意识到这个问题时，你该做的不是为已经掉在地上的黄油面包而懊悔，而是及时止损！</li>\n</ul>\n<p>####4.  这会不会间接地告诉我的投资人，我们的招聘有问题<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm04.jpg\" alt=\"\"></p>\n<ul>\n<li>投资人最希望看到的是，保持每个员工都是高标准的。除非是要解雇一些重量级的人物，其他的不需要向投资人汇报，因为这种事他们一定见得比你多多啦～如果作为 CEO 每年给团队来一次大换血，可能确实是你的问题了；但一个创业公司如果从来没开过人，那也是一朵奇葩。</li>\n</ul>\n<p>####5.  我太忙了，为了慎重起见……<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm05.jpg\" alt=\"\"></p>\n<ul>\n<li>扔掉所有这些借口，团队管理应该被管理者列为最高优先级。解雇不合适的人，做到直接、迅速、公平。<br>但注意，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇。重要的事情说三遍。</li>\n</ul>\n<hr>\n<p>引用<br><a href=\"http://jiezhisz.baijia.baidu.com/article/170713\" target=\"_blank\" rel=\"noopener\">不敢开除员工的创业者在想什么？</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<blockquote>\n<p>不敢开除员工的创业者在想什么？</p>\n<hr>\n</blockquote>\n</blockquote>\n<p>###创业公司 CEO 们决定要开人的时候，心里大多是拒绝的。但他们不久就会发现，这样做是同时帮了双方一个大忙。天使投资机构Homebrew合伙人 Hunter Walk 总结了他多年来从创业者那里听到的最多的几个理由：</p>\n<hr>\n<p>####1.  公司的活儿太多了，这些人或多或少也做了一点。<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm01.jpg\" alt=\"\"></p>\n<ul>\n<li>正因为创业公司组织简单，工作量大，少数“过分闲适”的人可能会占用其他员工的工作时间，来解决他们遗留的问题。顾客、合伙人、投资人甚至招聘时参观的人接触到他们之后，都会对公司的印象减分——他们传达出的负面信息是：在这里摸鱼是完全可以接受的。</li>\n</ul>\n<p>####2.  这些人很受欢迎，开了他们会对公司文化造成伤害<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm02.jpg\" alt=\"\"></p>\n<ul>\n<li>别傻了，真的因为工作在办公室里撕起来的有多少？即便这些人看起来很受欢迎，当他的拖沓的工作效率和低下的责任感已经对团队其他人的工作产生困扰，团队中的其他人会对管理者的不作为产生质疑。反思一下，你背后的一双双眼睛透露出的目光时充满干劲还是充满怨念？要知道，你每一天的拖延都是对团队本身的伤害。</li>\n</ul>\n<p>####3.  这是我的错，好的管理者应该能够把他们培养成更好的员工<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm03.jpg\" alt=\"\"></p>\n<ul>\n<li>错，好的管理者应该把精力放在激励表现好的员工，以及为团队带来更多人才上面。当出现问题时，你会想，是不是在招聘环节产生的食物造成这样的结果。或许是，但在意识到这个问题时，你该做的不是为已经掉在地上的黄油面包而懊悔，而是及时止损！</li>\n</ul>\n<p>####4.  这会不会间接地告诉我的投资人，我们的招聘有问题<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm04.jpg\" alt=\"\"></p>\n<ul>\n<li>投资人最希望看到的是，保持每个员工都是高标准的。除非是要解雇一些重量级的人物，其他的不需要向投资人汇报，因为这种事他们一定见得比你多多啦～如果作为 CEO 每年给团队来一次大换血，可能确实是你的问题了；但一个创业公司如果从来没开过人，那也是一朵奇葩。</li>\n</ul>\n<p>####5.  我太忙了，为了慎重起见……<br> <img src=\"\\imgs\\meiwen\\0918\\mw_bgkcygdcyzzxsm05.jpg\" alt=\"\"></p>\n<ul>\n<li>扔掉所有这些借口，团队管理应该被管理者列为最高优先级。解雇不合适的人，做到直接、迅速、公平。<br>但注意，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇，这并不意味着犯一次错就要解雇。重要的事情说三遍。</li>\n</ul>\n<hr>\n<p>引用<br><a href=\"http://jiezhisz.baijia.baidu.com/article/170713\" target=\"_blank\" rel=\"noopener\">不敢开除员工的创业者在想什么？</a></p>\n"},{"title":"工作总结","date":"2015-09-10T13:39:33.000Z","_content":"\n> ##工作总结\n\n***\n### 2014-09~2014-12\n  ####1. IOS\n* ios相关知识学习,oc,code\n* apple发布流程,账号申请,相关资源,相关限制\n* ios一键打包工具,打包只要一键就可完成,所有包的。\n\n####2. shader相关\n* 做弯曲和其他特效\n\n### 2015-01~2015-09\n####1. 排行榜的客户端逻辑。\n####2. 服务器相关\n* 服务器相关需求验证\n  使用哪个服务器,Scut,firefly,kbengine\n* 使用scutgame服务器.scutgame学习\n* 服务器部署相关\n* 服务器排行榜模块\n* 活动管理\n* 云端切换\n* 配置文件\n* 兑换码\n* 欢乐无尽\n \n####3. 服务器负载均衡实现\n* 未完成原因 点击连接\n* [连接](https://worktile.com/project/c1e089a399944875810d6b22246a18b0/task)\n         \n####4. 服务器自动化测试模块实现\n* 基于什么必须实现自动化测试脚本,修改后重复测试\n* 自动化测试脚本格式,可持续化测试\n* 实现\n* 优化\n\n####5. 游戏web后台\n* 使用浏览器来管理服务器相关数据。策划活动修改,黑名单,修改获取服务器相关数据。\n* web后台使用技术验证\n* python学些，django学习, 服务器配置文件修改\n\n***\n##看到的问题:\n###1. 程序\n * UI耗时\n \n###2. 和策划交流成本太高\n * 引用大家流行的一句话:\n  为什么需要明确的需求 Why Have Official Requirements\n  明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,\n  并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。\n  明确额的需求还有助于避免争论。\n \n * 没有整体规划，头痛医头，脚痛医脚\n 改颜色，改字体，纠正对某个页面的改了，好吧，最后花花绿绿的。\n 修改系统，没有回答程序为什么修改，如何修改，修改后要到达的目标。\n 永远都是不稳定的系统修改,由于总体规划，没有详细执行文档，往往策划拍脑门想出东西，程序当场改，下次又改回去,没有记录上次修改原因,自己都不知道为什么。\n \n * 建议 \n [参考](..\\..\\..\\)","source":"_posts/工作总结.md","raw":"title: 工作总结\ndate: 2015-09-10 09:39:33\ntags:\n- boss\n---\n\n> ##工作总结\n\n***\n### 2014-09~2014-12\n  ####1. IOS\n* ios相关知识学习,oc,code\n* apple发布流程,账号申请,相关资源,相关限制\n* ios一键打包工具,打包只要一键就可完成,所有包的。\n\n####2. shader相关\n* 做弯曲和其他特效\n\n### 2015-01~2015-09\n####1. 排行榜的客户端逻辑。\n####2. 服务器相关\n* 服务器相关需求验证\n  使用哪个服务器,Scut,firefly,kbengine\n* 使用scutgame服务器.scutgame学习\n* 服务器部署相关\n* 服务器排行榜模块\n* 活动管理\n* 云端切换\n* 配置文件\n* 兑换码\n* 欢乐无尽\n \n####3. 服务器负载均衡实现\n* 未完成原因 点击连接\n* [连接](https://worktile.com/project/c1e089a399944875810d6b22246a18b0/task)\n         \n####4. 服务器自动化测试模块实现\n* 基于什么必须实现自动化测试脚本,修改后重复测试\n* 自动化测试脚本格式,可持续化测试\n* 实现\n* 优化\n\n####5. 游戏web后台\n* 使用浏览器来管理服务器相关数据。策划活动修改,黑名单,修改获取服务器相关数据。\n* web后台使用技术验证\n* python学些，django学习, 服务器配置文件修改\n\n***\n##看到的问题:\n###1. 程序\n * UI耗时\n \n###2. 和策划交流成本太高\n * 引用大家流行的一句话:\n  为什么需要明确的需求 Why Have Official Requirements\n  明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,\n  并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。\n  明确额的需求还有助于避免争论。\n \n * 没有整体规划，头痛医头，脚痛医脚\n 改颜色，改字体，纠正对某个页面的改了，好吧，最后花花绿绿的。\n 修改系统，没有回答程序为什么修改，如何修改，修改后要到达的目标。\n 永远都是不稳定的系统修改,由于总体规划，没有详细执行文档，往往策划拍脑门想出东西，程序当场改，下次又改回去,没有记录上次修改原因,自己都不知道为什么。\n \n * 建议 \n [参考](..\\..\\..\\)","slug":"工作总结","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfm000rkypvmzrk2ow5","content":"<blockquote>\n<p>##工作总结</p>\n</blockquote>\n<hr>\n<h3 id=\"2014-09-2014-12\"><a href=\"#2014-09-2014-12\" class=\"headerlink\" title=\"2014-09~2014-12\"></a>2014-09~2014-12</h3><p>  ####1. IOS</p>\n<ul>\n<li>ios相关知识学习,oc,code</li>\n<li>apple发布流程,账号申请,相关资源,相关限制</li>\n<li>ios一键打包工具,打包只要一键就可完成,所有包的。</li>\n</ul>\n<p>####2. shader相关</p>\n<ul>\n<li>做弯曲和其他特效</li>\n</ul>\n<h3 id=\"2015-01-2015-09\"><a href=\"#2015-01-2015-09\" class=\"headerlink\" title=\"2015-01~2015-09\"></a>2015-01~2015-09</h3><p>####1. 排行榜的客户端逻辑。</p>\n<p>####2. 服务器相关</p>\n<ul>\n<li>服务器相关需求验证<br>使用哪个服务器,Scut,firefly,kbengine</li>\n<li>使用scutgame服务器.scutgame学习</li>\n<li>服务器部署相关</li>\n<li>服务器排行榜模块</li>\n<li>活动管理</li>\n<li>云端切换</li>\n<li>配置文件</li>\n<li>兑换码</li>\n<li>欢乐无尽</li>\n</ul>\n<p>####3. 服务器负载均衡实现</p>\n<ul>\n<li>未完成原因 点击连接</li>\n<li><a href=\"https://worktile.com/project/c1e089a399944875810d6b22246a18b0/task\" target=\"_blank\" rel=\"noopener\">连接</a></li>\n</ul>\n<p>####4. 服务器自动化测试模块实现</p>\n<ul>\n<li>基于什么必须实现自动化测试脚本,修改后重复测试</li>\n<li>自动化测试脚本格式,可持续化测试</li>\n<li>实现</li>\n<li>优化</li>\n</ul>\n<p>####5. 游戏web后台</p>\n<ul>\n<li>使用浏览器来管理服务器相关数据。策划活动修改,黑名单,修改获取服务器相关数据。</li>\n<li>web后台使用技术验证</li>\n<li>python学些，django学习, 服务器配置文件修改</li>\n</ul>\n<hr>\n<p>##看到的问题:</p>\n<p>###1. 程序</p>\n<ul>\n<li>UI耗时</li>\n</ul>\n<p>###2. 和策划交流成本太高</p>\n<ul>\n<li><p>引用大家流行的一句话:<br>为什么需要明确的需求 Why Have Official Requirements<br>明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,<br>并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。<br>明确额的需求还有助于避免争论。</p>\n</li>\n<li><p>没有整体规划，头痛医头，脚痛医脚<br>改颜色，改字体，纠正对某个页面的改了，好吧，最后花花绿绿的。<br>修改系统，没有回答程序为什么修改，如何修改，修改后要到达的目标。<br>永远都是不稳定的系统修改,由于总体规划，没有详细执行文档，往往策划拍脑门想出东西，程序当场改，下次又改回去,没有记录上次修改原因,自己都不知道为什么。</p>\n</li>\n<li><p>建议<br><a href=\"..\\..\\..\\\">参考</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>##工作总结</p>\n</blockquote>\n<hr>\n<h3 id=\"2014-09-2014-12\"><a href=\"#2014-09-2014-12\" class=\"headerlink\" title=\"2014-09~2014-12\"></a>2014-09~2014-12</h3><p>  ####1. IOS</p>\n<ul>\n<li>ios相关知识学习,oc,code</li>\n<li>apple发布流程,账号申请,相关资源,相关限制</li>\n<li>ios一键打包工具,打包只要一键就可完成,所有包的。</li>\n</ul>\n<p>####2. shader相关</p>\n<ul>\n<li>做弯曲和其他特效</li>\n</ul>\n<h3 id=\"2015-01-2015-09\"><a href=\"#2015-01-2015-09\" class=\"headerlink\" title=\"2015-01~2015-09\"></a>2015-01~2015-09</h3><p>####1. 排行榜的客户端逻辑。</p>\n<p>####2. 服务器相关</p>\n<ul>\n<li>服务器相关需求验证<br>使用哪个服务器,Scut,firefly,kbengine</li>\n<li>使用scutgame服务器.scutgame学习</li>\n<li>服务器部署相关</li>\n<li>服务器排行榜模块</li>\n<li>活动管理</li>\n<li>云端切换</li>\n<li>配置文件</li>\n<li>兑换码</li>\n<li>欢乐无尽</li>\n</ul>\n<p>####3. 服务器负载均衡实现</p>\n<ul>\n<li>未完成原因 点击连接</li>\n<li><a href=\"https://worktile.com/project/c1e089a399944875810d6b22246a18b0/task\" target=\"_blank\" rel=\"noopener\">连接</a></li>\n</ul>\n<p>####4. 服务器自动化测试模块实现</p>\n<ul>\n<li>基于什么必须实现自动化测试脚本,修改后重复测试</li>\n<li>自动化测试脚本格式,可持续化测试</li>\n<li>实现</li>\n<li>优化</li>\n</ul>\n<p>####5. 游戏web后台</p>\n<ul>\n<li>使用浏览器来管理服务器相关数据。策划活动修改,黑名单,修改获取服务器相关数据。</li>\n<li>web后台使用技术验证</li>\n<li>python学些，django学习, 服务器配置文件修改</li>\n</ul>\n<hr>\n<p>##看到的问题:</p>\n<p>###1. 程序</p>\n<ul>\n<li>UI耗时</li>\n</ul>\n<p>###2. 和策划交流成本太高</p>\n<ul>\n<li><p>引用大家流行的一句话:<br>为什么需要明确的需求 Why Have Official Requirements<br>明确的需求有助于确保是用户(而不是程序员)驾驭系统的功能,如果需求明确,那么用户可以自行评审,<br>并进行核准。否则,程序员就常常会在编码期间自行决定需求,明确的需求免得你去猜测用户想要的是什么。<br>明确额的需求还有助于避免争论。</p>\n</li>\n<li><p>没有整体规划，头痛医头，脚痛医脚<br>改颜色，改字体，纠正对某个页面的改了，好吧，最后花花绿绿的。<br>修改系统，没有回答程序为什么修改，如何修改，修改后要到达的目标。<br>永远都是不稳定的系统修改,由于总体规划，没有详细执行文档，往往策划拍脑门想出东西，程序当场改，下次又改回去,没有记录上次修改原因,自己都不知道为什么。</p>\n</li>\n<li><p>建议<br><a href=\"..\\..\\..\\\">参考</a></p>\n</li>\n</ul>\n"},{"title":"瑞士钟表匠","date":"2015-09-17T21:04:59.000Z","_content":">>##瑞士钟表匠\n***\n\n* 第一次读到这段话，我被深深地震撼了。“金字塔的建造者，绝不会是奴隶，而只能是一批欢快的自由人。”——原编者按\n1560年，瑞士钟表匠布克在游览金字塔时，做出这一石破天惊的推断。很长的时间，这个推论都被当作一个笑料。\n钟表匠一语道破：奴隶是造不出金字塔的\n然而，400年之后，也即2003年，埃及最高文物委员会宣布：通过对吉萨附近600处墓葬的发掘考证，金字塔是由当地具有自由身份的农民和手工业者建造的，而非希罗多德在《历史》中所记载——由30万奴隶所建造。\n历史在这里发生了一个拐点，穿过漫漫的历史烟尘，400年前，那个叫布克的小小钟表匠，究竟凭什么否定了伟大的希罗多德？何以一眼就能洞穿金字塔是自由人建造的？\n钟表匠一语道破：奴隶是造不出金字塔的\n埃及国家博物馆馆长多玛斯对布克产生了强烈兴趣，他一定要破解这个谜团。\n真相一步步被揭开：布克原是法国的一名天主教信徒，1536年，因反对罗马教廷的刻板教规，锒铛入狱。由于他是一位钟表制作大师，囚禁期间，被安排制作钟表。在那个失去自由的地方，布克发现无论狱方采取什么高压手段，自己无论如何都不能制作出日误差低于1/10秒的钟表；而在入狱之前，在自家的作坊里，布克能轻松制造出误差低于1/100秒的钟表。为什么会出现这种情况呢？布克苦苦思索。\n\n* 起先，布克以为是制造钟表的环境太差，后来布克越狱逃跑，又过上了自由的生活。在更糟糕的环境里，布克制造钟表的水准，竟然奇迹般地恢复了。此时，布克才发现真正影响钟表准确度的不是环境，而是制作钟表时的心情。\n在布克的资料中，多玛斯发现了这么两段话：“一个钟表匠在不满和愤懑中，要想圆满地完成制作钟表的1200道工序，是不可能的；在对抗和憎恨中，要精确地磨锉出一块钟表所需要的254个零件，更是比登天还难。”\n正因为如此，布克才能大胆推断：“金字塔这么浩大的工程，被建造得那么精细，各个环节被衔接得那么天衣无缝，建造者必定是一批怀有虔诚之心的自由人。难以想象，一群有懈怠行为和对抗思想的奴隶，绝不可能让金字塔的巨石之间连一片小小的刀片都插不进去。”\n布克后来成为瑞士钟表业的奠基人与开创者。瑞士到现在仍然保持着布克的制表理念：不与那些强制工人工作或克扣工人工资的外国企业联合。他们认为那样的企业永远也造不出瑞士表。\n也就是说：在过分指导和严格监管的地方，别指望有奇迹发生，因为人的能力，惟有在身心和谐的情况下，才能发挥到最佳水平。\n钟表匠一语道破：奴隶是造不出金字塔的\n电光石火，石破天惊，我想到了我们的教育。\n当前，我们的教育生态，恰恰就是以束缚、控制、压制、监管为特征；以大负荷、高速度和快节奏为根本；以每节课都是最后一课，每次测验都是最后一考相要挟。我们把水灵灵的教育业，弄成了干巴巴的制造业。我们只有制造，没有教育。我们只有统一模型的产品，没有千姿百态的学生。\n教育，绝不可能在恐惧中产生。\n恐惧会让学生失去生命的安全感，在这种倾斜之下，学生的心灵只有小心翼翼地自我保全，没有活泼泼地主动发展。这样的制造出来的学生，他们的心灵，既不会完整，更不会幸福。最要命的是，久而久之，一种平和的，充满好奇心的教育禀赋逐渐沦丧了。世界一片黑暗。\n而真的教育必须是：你的心不再被恐惧占领，不再被理想、符号、词语所裹挟，你必须敞开你所有的心灵和毛孔，直接和世界肌肤接触。你能闻见世界的味道和气息，触摸到它的柔软和质地，你的所见才是真实、永恒、不受时间限制的东西。当然，你要真正的实现它，还需要深刻的洞察力、领悟力以及坚忍力，你得永远保持你的敏感，并且和惯常的习性赛跑。\n钟表匠一语道破：奴隶是造不出金字塔的\n教育的意义是帮助你从孩提时代开始就不要去模仿任何人，永远都做你自己。我们必须杜绝依赖，依赖某个人或者某个观念，通过依赖激励自己，就会产生恐惧，这是虚假的激励。教育必须从生活中来，向生命里去，天地有大美而不言，万事都能激励人。叶片的落下、鸟儿的死亡，人们的行为举止。如果你注意这一切，你就一直在学习。保持永不停息的探索的心灵，从观察、挣扎、快乐与眼泪中学习。\n\n\n* 当我们永远处在发问之中，做一个世界的探询者，并且努力寻找事情的真相，我们就永远处在发展之中。人本来就是一个不完美的，但却知道自己不完美，并努力使自己完美的一种生物。不断地累积，不断地丰富，永远处在变化之中，这是人的局限，也是人的发展。\n如果一个人说他什么都知道了，那么他已经是死人了；如果一个人认为他什么都不知道，但一直在发现与了解，他不急于寻找终点，也不想达到什么或变成什么，只问攀登不问高。这种人才是活生生的，这样的人生就是真理。\n金字塔必须由自由人建造，教育，也必须在自由中产生。\n唯有自由的人，才有感悟的闲暇，创造的快乐。我们每天都在创造，我们为自己的创造而感动，我们独立赋予自己学习的意义，选择我们自以为有价值的生命质感。这个时候，我们的灵感在飞扬，思维在穿越，微笑和友谊都在潜滋暗长。\n为了自由，我们还必须摒弃经验。经验不能使人自由，透过经验学习，只是根据个人原有的局限所造出来的新模子，这个模子会阻碍人找到真正的自由。榜样有时候也是。自由是对自己的不断认识，从而达成的对人和世界的认识。\n遗憾的是，现在教育最缺乏的就是自由。对自由最大的压制就是教训，我们只有教训，没有教育。\n教训和教育，一字之差，谬以千里。我们往往把“教”与“训”混为一谈；但是在儒家两大作品《论语》和《学记》中，不但根本找不到一个“训”字，甚至连“教”字也用得极为少见。\n“学”是主动的，“教”是被动的，主动地“学”比被动地“教”更为有效，因此《论语》中有56个“学”字，《学记》中有48个“学”字，远远超过“教”字出现的频率。\n教育，只有在自由的状态下，才可能发生。为了提倡主动学习，反对强加于人，孔子不仅有“学而时习之，不亦乐乎”等主动学习的愉悦感受，还有“人之患，在好为人师”等谆谆告诫。\n真正的教育不应有也不会有训的成分；舍此，我们何以解释“教学相长”？师生围绕着问题，共同经历或者重新经历原初发现的伟大喜悦。\n伟大的教育家蒙特梭利则从人格培养的角度分析了强迫教育的危害。她说：“一个儿童，如果没有学会独自一个人行动，自主地控制他的作为，自动地管理他的意志，到了成人以后，他不但容易受到别人指挥，并且遇事非依赖别人不可。一个学校里的儿童，如果不断地受教师干涉，禁止，呵斥，以至于诟骂，结果会变成一种性格上很复杂的可怜虫。”\n而一个可怜虫注定是教育的残次品。\n如何制造出金字塔，注定是那些自由的人。教育，如何真正地发生？注定要让学生获得自由，免于恐惧。在现有的教育体制下，我们永远不会培养出真正的大师。\n真正的大师不会在恐惧和束缚中产生。如果不能给教育真正松绑，钱学森之问，会永远问下去，并且成为天问。","source":"_posts/瑞士钟表匠.md","raw":"title: 瑞士钟表匠\ndate: 2015-09-17 17:04:59\ntags:\n- 美文\n---\n>>##瑞士钟表匠\n***\n\n* 第一次读到这段话，我被深深地震撼了。“金字塔的建造者，绝不会是奴隶，而只能是一批欢快的自由人。”——原编者按\n1560年，瑞士钟表匠布克在游览金字塔时，做出这一石破天惊的推断。很长的时间，这个推论都被当作一个笑料。\n钟表匠一语道破：奴隶是造不出金字塔的\n然而，400年之后，也即2003年，埃及最高文物委员会宣布：通过对吉萨附近600处墓葬的发掘考证，金字塔是由当地具有自由身份的农民和手工业者建造的，而非希罗多德在《历史》中所记载——由30万奴隶所建造。\n历史在这里发生了一个拐点，穿过漫漫的历史烟尘，400年前，那个叫布克的小小钟表匠，究竟凭什么否定了伟大的希罗多德？何以一眼就能洞穿金字塔是自由人建造的？\n钟表匠一语道破：奴隶是造不出金字塔的\n埃及国家博物馆馆长多玛斯对布克产生了强烈兴趣，他一定要破解这个谜团。\n真相一步步被揭开：布克原是法国的一名天主教信徒，1536年，因反对罗马教廷的刻板教规，锒铛入狱。由于他是一位钟表制作大师，囚禁期间，被安排制作钟表。在那个失去自由的地方，布克发现无论狱方采取什么高压手段，自己无论如何都不能制作出日误差低于1/10秒的钟表；而在入狱之前，在自家的作坊里，布克能轻松制造出误差低于1/100秒的钟表。为什么会出现这种情况呢？布克苦苦思索。\n\n* 起先，布克以为是制造钟表的环境太差，后来布克越狱逃跑，又过上了自由的生活。在更糟糕的环境里，布克制造钟表的水准，竟然奇迹般地恢复了。此时，布克才发现真正影响钟表准确度的不是环境，而是制作钟表时的心情。\n在布克的资料中，多玛斯发现了这么两段话：“一个钟表匠在不满和愤懑中，要想圆满地完成制作钟表的1200道工序，是不可能的；在对抗和憎恨中，要精确地磨锉出一块钟表所需要的254个零件，更是比登天还难。”\n正因为如此，布克才能大胆推断：“金字塔这么浩大的工程，被建造得那么精细，各个环节被衔接得那么天衣无缝，建造者必定是一批怀有虔诚之心的自由人。难以想象，一群有懈怠行为和对抗思想的奴隶，绝不可能让金字塔的巨石之间连一片小小的刀片都插不进去。”\n布克后来成为瑞士钟表业的奠基人与开创者。瑞士到现在仍然保持着布克的制表理念：不与那些强制工人工作或克扣工人工资的外国企业联合。他们认为那样的企业永远也造不出瑞士表。\n也就是说：在过分指导和严格监管的地方，别指望有奇迹发生，因为人的能力，惟有在身心和谐的情况下，才能发挥到最佳水平。\n钟表匠一语道破：奴隶是造不出金字塔的\n电光石火，石破天惊，我想到了我们的教育。\n当前，我们的教育生态，恰恰就是以束缚、控制、压制、监管为特征；以大负荷、高速度和快节奏为根本；以每节课都是最后一课，每次测验都是最后一考相要挟。我们把水灵灵的教育业，弄成了干巴巴的制造业。我们只有制造，没有教育。我们只有统一模型的产品，没有千姿百态的学生。\n教育，绝不可能在恐惧中产生。\n恐惧会让学生失去生命的安全感，在这种倾斜之下，学生的心灵只有小心翼翼地自我保全，没有活泼泼地主动发展。这样的制造出来的学生，他们的心灵，既不会完整，更不会幸福。最要命的是，久而久之，一种平和的，充满好奇心的教育禀赋逐渐沦丧了。世界一片黑暗。\n而真的教育必须是：你的心不再被恐惧占领，不再被理想、符号、词语所裹挟，你必须敞开你所有的心灵和毛孔，直接和世界肌肤接触。你能闻见世界的味道和气息，触摸到它的柔软和质地，你的所见才是真实、永恒、不受时间限制的东西。当然，你要真正的实现它，还需要深刻的洞察力、领悟力以及坚忍力，你得永远保持你的敏感，并且和惯常的习性赛跑。\n钟表匠一语道破：奴隶是造不出金字塔的\n教育的意义是帮助你从孩提时代开始就不要去模仿任何人，永远都做你自己。我们必须杜绝依赖，依赖某个人或者某个观念，通过依赖激励自己，就会产生恐惧，这是虚假的激励。教育必须从生活中来，向生命里去，天地有大美而不言，万事都能激励人。叶片的落下、鸟儿的死亡，人们的行为举止。如果你注意这一切，你就一直在学习。保持永不停息的探索的心灵，从观察、挣扎、快乐与眼泪中学习。\n\n\n* 当我们永远处在发问之中，做一个世界的探询者，并且努力寻找事情的真相，我们就永远处在发展之中。人本来就是一个不完美的，但却知道自己不完美，并努力使自己完美的一种生物。不断地累积，不断地丰富，永远处在变化之中，这是人的局限，也是人的发展。\n如果一个人说他什么都知道了，那么他已经是死人了；如果一个人认为他什么都不知道，但一直在发现与了解，他不急于寻找终点，也不想达到什么或变成什么，只问攀登不问高。这种人才是活生生的，这样的人生就是真理。\n金字塔必须由自由人建造，教育，也必须在自由中产生。\n唯有自由的人，才有感悟的闲暇，创造的快乐。我们每天都在创造，我们为自己的创造而感动，我们独立赋予自己学习的意义，选择我们自以为有价值的生命质感。这个时候，我们的灵感在飞扬，思维在穿越，微笑和友谊都在潜滋暗长。\n为了自由，我们还必须摒弃经验。经验不能使人自由，透过经验学习，只是根据个人原有的局限所造出来的新模子，这个模子会阻碍人找到真正的自由。榜样有时候也是。自由是对自己的不断认识，从而达成的对人和世界的认识。\n遗憾的是，现在教育最缺乏的就是自由。对自由最大的压制就是教训，我们只有教训，没有教育。\n教训和教育，一字之差，谬以千里。我们往往把“教”与“训”混为一谈；但是在儒家两大作品《论语》和《学记》中，不但根本找不到一个“训”字，甚至连“教”字也用得极为少见。\n“学”是主动的，“教”是被动的，主动地“学”比被动地“教”更为有效，因此《论语》中有56个“学”字，《学记》中有48个“学”字，远远超过“教”字出现的频率。\n教育，只有在自由的状态下，才可能发生。为了提倡主动学习，反对强加于人，孔子不仅有“学而时习之，不亦乐乎”等主动学习的愉悦感受，还有“人之患，在好为人师”等谆谆告诫。\n真正的教育不应有也不会有训的成分；舍此，我们何以解释“教学相长”？师生围绕着问题，共同经历或者重新经历原初发现的伟大喜悦。\n伟大的教育家蒙特梭利则从人格培养的角度分析了强迫教育的危害。她说：“一个儿童，如果没有学会独自一个人行动，自主地控制他的作为，自动地管理他的意志，到了成人以后，他不但容易受到别人指挥，并且遇事非依赖别人不可。一个学校里的儿童，如果不断地受教师干涉，禁止，呵斥，以至于诟骂，结果会变成一种性格上很复杂的可怜虫。”\n而一个可怜虫注定是教育的残次品。\n如何制造出金字塔，注定是那些自由的人。教育，如何真正地发生？注定要让学生获得自由，免于恐惧。在现有的教育体制下，我们永远不会培养出真正的大师。\n真正的大师不会在恐惧和束缚中产生。如果不能给教育真正松绑，钱学森之问，会永远问下去，并且成为天问。","slug":"瑞士钟表匠","published":1,"updated":"2018-02-13T16:03:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdlxosfn000ukypv623o5hcm","content":"<blockquote>\n<blockquote>\n<p>##瑞士钟表匠</p>\n<hr>\n</blockquote>\n</blockquote>\n<ul>\n<li><p>第一次读到这段话，我被深深地震撼了。“金字塔的建造者，绝不会是奴隶，而只能是一批欢快的自由人。”——原编者按<br>1560年，瑞士钟表匠布克在游览金字塔时，做出这一石破天惊的推断。很长的时间，这个推论都被当作一个笑料。<br>钟表匠一语道破：奴隶是造不出金字塔的<br>然而，400年之后，也即2003年，埃及最高文物委员会宣布：通过对吉萨附近600处墓葬的发掘考证，金字塔是由当地具有自由身份的农民和手工业者建造的，而非希罗多德在《历史》中所记载——由30万奴隶所建造。<br>历史在这里发生了一个拐点，穿过漫漫的历史烟尘，400年前，那个叫布克的小小钟表匠，究竟凭什么否定了伟大的希罗多德？何以一眼就能洞穿金字塔是自由人建造的？<br>钟表匠一语道破：奴隶是造不出金字塔的<br>埃及国家博物馆馆长多玛斯对布克产生了强烈兴趣，他一定要破解这个谜团。<br>真相一步步被揭开：布克原是法国的一名天主教信徒，1536年，因反对罗马教廷的刻板教规，锒铛入狱。由于他是一位钟表制作大师，囚禁期间，被安排制作钟表。在那个失去自由的地方，布克发现无论狱方采取什么高压手段，自己无论如何都不能制作出日误差低于1/10秒的钟表；而在入狱之前，在自家的作坊里，布克能轻松制造出误差低于1/100秒的钟表。为什么会出现这种情况呢？布克苦苦思索。</p>\n</li>\n<li><p>起先，布克以为是制造钟表的环境太差，后来布克越狱逃跑，又过上了自由的生活。在更糟糕的环境里，布克制造钟表的水准，竟然奇迹般地恢复了。此时，布克才发现真正影响钟表准确度的不是环境，而是制作钟表时的心情。<br>在布克的资料中，多玛斯发现了这么两段话：“一个钟表匠在不满和愤懑中，要想圆满地完成制作钟表的1200道工序，是不可能的；在对抗和憎恨中，要精确地磨锉出一块钟表所需要的254个零件，更是比登天还难。”<br>正因为如此，布克才能大胆推断：“金字塔这么浩大的工程，被建造得那么精细，各个环节被衔接得那么天衣无缝，建造者必定是一批怀有虔诚之心的自由人。难以想象，一群有懈怠行为和对抗思想的奴隶，绝不可能让金字塔的巨石之间连一片小小的刀片都插不进去。”<br>布克后来成为瑞士钟表业的奠基人与开创者。瑞士到现在仍然保持着布克的制表理念：不与那些强制工人工作或克扣工人工资的外国企业联合。他们认为那样的企业永远也造不出瑞士表。<br>也就是说：在过分指导和严格监管的地方，别指望有奇迹发生，因为人的能力，惟有在身心和谐的情况下，才能发挥到最佳水平。<br>钟表匠一语道破：奴隶是造不出金字塔的<br>电光石火，石破天惊，我想到了我们的教育。<br>当前，我们的教育生态，恰恰就是以束缚、控制、压制、监管为特征；以大负荷、高速度和快节奏为根本；以每节课都是最后一课，每次测验都是最后一考相要挟。我们把水灵灵的教育业，弄成了干巴巴的制造业。我们只有制造，没有教育。我们只有统一模型的产品，没有千姿百态的学生。<br>教育，绝不可能在恐惧中产生。<br>恐惧会让学生失去生命的安全感，在这种倾斜之下，学生的心灵只有小心翼翼地自我保全，没有活泼泼地主动发展。这样的制造出来的学生，他们的心灵，既不会完整，更不会幸福。最要命的是，久而久之，一种平和的，充满好奇心的教育禀赋逐渐沦丧了。世界一片黑暗。<br>而真的教育必须是：你的心不再被恐惧占领，不再被理想、符号、词语所裹挟，你必须敞开你所有的心灵和毛孔，直接和世界肌肤接触。你能闻见世界的味道和气息，触摸到它的柔软和质地，你的所见才是真实、永恒、不受时间限制的东西。当然，你要真正的实现它，还需要深刻的洞察力、领悟力以及坚忍力，你得永远保持你的敏感，并且和惯常的习性赛跑。<br>钟表匠一语道破：奴隶是造不出金字塔的<br>教育的意义是帮助你从孩提时代开始就不要去模仿任何人，永远都做你自己。我们必须杜绝依赖，依赖某个人或者某个观念，通过依赖激励自己，就会产生恐惧，这是虚假的激励。教育必须从生活中来，向生命里去，天地有大美而不言，万事都能激励人。叶片的落下、鸟儿的死亡，人们的行为举止。如果你注意这一切，你就一直在学习。保持永不停息的探索的心灵，从观察、挣扎、快乐与眼泪中学习。</p>\n</li>\n</ul>\n<ul>\n<li>当我们永远处在发问之中，做一个世界的探询者，并且努力寻找事情的真相，我们就永远处在发展之中。人本来就是一个不完美的，但却知道自己不完美，并努力使自己完美的一种生物。不断地累积，不断地丰富，永远处在变化之中，这是人的局限，也是人的发展。<br>如果一个人说他什么都知道了，那么他已经是死人了；如果一个人认为他什么都不知道，但一直在发现与了解，他不急于寻找终点，也不想达到什么或变成什么，只问攀登不问高。这种人才是活生生的，这样的人生就是真理。<br>金字塔必须由自由人建造，教育，也必须在自由中产生。<br>唯有自由的人，才有感悟的闲暇，创造的快乐。我们每天都在创造，我们为自己的创造而感动，我们独立赋予自己学习的意义，选择我们自以为有价值的生命质感。这个时候，我们的灵感在飞扬，思维在穿越，微笑和友谊都在潜滋暗长。<br>为了自由，我们还必须摒弃经验。经验不能使人自由，透过经验学习，只是根据个人原有的局限所造出来的新模子，这个模子会阻碍人找到真正的自由。榜样有时候也是。自由是对自己的不断认识，从而达成的对人和世界的认识。<br>遗憾的是，现在教育最缺乏的就是自由。对自由最大的压制就是教训，我们只有教训，没有教育。<br>教训和教育，一字之差，谬以千里。我们往往把“教”与“训”混为一谈；但是在儒家两大作品《论语》和《学记》中，不但根本找不到一个“训”字，甚至连“教”字也用得极为少见。<br>“学”是主动的，“教”是被动的，主动地“学”比被动地“教”更为有效，因此《论语》中有56个“学”字，《学记》中有48个“学”字，远远超过“教”字出现的频率。<br>教育，只有在自由的状态下，才可能发生。为了提倡主动学习，反对强加于人，孔子不仅有“学而时习之，不亦乐乎”等主动学习的愉悦感受，还有“人之患，在好为人师”等谆谆告诫。<br>真正的教育不应有也不会有训的成分；舍此，我们何以解释“教学相长”？师生围绕着问题，共同经历或者重新经历原初发现的伟大喜悦。<br>伟大的教育家蒙特梭利则从人格培养的角度分析了强迫教育的危害。她说：“一个儿童，如果没有学会独自一个人行动，自主地控制他的作为，自动地管理他的意志，到了成人以后，他不但容易受到别人指挥，并且遇事非依赖别人不可。一个学校里的儿童，如果不断地受教师干涉，禁止，呵斥，以至于诟骂，结果会变成一种性格上很复杂的可怜虫。”<br>而一个可怜虫注定是教育的残次品。<br>如何制造出金字塔，注定是那些自由的人。教育，如何真正地发生？注定要让学生获得自由，免于恐惧。在现有的教育体制下，我们永远不会培养出真正的大师。<br>真正的大师不会在恐惧和束缚中产生。如果不能给教育真正松绑，钱学森之问，会永远问下去，并且成为天问。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<blockquote>\n<p>##瑞士钟表匠</p>\n<hr>\n</blockquote>\n</blockquote>\n<ul>\n<li><p>第一次读到这段话，我被深深地震撼了。“金字塔的建造者，绝不会是奴隶，而只能是一批欢快的自由人。”——原编者按<br>1560年，瑞士钟表匠布克在游览金字塔时，做出这一石破天惊的推断。很长的时间，这个推论都被当作一个笑料。<br>钟表匠一语道破：奴隶是造不出金字塔的<br>然而，400年之后，也即2003年，埃及最高文物委员会宣布：通过对吉萨附近600处墓葬的发掘考证，金字塔是由当地具有自由身份的农民和手工业者建造的，而非希罗多德在《历史》中所记载——由30万奴隶所建造。<br>历史在这里发生了一个拐点，穿过漫漫的历史烟尘，400年前，那个叫布克的小小钟表匠，究竟凭什么否定了伟大的希罗多德？何以一眼就能洞穿金字塔是自由人建造的？<br>钟表匠一语道破：奴隶是造不出金字塔的<br>埃及国家博物馆馆长多玛斯对布克产生了强烈兴趣，他一定要破解这个谜团。<br>真相一步步被揭开：布克原是法国的一名天主教信徒，1536年，因反对罗马教廷的刻板教规，锒铛入狱。由于他是一位钟表制作大师，囚禁期间，被安排制作钟表。在那个失去自由的地方，布克发现无论狱方采取什么高压手段，自己无论如何都不能制作出日误差低于1/10秒的钟表；而在入狱之前，在自家的作坊里，布克能轻松制造出误差低于1/100秒的钟表。为什么会出现这种情况呢？布克苦苦思索。</p>\n</li>\n<li><p>起先，布克以为是制造钟表的环境太差，后来布克越狱逃跑，又过上了自由的生活。在更糟糕的环境里，布克制造钟表的水准，竟然奇迹般地恢复了。此时，布克才发现真正影响钟表准确度的不是环境，而是制作钟表时的心情。<br>在布克的资料中，多玛斯发现了这么两段话：“一个钟表匠在不满和愤懑中，要想圆满地完成制作钟表的1200道工序，是不可能的；在对抗和憎恨中，要精确地磨锉出一块钟表所需要的254个零件，更是比登天还难。”<br>正因为如此，布克才能大胆推断：“金字塔这么浩大的工程，被建造得那么精细，各个环节被衔接得那么天衣无缝，建造者必定是一批怀有虔诚之心的自由人。难以想象，一群有懈怠行为和对抗思想的奴隶，绝不可能让金字塔的巨石之间连一片小小的刀片都插不进去。”<br>布克后来成为瑞士钟表业的奠基人与开创者。瑞士到现在仍然保持着布克的制表理念：不与那些强制工人工作或克扣工人工资的外国企业联合。他们认为那样的企业永远也造不出瑞士表。<br>也就是说：在过分指导和严格监管的地方，别指望有奇迹发生，因为人的能力，惟有在身心和谐的情况下，才能发挥到最佳水平。<br>钟表匠一语道破：奴隶是造不出金字塔的<br>电光石火，石破天惊，我想到了我们的教育。<br>当前，我们的教育生态，恰恰就是以束缚、控制、压制、监管为特征；以大负荷、高速度和快节奏为根本；以每节课都是最后一课，每次测验都是最后一考相要挟。我们把水灵灵的教育业，弄成了干巴巴的制造业。我们只有制造，没有教育。我们只有统一模型的产品，没有千姿百态的学生。<br>教育，绝不可能在恐惧中产生。<br>恐惧会让学生失去生命的安全感，在这种倾斜之下，学生的心灵只有小心翼翼地自我保全，没有活泼泼地主动发展。这样的制造出来的学生，他们的心灵，既不会完整，更不会幸福。最要命的是，久而久之，一种平和的，充满好奇心的教育禀赋逐渐沦丧了。世界一片黑暗。<br>而真的教育必须是：你的心不再被恐惧占领，不再被理想、符号、词语所裹挟，你必须敞开你所有的心灵和毛孔，直接和世界肌肤接触。你能闻见世界的味道和气息，触摸到它的柔软和质地，你的所见才是真实、永恒、不受时间限制的东西。当然，你要真正的实现它，还需要深刻的洞察力、领悟力以及坚忍力，你得永远保持你的敏感，并且和惯常的习性赛跑。<br>钟表匠一语道破：奴隶是造不出金字塔的<br>教育的意义是帮助你从孩提时代开始就不要去模仿任何人，永远都做你自己。我们必须杜绝依赖，依赖某个人或者某个观念，通过依赖激励自己，就会产生恐惧，这是虚假的激励。教育必须从生活中来，向生命里去，天地有大美而不言，万事都能激励人。叶片的落下、鸟儿的死亡，人们的行为举止。如果你注意这一切，你就一直在学习。保持永不停息的探索的心灵，从观察、挣扎、快乐与眼泪中学习。</p>\n</li>\n</ul>\n<ul>\n<li>当我们永远处在发问之中，做一个世界的探询者，并且努力寻找事情的真相，我们就永远处在发展之中。人本来就是一个不完美的，但却知道自己不完美，并努力使自己完美的一种生物。不断地累积，不断地丰富，永远处在变化之中，这是人的局限，也是人的发展。<br>如果一个人说他什么都知道了，那么他已经是死人了；如果一个人认为他什么都不知道，但一直在发现与了解，他不急于寻找终点，也不想达到什么或变成什么，只问攀登不问高。这种人才是活生生的，这样的人生就是真理。<br>金字塔必须由自由人建造，教育，也必须在自由中产生。<br>唯有自由的人，才有感悟的闲暇，创造的快乐。我们每天都在创造，我们为自己的创造而感动，我们独立赋予自己学习的意义，选择我们自以为有价值的生命质感。这个时候，我们的灵感在飞扬，思维在穿越，微笑和友谊都在潜滋暗长。<br>为了自由，我们还必须摒弃经验。经验不能使人自由，透过经验学习，只是根据个人原有的局限所造出来的新模子，这个模子会阻碍人找到真正的自由。榜样有时候也是。自由是对自己的不断认识，从而达成的对人和世界的认识。<br>遗憾的是，现在教育最缺乏的就是自由。对自由最大的压制就是教训，我们只有教训，没有教育。<br>教训和教育，一字之差，谬以千里。我们往往把“教”与“训”混为一谈；但是在儒家两大作品《论语》和《学记》中，不但根本找不到一个“训”字，甚至连“教”字也用得极为少见。<br>“学”是主动的，“教”是被动的，主动地“学”比被动地“教”更为有效，因此《论语》中有56个“学”字，《学记》中有48个“学”字，远远超过“教”字出现的频率。<br>教育，只有在自由的状态下，才可能发生。为了提倡主动学习，反对强加于人，孔子不仅有“学而时习之，不亦乐乎”等主动学习的愉悦感受，还有“人之患，在好为人师”等谆谆告诫。<br>真正的教育不应有也不会有训的成分；舍此，我们何以解释“教学相长”？师生围绕着问题，共同经历或者重新经历原初发现的伟大喜悦。<br>伟大的教育家蒙特梭利则从人格培养的角度分析了强迫教育的危害。她说：“一个儿童，如果没有学会独自一个人行动，自主地控制他的作为，自动地管理他的意志，到了成人以后，他不但容易受到别人指挥，并且遇事非依赖别人不可。一个学校里的儿童，如果不断地受教师干涉，禁止，呵斥，以至于诟骂，结果会变成一种性格上很复杂的可怜虫。”<br>而一个可怜虫注定是教育的残次品。<br>如何制造出金字塔，注定是那些自由的人。教育，如何真正地发生？注定要让学生获得自由，免于恐惧。在现有的教育体制下，我们永远不会培养出真正的大师。<br>真正的大师不会在恐惧和束缚中产生。如果不能给教育真正松绑，钱学森之问，会永远问下去，并且成为天问。</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjdlxosev0001kypvtr89exll","tag_id":"cjdlxosey0003kypvsirqz3c5","_id":"cjdlxosf70008kypvj3ipa2cz"},{"post_id":"cjdlxosex0002kypvoieqmjir","tag_id":"cjdlxosf60007kypvs33fziva","_id":"cjdlxosfg000gkypv046xhvnu"},{"post_id":"cjdlxosex0002kypvoieqmjir","tag_id":"cjdlxosf9000bkypv667c9t3n","_id":"cjdlxosfh000ikypvu9le3s6e"},{"post_id":"cjdlxosf40004kypvneh740vx","tag_id":"cjdlxosfb000ekypvcdjfpcsx","_id":"cjdlxosfi000lkypvegpnseci"},{"post_id":"cjdlxosf50005kypv59n0eo2w","tag_id":"cjdlxosfh000jkypv5qx4w0c2","_id":"cjdlxosfl000pkypvcdcrogv2"},{"post_id":"cjdlxosf60006kypvhfvodt1m","tag_id":"cjdlxosfh000jkypv5qx4w0c2","_id":"cjdlxosfn000tkypvggw01mnm"},{"post_id":"cjdlxosf70009kypvr8yl90ra","tag_id":"cjdlxosf9000bkypv667c9t3n","_id":"cjdlxosfo000wkypvt60nvi0a"},{"post_id":"cjdlxosf8000akypve0i2bftd","tag_id":"cjdlxosfo000vkypvt702i04n","_id":"cjdlxosfp000ykypvo211sdel"},{"post_id":"cjdlxosfa000ckypvddp76s4j","tag_id":"cjdlxosfo000vkypvt702i04n","_id":"cjdlxosfq0011kypvld0paqdr"},{"post_id":"cjdlxosfa000ckypvddp76s4j","tag_id":"cjdlxosfp000zkypvv9vr06n4","_id":"cjdlxosft0012kypvkb2n2rt8"},{"post_id":"cjdlxosfb000dkypv5fyr3kxe","tag_id":"cjdlxosfo000vkypvt702i04n","_id":"cjdlxosfu0014kypv5dbd9x8p"},{"post_id":"cjdlxosfg000hkypv18kb3lsq","tag_id":"cjdlxosft0013kypvpilp1hf1","_id":"cjdlxosfv0017kypvwz8ljroc"},{"post_id":"cjdlxosfg000hkypv18kb3lsq","tag_id":"cjdlxosfu0015kypv1l8u738r","_id":"cjdlxosfv0018kypv33ja2usg"},{"post_id":"cjdlxosfh000kkypvvt83a5pq","tag_id":"cjdlxosfv0016kypvzjivubyx","_id":"cjdlxosfw001akypv4uy6tbgr"},{"post_id":"cjdlxosfi000mkypv3mbwv5ml","tag_id":"cjdlxosfp000zkypvv9vr06n4","_id":"cjdlxosfx001dkypv5g6yh8a0"},{"post_id":"cjdlxosfi000mkypv3mbwv5ml","tag_id":"cjdlxosfw001bkypvciprqkxu","_id":"cjdlxosfx001ekypvuj5xuw1b"},{"post_id":"cjdlxosfj000nkypv3q99fbch","tag_id":"cjdlxosfw001bkypvciprqkxu","_id":"cjdlxosfx001gkypvlwkmsohl"},{"post_id":"cjdlxosfl000qkypvhih8fyvr","tag_id":"cjdlxosfx001fkypvf79jqoxp","_id":"cjdlxosfy001ikypvl57h8hil"},{"post_id":"cjdlxosfm000rkypvmzrk2ow5","tag_id":"cjdlxosfy001hkypvbmt2m2p7","_id":"cjdlxosfy001kkypvfo4ms0lq"},{"post_id":"cjdlxosfn000ukypv623o5hcm","tag_id":"cjdlxosfx001fkypvf79jqoxp","_id":"cjdlxosfz001lkypvsbuym1tn"}],"Tag":[{"name":"protobuf","_id":"cjdlxosey0003kypvsirqz3c5"},{"name":"python","_id":"cjdlxosf60007kypvs33fziva"},{"name":"django","_id":"cjdlxosf9000bkypv667c9t3n"},{"name":"Software Requirements","_id":"cjdlxosfb000ekypvcdjfpcsx"},{"name":"CODE COMPLETE","_id":"cjdlxosfh000jkypv5qx4w0c2"},{"name":"git","_id":"cjdlxosfo000vkypvt702i04n"},{"name":"tools","_id":"cjdlxosfp000zkypvv9vr06n4"},{"name":"LINUX","_id":"cjdlxosft0013kypvpilp1hf1"},{"name":"cmd-line","_id":"cjdlxosfu0015kypv1l8u738r"},{"name":"mysql","_id":"cjdlxosfv0016kypvzjivubyx"},{"name":"visual studio","_id":"cjdlxosfw001bkypvciprqkxu"},{"name":"美文","_id":"cjdlxosfx001fkypvf79jqoxp"},{"name":"boss","_id":"cjdlxosfy001hkypvbmt2m2p7"}]}}